//! fiat-crypto output postprocessed by fiat-constify: <https://github.com/rustcrypto/utils>
//! Autogenerated: fiat-crypto word-by-word-montgomery --lang Rust --inline bp512_scalar 64 0xaadd9db8dbe9c48b3fd4e6ae33c9fc07cb308db3b3c9d20ed6639cca70330870553e5c414ca92619418661197fac10471db1d381085ddaddb58796829ca90069 mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes one msat divstep divstep_precomp
//! curve description: bp512_scalar
//! machine_wordsize = 64 (from "64")
//! requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes, one, msat, divstep, divstep_precomp
//! m = 0xaadd9db8dbe9c48b3fd4e6ae33c9fc07cb308db3b3c9d20ed6639cca70330870553e5c414ca92619418661197fac10471db1d381085ddaddb58796829ca90069 (from "0xaadd9db8dbe9c48b3fd4e6ae33c9fc07cb308db3b3c9d20ed6639cca70330870553e5c414ca92619418661197fac10471db1d381085ddaddb58796829ca90069")
//!
//! NOTE: In addition to the bounds specified above each function, all
//!   functions synthesized for this Montgomery arithmetic require the
//!   input to be strictly less than the prime modulus (m), and also
//!   require the input to be in the unique saturated representation.
//!   All functions also ensure that these two properties are true of
//!   return values.
//!
//! Computed values:
//!   eval z = z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140) + (z[6] << 0x180) + (z[7] << 0x1c0)
//!   bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) + (z[32] << 256) + (z[33] << 0x108) + (z[34] << 0x110) + (z[35] << 0x118) + (z[36] << 0x120) + (z[37] << 0x128) + (z[38] << 0x130) + (z[39] << 0x138) + (z[40] << 0x140) + (z[41] << 0x148) + (z[42] << 0x150) + (z[43] << 0x158) + (z[44] << 0x160) + (z[45] << 0x168) + (z[46] << 0x170) + (z[47] << 0x178) + (z[48] << 0x180) + (z[49] << 0x188) + (z[50] << 0x190) + (z[51] << 0x198) + (z[52] << 0x1a0) + (z[53] << 0x1a8) + (z[54] << 0x1b0) + (z[55] << 0x1b8) + (z[56] << 0x1c0) + (z[57] << 0x1c8) + (z[58] << 0x1d0) + (z[59] << 0x1d8) + (z[60] << 0x1e0) + (z[61] << 0x1e8) + (z[62] << 0x1f0) + (z[63] << 0x1f8)
//!   twos_complement_eval z = let x1 := z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) + (z[4] << 256) + (z[5] << 0x140) + (z[6] << 0x180) + (z[7] << 0x1c0) in
//!                            if x1 & (2^512-1) < 2^511 then x1 & (2^512-1) else (x1 & (2^512-1)) - 2^512
#![allow(unused_parens)]
#![allow(non_camel_case_types)]
#![allow(
    clippy::identity_op,
    clippy::too_many_arguments,
    clippy::unnecessary_cast,
    dead_code
)]
/// fiat_bp512_scalar_u1 represents values of 1 bits, stored in one byte.
pub type fiat_bp512_scalar_u1 = u8;
/// fiat_bp512_scalar_i1 represents values of 1 bits, stored in one byte.
pub type fiat_bp512_scalar_i1 = i8;
/// fiat_bp512_scalar_u2 represents values of 2 bits, stored in one byte.
pub type fiat_bp512_scalar_u2 = u8;
/// fiat_bp512_scalar_i2 represents values of 2 bits, stored in one byte.
pub type fiat_bp512_scalar_i2 = i8;
/// The type fiat_bp512_scalar_montgomery_domain_field_element is a field element in the Montgomery domain.
/// Bounds: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord)]
pub struct fiat_bp512_scalar_montgomery_domain_field_element(pub [u64; 8]);
impl core::ops::Index<usize> for fiat_bp512_scalar_montgomery_domain_field_element {
    type Output = u64;
    #[inline]
    fn index(&self, index: usize) -> &Self::Output {
        &self.0[index]
    }
}
impl core::ops::IndexMut<usize> for fiat_bp512_scalar_montgomery_domain_field_element {
    #[inline]
    fn index_mut(&mut self, index: usize) -> &mut Self::Output {
        &mut self.0[index]
    }
}
/// The type fiat_bp512_scalar_non_montgomery_domain_field_element is a field element NOT in the Montgomery domain.
/// Bounds: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord)]
pub struct fiat_bp512_scalar_non_montgomery_domain_field_element(pub [u64; 8]);
impl core::ops::Index<usize> for fiat_bp512_scalar_non_montgomery_domain_field_element {
    type Output = u64;
    #[inline]
    fn index(&self, index: usize) -> &Self::Output {
        &self.0[index]
    }
}
impl core::ops::IndexMut<usize> for fiat_bp512_scalar_non_montgomery_domain_field_element {
    #[inline]
    fn index_mut(&mut self, index: usize) -> &mut Self::Output {
        &mut self.0[index]
    }
}
/// The function fiat_bp512_scalar_addcarryx_u64 is an addition with carry.
///
/// Postconditions:
///   out1 = (arg1 + arg2 + arg3) mod 2^64
///   out2 = ⌊(arg1 + arg2 + arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub const fn fiat_bp512_scalar_addcarryx_u64(
    out1: &mut u64,
    out2: &mut fiat_bp512_scalar_u1,
    arg1: fiat_bp512_scalar_u1,
    arg2: u64,
    arg3: u64,
) {
    let x1: u128 = (((arg1 as u128) + (arg2 as u128)) + (arg3 as u128));
    let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
    let x3: fiat_bp512_scalar_u1 = ((x1 >> 64) as fiat_bp512_scalar_u1);
    *out1 = x2;
    *out2 = x3;
}
/// The function fiat_bp512_scalar_subborrowx_u64 is a subtraction with borrow.
///
/// Postconditions:
///   out1 = (-arg1 + arg2 + -arg3) mod 2^64
///   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0x1]
#[inline]
pub const fn fiat_bp512_scalar_subborrowx_u64(
    out1: &mut u64,
    out2: &mut fiat_bp512_scalar_u1,
    arg1: fiat_bp512_scalar_u1,
    arg2: u64,
    arg3: u64,
) {
    let x1: i128 = (((arg2 as i128) - (arg1 as i128)) - (arg3 as i128));
    let x2: fiat_bp512_scalar_i1 = ((x1 >> 64) as fiat_bp512_scalar_i1);
    let x3: u64 = ((x1 & (0xffffffffffffffff as i128)) as u64);
    *out1 = x3;
    *out2 =
        (((0x0 as fiat_bp512_scalar_i2) - (x2 as fiat_bp512_scalar_i2)) as fiat_bp512_scalar_u1);
}
/// The function fiat_bp512_scalar_mulx_u64 is a multiplication, returning the full double-width result.
///
/// Postconditions:
///   out1 = (arg1 * arg2) mod 2^64
///   out2 = ⌊arg1 * arg2 / 2^64⌋
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub const fn fiat_bp512_scalar_mulx_u64(out1: &mut u64, out2: &mut u64, arg1: u64, arg2: u64) {
    let x1: u128 = ((arg1 as u128) * (arg2 as u128));
    let x2: u64 = ((x1 & (0xffffffffffffffff as u128)) as u64);
    let x3: u64 = ((x1 >> 64) as u64);
    *out1 = x2;
    *out2 = x3;
}
/// The function fiat_bp512_scalar_cmovznz_u64 is a single-word conditional move.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [0x0 ~> 0xffffffffffffffff]
///   arg3: [0x0 ~> 0xffffffffffffffff]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub const fn fiat_bp512_scalar_cmovznz_u64(
    out1: &mut u64,
    arg1: fiat_bp512_scalar_u1,
    arg2: u64,
    arg3: u64,
) {
    let x1: fiat_bp512_scalar_u1 = (!(!arg1));
    let x2: u64 = ((((((0x0 as fiat_bp512_scalar_i2) - (x1 as fiat_bp512_scalar_i2))
        as fiat_bp512_scalar_i1) as i128)
        & (0xffffffffffffffff as i128)) as u64);
    let x3: u64 = ((x2 & arg3) | ((!x2) & arg2));
    *out1 = x3;
}
/// The function fiat_bp512_scalar_mul multiplies two field elements in the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_mul(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
    arg2: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let arg2 = &arg2.0;
    let x1: u64 = (arg1[1]);
    let x2: u64 = (arg1[2]);
    let x3: u64 = (arg1[3]);
    let x4: u64 = (arg1[4]);
    let x5: u64 = (arg1[5]);
    let x6: u64 = (arg1[6]);
    let x7: u64 = (arg1[7]);
    let x8: u64 = (arg1[0]);
    let mut x9: u64 = 0;
    let mut x10: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x9, &mut x10, x8, (arg2[7]));
    let mut x11: u64 = 0;
    let mut x12: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x11, &mut x12, x8, (arg2[6]));
    let mut x13: u64 = 0;
    let mut x14: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x13, &mut x14, x8, (arg2[5]));
    let mut x15: u64 = 0;
    let mut x16: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x15, &mut x16, x8, (arg2[4]));
    let mut x17: u64 = 0;
    let mut x18: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x17, &mut x18, x8, (arg2[3]));
    let mut x19: u64 = 0;
    let mut x20: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x19, &mut x20, x8, (arg2[2]));
    let mut x21: u64 = 0;
    let mut x22: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x21, &mut x22, x8, (arg2[1]));
    let mut x23: u64 = 0;
    let mut x24: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x23, &mut x24, x8, (arg2[0]));
    let mut x25: u64 = 0;
    let mut x26: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x25, &mut x26, 0x0, x24, x21);
    let mut x27: u64 = 0;
    let mut x28: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x27, &mut x28, x26, x22, x19);
    let mut x29: u64 = 0;
    let mut x30: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x29, &mut x30, x28, x20, x17);
    let mut x31: u64 = 0;
    let mut x32: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x31, &mut x32, x30, x18, x15);
    let mut x33: u64 = 0;
    let mut x34: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x33, &mut x34, x32, x16, x13);
    let mut x35: u64 = 0;
    let mut x36: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x35, &mut x36, x34, x14, x11);
    let mut x37: u64 = 0;
    let mut x38: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x37, &mut x38, x36, x12, x9);
    let x39: u64 = ((x38 as u64) + x10);
    let mut x40: u64 = 0;
    let mut x41: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x40, &mut x41, x23, 0xad49541f0f1b7027);
    let mut x42: u64 = 0;
    let mut x43: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x42, &mut x43, x40, 0xaadd9db8dbe9c48b);
    let mut x44: u64 = 0;
    let mut x45: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x44, &mut x45, x40, 0x3fd4e6ae33c9fc07);
    let mut x46: u64 = 0;
    let mut x47: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x46, &mut x47, x40, 0xcb308db3b3c9d20e);
    let mut x48: u64 = 0;
    let mut x49: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x48, &mut x49, x40, 0xd6639cca70330870);
    let mut x50: u64 = 0;
    let mut x51: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x50, &mut x51, x40, 0x553e5c414ca92619);
    let mut x52: u64 = 0;
    let mut x53: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x52, &mut x53, x40, 0x418661197fac1047);
    let mut x54: u64 = 0;
    let mut x55: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x54, &mut x55, x40, 0x1db1d381085ddadd);
    let mut x56: u64 = 0;
    let mut x57: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x56, &mut x57, x40, 0xb58796829ca90069);
    let mut x58: u64 = 0;
    let mut x59: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x58, &mut x59, 0x0, x57, x54);
    let mut x60: u64 = 0;
    let mut x61: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x60, &mut x61, x59, x55, x52);
    let mut x62: u64 = 0;
    let mut x63: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x62, &mut x63, x61, x53, x50);
    let mut x64: u64 = 0;
    let mut x65: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x64, &mut x65, x63, x51, x48);
    let mut x66: u64 = 0;
    let mut x67: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x66, &mut x67, x65, x49, x46);
    let mut x68: u64 = 0;
    let mut x69: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x68, &mut x69, x67, x47, x44);
    let mut x70: u64 = 0;
    let mut x71: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x70, &mut x71, x69, x45, x42);
    let x72: u64 = ((x71 as u64) + x43);
    let mut x73: u64 = 0;
    let mut x74: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x73, &mut x74, 0x0, x23, x56);
    let mut x75: u64 = 0;
    let mut x76: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x75, &mut x76, x74, x25, x58);
    let mut x77: u64 = 0;
    let mut x78: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x77, &mut x78, x76, x27, x60);
    let mut x79: u64 = 0;
    let mut x80: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x79, &mut x80, x78, x29, x62);
    let mut x81: u64 = 0;
    let mut x82: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x81, &mut x82, x80, x31, x64);
    let mut x83: u64 = 0;
    let mut x84: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x83, &mut x84, x82, x33, x66);
    let mut x85: u64 = 0;
    let mut x86: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x85, &mut x86, x84, x35, x68);
    let mut x87: u64 = 0;
    let mut x88: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x87, &mut x88, x86, x37, x70);
    let mut x89: u64 = 0;
    let mut x90: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x89, &mut x90, x88, x39, x72);
    let mut x91: u64 = 0;
    let mut x92: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x91, &mut x92, x1, (arg2[7]));
    let mut x93: u64 = 0;
    let mut x94: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x93, &mut x94, x1, (arg2[6]));
    let mut x95: u64 = 0;
    let mut x96: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x95, &mut x96, x1, (arg2[5]));
    let mut x97: u64 = 0;
    let mut x98: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x97, &mut x98, x1, (arg2[4]));
    let mut x99: u64 = 0;
    let mut x100: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x99, &mut x100, x1, (arg2[3]));
    let mut x101: u64 = 0;
    let mut x102: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x101, &mut x102, x1, (arg2[2]));
    let mut x103: u64 = 0;
    let mut x104: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x103, &mut x104, x1, (arg2[1]));
    let mut x105: u64 = 0;
    let mut x106: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x105, &mut x106, x1, (arg2[0]));
    let mut x107: u64 = 0;
    let mut x108: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x107, &mut x108, 0x0, x106, x103);
    let mut x109: u64 = 0;
    let mut x110: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x109, &mut x110, x108, x104, x101);
    let mut x111: u64 = 0;
    let mut x112: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x111, &mut x112, x110, x102, x99);
    let mut x113: u64 = 0;
    let mut x114: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x113, &mut x114, x112, x100, x97);
    let mut x115: u64 = 0;
    let mut x116: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x115, &mut x116, x114, x98, x95);
    let mut x117: u64 = 0;
    let mut x118: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x117, &mut x118, x116, x96, x93);
    let mut x119: u64 = 0;
    let mut x120: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x119, &mut x120, x118, x94, x91);
    let x121: u64 = ((x120 as u64) + x92);
    let mut x122: u64 = 0;
    let mut x123: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x122, &mut x123, 0x0, x75, x105);
    let mut x124: u64 = 0;
    let mut x125: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x124, &mut x125, x123, x77, x107);
    let mut x126: u64 = 0;
    let mut x127: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x126, &mut x127, x125, x79, x109);
    let mut x128: u64 = 0;
    let mut x129: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x128, &mut x129, x127, x81, x111);
    let mut x130: u64 = 0;
    let mut x131: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x130, &mut x131, x129, x83, x113);
    let mut x132: u64 = 0;
    let mut x133: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x132, &mut x133, x131, x85, x115);
    let mut x134: u64 = 0;
    let mut x135: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x134, &mut x135, x133, x87, x117);
    let mut x136: u64 = 0;
    let mut x137: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x136, &mut x137, x135, x89, x119);
    let mut x138: u64 = 0;
    let mut x139: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x138, &mut x139, x137, (x90 as u64), x121);
    let mut x140: u64 = 0;
    let mut x141: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x140, &mut x141, x122, 0xad49541f0f1b7027);
    let mut x142: u64 = 0;
    let mut x143: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x142, &mut x143, x140, 0xaadd9db8dbe9c48b);
    let mut x144: u64 = 0;
    let mut x145: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x144, &mut x145, x140, 0x3fd4e6ae33c9fc07);
    let mut x146: u64 = 0;
    let mut x147: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x146, &mut x147, x140, 0xcb308db3b3c9d20e);
    let mut x148: u64 = 0;
    let mut x149: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x148, &mut x149, x140, 0xd6639cca70330870);
    let mut x150: u64 = 0;
    let mut x151: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x150, &mut x151, x140, 0x553e5c414ca92619);
    let mut x152: u64 = 0;
    let mut x153: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x152, &mut x153, x140, 0x418661197fac1047);
    let mut x154: u64 = 0;
    let mut x155: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x154, &mut x155, x140, 0x1db1d381085ddadd);
    let mut x156: u64 = 0;
    let mut x157: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x156, &mut x157, x140, 0xb58796829ca90069);
    let mut x158: u64 = 0;
    let mut x159: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x158, &mut x159, 0x0, x157, x154);
    let mut x160: u64 = 0;
    let mut x161: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x160, &mut x161, x159, x155, x152);
    let mut x162: u64 = 0;
    let mut x163: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x162, &mut x163, x161, x153, x150);
    let mut x164: u64 = 0;
    let mut x165: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x164, &mut x165, x163, x151, x148);
    let mut x166: u64 = 0;
    let mut x167: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x166, &mut x167, x165, x149, x146);
    let mut x168: u64 = 0;
    let mut x169: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x168, &mut x169, x167, x147, x144);
    let mut x170: u64 = 0;
    let mut x171: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x170, &mut x171, x169, x145, x142);
    let x172: u64 = ((x171 as u64) + x143);
    let mut x173: u64 = 0;
    let mut x174: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x173, &mut x174, 0x0, x122, x156);
    let mut x175: u64 = 0;
    let mut x176: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x175, &mut x176, x174, x124, x158);
    let mut x177: u64 = 0;
    let mut x178: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x177, &mut x178, x176, x126, x160);
    let mut x179: u64 = 0;
    let mut x180: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x179, &mut x180, x178, x128, x162);
    let mut x181: u64 = 0;
    let mut x182: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x181, &mut x182, x180, x130, x164);
    let mut x183: u64 = 0;
    let mut x184: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x183, &mut x184, x182, x132, x166);
    let mut x185: u64 = 0;
    let mut x186: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x185, &mut x186, x184, x134, x168);
    let mut x187: u64 = 0;
    let mut x188: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x187, &mut x188, x186, x136, x170);
    let mut x189: u64 = 0;
    let mut x190: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x189, &mut x190, x188, x138, x172);
    let x191: u64 = ((x190 as u64) + (x139 as u64));
    let mut x192: u64 = 0;
    let mut x193: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x192, &mut x193, x2, (arg2[7]));
    let mut x194: u64 = 0;
    let mut x195: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x194, &mut x195, x2, (arg2[6]));
    let mut x196: u64 = 0;
    let mut x197: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x196, &mut x197, x2, (arg2[5]));
    let mut x198: u64 = 0;
    let mut x199: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x198, &mut x199, x2, (arg2[4]));
    let mut x200: u64 = 0;
    let mut x201: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x200, &mut x201, x2, (arg2[3]));
    let mut x202: u64 = 0;
    let mut x203: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x202, &mut x203, x2, (arg2[2]));
    let mut x204: u64 = 0;
    let mut x205: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x204, &mut x205, x2, (arg2[1]));
    let mut x206: u64 = 0;
    let mut x207: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x206, &mut x207, x2, (arg2[0]));
    let mut x208: u64 = 0;
    let mut x209: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x208, &mut x209, 0x0, x207, x204);
    let mut x210: u64 = 0;
    let mut x211: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x210, &mut x211, x209, x205, x202);
    let mut x212: u64 = 0;
    let mut x213: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x212, &mut x213, x211, x203, x200);
    let mut x214: u64 = 0;
    let mut x215: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x214, &mut x215, x213, x201, x198);
    let mut x216: u64 = 0;
    let mut x217: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x216, &mut x217, x215, x199, x196);
    let mut x218: u64 = 0;
    let mut x219: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x218, &mut x219, x217, x197, x194);
    let mut x220: u64 = 0;
    let mut x221: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x220, &mut x221, x219, x195, x192);
    let x222: u64 = ((x221 as u64) + x193);
    let mut x223: u64 = 0;
    let mut x224: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x223, &mut x224, 0x0, x175, x206);
    let mut x225: u64 = 0;
    let mut x226: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x225, &mut x226, x224, x177, x208);
    let mut x227: u64 = 0;
    let mut x228: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x227, &mut x228, x226, x179, x210);
    let mut x229: u64 = 0;
    let mut x230: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x229, &mut x230, x228, x181, x212);
    let mut x231: u64 = 0;
    let mut x232: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x231, &mut x232, x230, x183, x214);
    let mut x233: u64 = 0;
    let mut x234: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x233, &mut x234, x232, x185, x216);
    let mut x235: u64 = 0;
    let mut x236: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x235, &mut x236, x234, x187, x218);
    let mut x237: u64 = 0;
    let mut x238: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x237, &mut x238, x236, x189, x220);
    let mut x239: u64 = 0;
    let mut x240: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x239, &mut x240, x238, x191, x222);
    let mut x241: u64 = 0;
    let mut x242: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x241, &mut x242, x223, 0xad49541f0f1b7027);
    let mut x243: u64 = 0;
    let mut x244: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x243, &mut x244, x241, 0xaadd9db8dbe9c48b);
    let mut x245: u64 = 0;
    let mut x246: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x245, &mut x246, x241, 0x3fd4e6ae33c9fc07);
    let mut x247: u64 = 0;
    let mut x248: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x247, &mut x248, x241, 0xcb308db3b3c9d20e);
    let mut x249: u64 = 0;
    let mut x250: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x249, &mut x250, x241, 0xd6639cca70330870);
    let mut x251: u64 = 0;
    let mut x252: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x251, &mut x252, x241, 0x553e5c414ca92619);
    let mut x253: u64 = 0;
    let mut x254: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x253, &mut x254, x241, 0x418661197fac1047);
    let mut x255: u64 = 0;
    let mut x256: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x255, &mut x256, x241, 0x1db1d381085ddadd);
    let mut x257: u64 = 0;
    let mut x258: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x257, &mut x258, x241, 0xb58796829ca90069);
    let mut x259: u64 = 0;
    let mut x260: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x259, &mut x260, 0x0, x258, x255);
    let mut x261: u64 = 0;
    let mut x262: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x261, &mut x262, x260, x256, x253);
    let mut x263: u64 = 0;
    let mut x264: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x263, &mut x264, x262, x254, x251);
    let mut x265: u64 = 0;
    let mut x266: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x265, &mut x266, x264, x252, x249);
    let mut x267: u64 = 0;
    let mut x268: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x267, &mut x268, x266, x250, x247);
    let mut x269: u64 = 0;
    let mut x270: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x269, &mut x270, x268, x248, x245);
    let mut x271: u64 = 0;
    let mut x272: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x271, &mut x272, x270, x246, x243);
    let x273: u64 = ((x272 as u64) + x244);
    let mut x274: u64 = 0;
    let mut x275: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x274, &mut x275, 0x0, x223, x257);
    let mut x276: u64 = 0;
    let mut x277: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x276, &mut x277, x275, x225, x259);
    let mut x278: u64 = 0;
    let mut x279: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x278, &mut x279, x277, x227, x261);
    let mut x280: u64 = 0;
    let mut x281: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x280, &mut x281, x279, x229, x263);
    let mut x282: u64 = 0;
    let mut x283: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x282, &mut x283, x281, x231, x265);
    let mut x284: u64 = 0;
    let mut x285: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x284, &mut x285, x283, x233, x267);
    let mut x286: u64 = 0;
    let mut x287: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x286, &mut x287, x285, x235, x269);
    let mut x288: u64 = 0;
    let mut x289: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x288, &mut x289, x287, x237, x271);
    let mut x290: u64 = 0;
    let mut x291: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x290, &mut x291, x289, x239, x273);
    let x292: u64 = ((x291 as u64) + (x240 as u64));
    let mut x293: u64 = 0;
    let mut x294: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x293, &mut x294, x3, (arg2[7]));
    let mut x295: u64 = 0;
    let mut x296: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x295, &mut x296, x3, (arg2[6]));
    let mut x297: u64 = 0;
    let mut x298: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x297, &mut x298, x3, (arg2[5]));
    let mut x299: u64 = 0;
    let mut x300: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x299, &mut x300, x3, (arg2[4]));
    let mut x301: u64 = 0;
    let mut x302: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x301, &mut x302, x3, (arg2[3]));
    let mut x303: u64 = 0;
    let mut x304: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x303, &mut x304, x3, (arg2[2]));
    let mut x305: u64 = 0;
    let mut x306: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x305, &mut x306, x3, (arg2[1]));
    let mut x307: u64 = 0;
    let mut x308: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x307, &mut x308, x3, (arg2[0]));
    let mut x309: u64 = 0;
    let mut x310: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x309, &mut x310, 0x0, x308, x305);
    let mut x311: u64 = 0;
    let mut x312: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x311, &mut x312, x310, x306, x303);
    let mut x313: u64 = 0;
    let mut x314: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x313, &mut x314, x312, x304, x301);
    let mut x315: u64 = 0;
    let mut x316: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x315, &mut x316, x314, x302, x299);
    let mut x317: u64 = 0;
    let mut x318: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x317, &mut x318, x316, x300, x297);
    let mut x319: u64 = 0;
    let mut x320: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x319, &mut x320, x318, x298, x295);
    let mut x321: u64 = 0;
    let mut x322: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x321, &mut x322, x320, x296, x293);
    let x323: u64 = ((x322 as u64) + x294);
    let mut x324: u64 = 0;
    let mut x325: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x324, &mut x325, 0x0, x276, x307);
    let mut x326: u64 = 0;
    let mut x327: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x326, &mut x327, x325, x278, x309);
    let mut x328: u64 = 0;
    let mut x329: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x328, &mut x329, x327, x280, x311);
    let mut x330: u64 = 0;
    let mut x331: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x330, &mut x331, x329, x282, x313);
    let mut x332: u64 = 0;
    let mut x333: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x332, &mut x333, x331, x284, x315);
    let mut x334: u64 = 0;
    let mut x335: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x334, &mut x335, x333, x286, x317);
    let mut x336: u64 = 0;
    let mut x337: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x336, &mut x337, x335, x288, x319);
    let mut x338: u64 = 0;
    let mut x339: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x338, &mut x339, x337, x290, x321);
    let mut x340: u64 = 0;
    let mut x341: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x340, &mut x341, x339, x292, x323);
    let mut x342: u64 = 0;
    let mut x343: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x342, &mut x343, x324, 0xad49541f0f1b7027);
    let mut x344: u64 = 0;
    let mut x345: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x344, &mut x345, x342, 0xaadd9db8dbe9c48b);
    let mut x346: u64 = 0;
    let mut x347: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x346, &mut x347, x342, 0x3fd4e6ae33c9fc07);
    let mut x348: u64 = 0;
    let mut x349: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x348, &mut x349, x342, 0xcb308db3b3c9d20e);
    let mut x350: u64 = 0;
    let mut x351: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x350, &mut x351, x342, 0xd6639cca70330870);
    let mut x352: u64 = 0;
    let mut x353: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x352, &mut x353, x342, 0x553e5c414ca92619);
    let mut x354: u64 = 0;
    let mut x355: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x354, &mut x355, x342, 0x418661197fac1047);
    let mut x356: u64 = 0;
    let mut x357: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x356, &mut x357, x342, 0x1db1d381085ddadd);
    let mut x358: u64 = 0;
    let mut x359: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x358, &mut x359, x342, 0xb58796829ca90069);
    let mut x360: u64 = 0;
    let mut x361: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x360, &mut x361, 0x0, x359, x356);
    let mut x362: u64 = 0;
    let mut x363: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x362, &mut x363, x361, x357, x354);
    let mut x364: u64 = 0;
    let mut x365: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x364, &mut x365, x363, x355, x352);
    let mut x366: u64 = 0;
    let mut x367: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x366, &mut x367, x365, x353, x350);
    let mut x368: u64 = 0;
    let mut x369: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x368, &mut x369, x367, x351, x348);
    let mut x370: u64 = 0;
    let mut x371: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x370, &mut x371, x369, x349, x346);
    let mut x372: u64 = 0;
    let mut x373: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x372, &mut x373, x371, x347, x344);
    let x374: u64 = ((x373 as u64) + x345);
    let mut x375: u64 = 0;
    let mut x376: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x375, &mut x376, 0x0, x324, x358);
    let mut x377: u64 = 0;
    let mut x378: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x377, &mut x378, x376, x326, x360);
    let mut x379: u64 = 0;
    let mut x380: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x379, &mut x380, x378, x328, x362);
    let mut x381: u64 = 0;
    let mut x382: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x381, &mut x382, x380, x330, x364);
    let mut x383: u64 = 0;
    let mut x384: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x383, &mut x384, x382, x332, x366);
    let mut x385: u64 = 0;
    let mut x386: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x385, &mut x386, x384, x334, x368);
    let mut x387: u64 = 0;
    let mut x388: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x387, &mut x388, x386, x336, x370);
    let mut x389: u64 = 0;
    let mut x390: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x389, &mut x390, x388, x338, x372);
    let mut x391: u64 = 0;
    let mut x392: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x391, &mut x392, x390, x340, x374);
    let x393: u64 = ((x392 as u64) + (x341 as u64));
    let mut x394: u64 = 0;
    let mut x395: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x394, &mut x395, x4, (arg2[7]));
    let mut x396: u64 = 0;
    let mut x397: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x396, &mut x397, x4, (arg2[6]));
    let mut x398: u64 = 0;
    let mut x399: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x398, &mut x399, x4, (arg2[5]));
    let mut x400: u64 = 0;
    let mut x401: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x400, &mut x401, x4, (arg2[4]));
    let mut x402: u64 = 0;
    let mut x403: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x402, &mut x403, x4, (arg2[3]));
    let mut x404: u64 = 0;
    let mut x405: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x404, &mut x405, x4, (arg2[2]));
    let mut x406: u64 = 0;
    let mut x407: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x406, &mut x407, x4, (arg2[1]));
    let mut x408: u64 = 0;
    let mut x409: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x408, &mut x409, x4, (arg2[0]));
    let mut x410: u64 = 0;
    let mut x411: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x410, &mut x411, 0x0, x409, x406);
    let mut x412: u64 = 0;
    let mut x413: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x412, &mut x413, x411, x407, x404);
    let mut x414: u64 = 0;
    let mut x415: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x414, &mut x415, x413, x405, x402);
    let mut x416: u64 = 0;
    let mut x417: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x416, &mut x417, x415, x403, x400);
    let mut x418: u64 = 0;
    let mut x419: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x418, &mut x419, x417, x401, x398);
    let mut x420: u64 = 0;
    let mut x421: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x420, &mut x421, x419, x399, x396);
    let mut x422: u64 = 0;
    let mut x423: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x422, &mut x423, x421, x397, x394);
    let x424: u64 = ((x423 as u64) + x395);
    let mut x425: u64 = 0;
    let mut x426: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x425, &mut x426, 0x0, x377, x408);
    let mut x427: u64 = 0;
    let mut x428: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x427, &mut x428, x426, x379, x410);
    let mut x429: u64 = 0;
    let mut x430: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x429, &mut x430, x428, x381, x412);
    let mut x431: u64 = 0;
    let mut x432: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x431, &mut x432, x430, x383, x414);
    let mut x433: u64 = 0;
    let mut x434: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x433, &mut x434, x432, x385, x416);
    let mut x435: u64 = 0;
    let mut x436: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x435, &mut x436, x434, x387, x418);
    let mut x437: u64 = 0;
    let mut x438: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x437, &mut x438, x436, x389, x420);
    let mut x439: u64 = 0;
    let mut x440: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x439, &mut x440, x438, x391, x422);
    let mut x441: u64 = 0;
    let mut x442: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x441, &mut x442, x440, x393, x424);
    let mut x443: u64 = 0;
    let mut x444: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x443, &mut x444, x425, 0xad49541f0f1b7027);
    let mut x445: u64 = 0;
    let mut x446: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x445, &mut x446, x443, 0xaadd9db8dbe9c48b);
    let mut x447: u64 = 0;
    let mut x448: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x447, &mut x448, x443, 0x3fd4e6ae33c9fc07);
    let mut x449: u64 = 0;
    let mut x450: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x449, &mut x450, x443, 0xcb308db3b3c9d20e);
    let mut x451: u64 = 0;
    let mut x452: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x451, &mut x452, x443, 0xd6639cca70330870);
    let mut x453: u64 = 0;
    let mut x454: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x453, &mut x454, x443, 0x553e5c414ca92619);
    let mut x455: u64 = 0;
    let mut x456: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x455, &mut x456, x443, 0x418661197fac1047);
    let mut x457: u64 = 0;
    let mut x458: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x457, &mut x458, x443, 0x1db1d381085ddadd);
    let mut x459: u64 = 0;
    let mut x460: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x459, &mut x460, x443, 0xb58796829ca90069);
    let mut x461: u64 = 0;
    let mut x462: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x461, &mut x462, 0x0, x460, x457);
    let mut x463: u64 = 0;
    let mut x464: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x463, &mut x464, x462, x458, x455);
    let mut x465: u64 = 0;
    let mut x466: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x465, &mut x466, x464, x456, x453);
    let mut x467: u64 = 0;
    let mut x468: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x467, &mut x468, x466, x454, x451);
    let mut x469: u64 = 0;
    let mut x470: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x469, &mut x470, x468, x452, x449);
    let mut x471: u64 = 0;
    let mut x472: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x471, &mut x472, x470, x450, x447);
    let mut x473: u64 = 0;
    let mut x474: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x473, &mut x474, x472, x448, x445);
    let x475: u64 = ((x474 as u64) + x446);
    let mut x476: u64 = 0;
    let mut x477: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x476, &mut x477, 0x0, x425, x459);
    let mut x478: u64 = 0;
    let mut x479: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x478, &mut x479, x477, x427, x461);
    let mut x480: u64 = 0;
    let mut x481: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x480, &mut x481, x479, x429, x463);
    let mut x482: u64 = 0;
    let mut x483: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x482, &mut x483, x481, x431, x465);
    let mut x484: u64 = 0;
    let mut x485: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x484, &mut x485, x483, x433, x467);
    let mut x486: u64 = 0;
    let mut x487: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x486, &mut x487, x485, x435, x469);
    let mut x488: u64 = 0;
    let mut x489: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x488, &mut x489, x487, x437, x471);
    let mut x490: u64 = 0;
    let mut x491: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x490, &mut x491, x489, x439, x473);
    let mut x492: u64 = 0;
    let mut x493: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x492, &mut x493, x491, x441, x475);
    let x494: u64 = ((x493 as u64) + (x442 as u64));
    let mut x495: u64 = 0;
    let mut x496: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x495, &mut x496, x5, (arg2[7]));
    let mut x497: u64 = 0;
    let mut x498: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x497, &mut x498, x5, (arg2[6]));
    let mut x499: u64 = 0;
    let mut x500: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x499, &mut x500, x5, (arg2[5]));
    let mut x501: u64 = 0;
    let mut x502: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x501, &mut x502, x5, (arg2[4]));
    let mut x503: u64 = 0;
    let mut x504: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x503, &mut x504, x5, (arg2[3]));
    let mut x505: u64 = 0;
    let mut x506: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x505, &mut x506, x5, (arg2[2]));
    let mut x507: u64 = 0;
    let mut x508: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x507, &mut x508, x5, (arg2[1]));
    let mut x509: u64 = 0;
    let mut x510: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x509, &mut x510, x5, (arg2[0]));
    let mut x511: u64 = 0;
    let mut x512: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x511, &mut x512, 0x0, x510, x507);
    let mut x513: u64 = 0;
    let mut x514: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x513, &mut x514, x512, x508, x505);
    let mut x515: u64 = 0;
    let mut x516: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x515, &mut x516, x514, x506, x503);
    let mut x517: u64 = 0;
    let mut x518: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x517, &mut x518, x516, x504, x501);
    let mut x519: u64 = 0;
    let mut x520: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x519, &mut x520, x518, x502, x499);
    let mut x521: u64 = 0;
    let mut x522: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x521, &mut x522, x520, x500, x497);
    let mut x523: u64 = 0;
    let mut x524: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x523, &mut x524, x522, x498, x495);
    let x525: u64 = ((x524 as u64) + x496);
    let mut x526: u64 = 0;
    let mut x527: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x526, &mut x527, 0x0, x478, x509);
    let mut x528: u64 = 0;
    let mut x529: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x528, &mut x529, x527, x480, x511);
    let mut x530: u64 = 0;
    let mut x531: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x530, &mut x531, x529, x482, x513);
    let mut x532: u64 = 0;
    let mut x533: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x532, &mut x533, x531, x484, x515);
    let mut x534: u64 = 0;
    let mut x535: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x534, &mut x535, x533, x486, x517);
    let mut x536: u64 = 0;
    let mut x537: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x536, &mut x537, x535, x488, x519);
    let mut x538: u64 = 0;
    let mut x539: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x538, &mut x539, x537, x490, x521);
    let mut x540: u64 = 0;
    let mut x541: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x540, &mut x541, x539, x492, x523);
    let mut x542: u64 = 0;
    let mut x543: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x542, &mut x543, x541, x494, x525);
    let mut x544: u64 = 0;
    let mut x545: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x544, &mut x545, x526, 0xad49541f0f1b7027);
    let mut x546: u64 = 0;
    let mut x547: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x546, &mut x547, x544, 0xaadd9db8dbe9c48b);
    let mut x548: u64 = 0;
    let mut x549: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x548, &mut x549, x544, 0x3fd4e6ae33c9fc07);
    let mut x550: u64 = 0;
    let mut x551: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x550, &mut x551, x544, 0xcb308db3b3c9d20e);
    let mut x552: u64 = 0;
    let mut x553: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x552, &mut x553, x544, 0xd6639cca70330870);
    let mut x554: u64 = 0;
    let mut x555: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x554, &mut x555, x544, 0x553e5c414ca92619);
    let mut x556: u64 = 0;
    let mut x557: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x556, &mut x557, x544, 0x418661197fac1047);
    let mut x558: u64 = 0;
    let mut x559: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x558, &mut x559, x544, 0x1db1d381085ddadd);
    let mut x560: u64 = 0;
    let mut x561: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x560, &mut x561, x544, 0xb58796829ca90069);
    let mut x562: u64 = 0;
    let mut x563: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x562, &mut x563, 0x0, x561, x558);
    let mut x564: u64 = 0;
    let mut x565: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x564, &mut x565, x563, x559, x556);
    let mut x566: u64 = 0;
    let mut x567: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x566, &mut x567, x565, x557, x554);
    let mut x568: u64 = 0;
    let mut x569: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x568, &mut x569, x567, x555, x552);
    let mut x570: u64 = 0;
    let mut x571: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x570, &mut x571, x569, x553, x550);
    let mut x572: u64 = 0;
    let mut x573: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x572, &mut x573, x571, x551, x548);
    let mut x574: u64 = 0;
    let mut x575: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x574, &mut x575, x573, x549, x546);
    let x576: u64 = ((x575 as u64) + x547);
    let mut x577: u64 = 0;
    let mut x578: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x577, &mut x578, 0x0, x526, x560);
    let mut x579: u64 = 0;
    let mut x580: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x579, &mut x580, x578, x528, x562);
    let mut x581: u64 = 0;
    let mut x582: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x581, &mut x582, x580, x530, x564);
    let mut x583: u64 = 0;
    let mut x584: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x583, &mut x584, x582, x532, x566);
    let mut x585: u64 = 0;
    let mut x586: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x585, &mut x586, x584, x534, x568);
    let mut x587: u64 = 0;
    let mut x588: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x587, &mut x588, x586, x536, x570);
    let mut x589: u64 = 0;
    let mut x590: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x589, &mut x590, x588, x538, x572);
    let mut x591: u64 = 0;
    let mut x592: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x591, &mut x592, x590, x540, x574);
    let mut x593: u64 = 0;
    let mut x594: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x593, &mut x594, x592, x542, x576);
    let x595: u64 = ((x594 as u64) + (x543 as u64));
    let mut x596: u64 = 0;
    let mut x597: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x596, &mut x597, x6, (arg2[7]));
    let mut x598: u64 = 0;
    let mut x599: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x598, &mut x599, x6, (arg2[6]));
    let mut x600: u64 = 0;
    let mut x601: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x600, &mut x601, x6, (arg2[5]));
    let mut x602: u64 = 0;
    let mut x603: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x602, &mut x603, x6, (arg2[4]));
    let mut x604: u64 = 0;
    let mut x605: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x604, &mut x605, x6, (arg2[3]));
    let mut x606: u64 = 0;
    let mut x607: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x606, &mut x607, x6, (arg2[2]));
    let mut x608: u64 = 0;
    let mut x609: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x608, &mut x609, x6, (arg2[1]));
    let mut x610: u64 = 0;
    let mut x611: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x610, &mut x611, x6, (arg2[0]));
    let mut x612: u64 = 0;
    let mut x613: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x612, &mut x613, 0x0, x611, x608);
    let mut x614: u64 = 0;
    let mut x615: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x614, &mut x615, x613, x609, x606);
    let mut x616: u64 = 0;
    let mut x617: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x616, &mut x617, x615, x607, x604);
    let mut x618: u64 = 0;
    let mut x619: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x618, &mut x619, x617, x605, x602);
    let mut x620: u64 = 0;
    let mut x621: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x620, &mut x621, x619, x603, x600);
    let mut x622: u64 = 0;
    let mut x623: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x622, &mut x623, x621, x601, x598);
    let mut x624: u64 = 0;
    let mut x625: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x624, &mut x625, x623, x599, x596);
    let x626: u64 = ((x625 as u64) + x597);
    let mut x627: u64 = 0;
    let mut x628: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x627, &mut x628, 0x0, x579, x610);
    let mut x629: u64 = 0;
    let mut x630: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x629, &mut x630, x628, x581, x612);
    let mut x631: u64 = 0;
    let mut x632: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x631, &mut x632, x630, x583, x614);
    let mut x633: u64 = 0;
    let mut x634: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x633, &mut x634, x632, x585, x616);
    let mut x635: u64 = 0;
    let mut x636: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x635, &mut x636, x634, x587, x618);
    let mut x637: u64 = 0;
    let mut x638: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x637, &mut x638, x636, x589, x620);
    let mut x639: u64 = 0;
    let mut x640: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x639, &mut x640, x638, x591, x622);
    let mut x641: u64 = 0;
    let mut x642: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x641, &mut x642, x640, x593, x624);
    let mut x643: u64 = 0;
    let mut x644: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x643, &mut x644, x642, x595, x626);
    let mut x645: u64 = 0;
    let mut x646: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x645, &mut x646, x627, 0xad49541f0f1b7027);
    let mut x647: u64 = 0;
    let mut x648: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x647, &mut x648, x645, 0xaadd9db8dbe9c48b);
    let mut x649: u64 = 0;
    let mut x650: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x649, &mut x650, x645, 0x3fd4e6ae33c9fc07);
    let mut x651: u64 = 0;
    let mut x652: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x651, &mut x652, x645, 0xcb308db3b3c9d20e);
    let mut x653: u64 = 0;
    let mut x654: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x653, &mut x654, x645, 0xd6639cca70330870);
    let mut x655: u64 = 0;
    let mut x656: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x655, &mut x656, x645, 0x553e5c414ca92619);
    let mut x657: u64 = 0;
    let mut x658: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x657, &mut x658, x645, 0x418661197fac1047);
    let mut x659: u64 = 0;
    let mut x660: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x659, &mut x660, x645, 0x1db1d381085ddadd);
    let mut x661: u64 = 0;
    let mut x662: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x661, &mut x662, x645, 0xb58796829ca90069);
    let mut x663: u64 = 0;
    let mut x664: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x663, &mut x664, 0x0, x662, x659);
    let mut x665: u64 = 0;
    let mut x666: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x665, &mut x666, x664, x660, x657);
    let mut x667: u64 = 0;
    let mut x668: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x667, &mut x668, x666, x658, x655);
    let mut x669: u64 = 0;
    let mut x670: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x669, &mut x670, x668, x656, x653);
    let mut x671: u64 = 0;
    let mut x672: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x671, &mut x672, x670, x654, x651);
    let mut x673: u64 = 0;
    let mut x674: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x673, &mut x674, x672, x652, x649);
    let mut x675: u64 = 0;
    let mut x676: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x675, &mut x676, x674, x650, x647);
    let x677: u64 = ((x676 as u64) + x648);
    let mut x678: u64 = 0;
    let mut x679: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x678, &mut x679, 0x0, x627, x661);
    let mut x680: u64 = 0;
    let mut x681: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x680, &mut x681, x679, x629, x663);
    let mut x682: u64 = 0;
    let mut x683: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x682, &mut x683, x681, x631, x665);
    let mut x684: u64 = 0;
    let mut x685: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x684, &mut x685, x683, x633, x667);
    let mut x686: u64 = 0;
    let mut x687: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x686, &mut x687, x685, x635, x669);
    let mut x688: u64 = 0;
    let mut x689: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x688, &mut x689, x687, x637, x671);
    let mut x690: u64 = 0;
    let mut x691: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x690, &mut x691, x689, x639, x673);
    let mut x692: u64 = 0;
    let mut x693: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x692, &mut x693, x691, x641, x675);
    let mut x694: u64 = 0;
    let mut x695: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x694, &mut x695, x693, x643, x677);
    let x696: u64 = ((x695 as u64) + (x644 as u64));
    let mut x697: u64 = 0;
    let mut x698: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x697, &mut x698, x7, (arg2[7]));
    let mut x699: u64 = 0;
    let mut x700: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x699, &mut x700, x7, (arg2[6]));
    let mut x701: u64 = 0;
    let mut x702: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x701, &mut x702, x7, (arg2[5]));
    let mut x703: u64 = 0;
    let mut x704: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x703, &mut x704, x7, (arg2[4]));
    let mut x705: u64 = 0;
    let mut x706: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x705, &mut x706, x7, (arg2[3]));
    let mut x707: u64 = 0;
    let mut x708: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x707, &mut x708, x7, (arg2[2]));
    let mut x709: u64 = 0;
    let mut x710: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x709, &mut x710, x7, (arg2[1]));
    let mut x711: u64 = 0;
    let mut x712: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x711, &mut x712, x7, (arg2[0]));
    let mut x713: u64 = 0;
    let mut x714: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x713, &mut x714, 0x0, x712, x709);
    let mut x715: u64 = 0;
    let mut x716: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x715, &mut x716, x714, x710, x707);
    let mut x717: u64 = 0;
    let mut x718: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x717, &mut x718, x716, x708, x705);
    let mut x719: u64 = 0;
    let mut x720: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x719, &mut x720, x718, x706, x703);
    let mut x721: u64 = 0;
    let mut x722: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x721, &mut x722, x720, x704, x701);
    let mut x723: u64 = 0;
    let mut x724: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x723, &mut x724, x722, x702, x699);
    let mut x725: u64 = 0;
    let mut x726: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x725, &mut x726, x724, x700, x697);
    let x727: u64 = ((x726 as u64) + x698);
    let mut x728: u64 = 0;
    let mut x729: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x728, &mut x729, 0x0, x680, x711);
    let mut x730: u64 = 0;
    let mut x731: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x730, &mut x731, x729, x682, x713);
    let mut x732: u64 = 0;
    let mut x733: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x732, &mut x733, x731, x684, x715);
    let mut x734: u64 = 0;
    let mut x735: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x734, &mut x735, x733, x686, x717);
    let mut x736: u64 = 0;
    let mut x737: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x736, &mut x737, x735, x688, x719);
    let mut x738: u64 = 0;
    let mut x739: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x738, &mut x739, x737, x690, x721);
    let mut x740: u64 = 0;
    let mut x741: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x740, &mut x741, x739, x692, x723);
    let mut x742: u64 = 0;
    let mut x743: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x742, &mut x743, x741, x694, x725);
    let mut x744: u64 = 0;
    let mut x745: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x744, &mut x745, x743, x696, x727);
    let mut x746: u64 = 0;
    let mut x747: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x746, &mut x747, x728, 0xad49541f0f1b7027);
    let mut x748: u64 = 0;
    let mut x749: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x748, &mut x749, x746, 0xaadd9db8dbe9c48b);
    let mut x750: u64 = 0;
    let mut x751: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x750, &mut x751, x746, 0x3fd4e6ae33c9fc07);
    let mut x752: u64 = 0;
    let mut x753: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x752, &mut x753, x746, 0xcb308db3b3c9d20e);
    let mut x754: u64 = 0;
    let mut x755: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x754, &mut x755, x746, 0xd6639cca70330870);
    let mut x756: u64 = 0;
    let mut x757: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x756, &mut x757, x746, 0x553e5c414ca92619);
    let mut x758: u64 = 0;
    let mut x759: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x758, &mut x759, x746, 0x418661197fac1047);
    let mut x760: u64 = 0;
    let mut x761: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x760, &mut x761, x746, 0x1db1d381085ddadd);
    let mut x762: u64 = 0;
    let mut x763: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x762, &mut x763, x746, 0xb58796829ca90069);
    let mut x764: u64 = 0;
    let mut x765: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x764, &mut x765, 0x0, x763, x760);
    let mut x766: u64 = 0;
    let mut x767: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x766, &mut x767, x765, x761, x758);
    let mut x768: u64 = 0;
    let mut x769: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x768, &mut x769, x767, x759, x756);
    let mut x770: u64 = 0;
    let mut x771: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x770, &mut x771, x769, x757, x754);
    let mut x772: u64 = 0;
    let mut x773: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x772, &mut x773, x771, x755, x752);
    let mut x774: u64 = 0;
    let mut x775: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x774, &mut x775, x773, x753, x750);
    let mut x776: u64 = 0;
    let mut x777: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x776, &mut x777, x775, x751, x748);
    let x778: u64 = ((x777 as u64) + x749);
    let mut x779: u64 = 0;
    let mut x780: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x779, &mut x780, 0x0, x728, x762);
    let mut x781: u64 = 0;
    let mut x782: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x781, &mut x782, x780, x730, x764);
    let mut x783: u64 = 0;
    let mut x784: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x783, &mut x784, x782, x732, x766);
    let mut x785: u64 = 0;
    let mut x786: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x785, &mut x786, x784, x734, x768);
    let mut x787: u64 = 0;
    let mut x788: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x787, &mut x788, x786, x736, x770);
    let mut x789: u64 = 0;
    let mut x790: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x789, &mut x790, x788, x738, x772);
    let mut x791: u64 = 0;
    let mut x792: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x791, &mut x792, x790, x740, x774);
    let mut x793: u64 = 0;
    let mut x794: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x793, &mut x794, x792, x742, x776);
    let mut x795: u64 = 0;
    let mut x796: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x795, &mut x796, x794, x744, x778);
    let x797: u64 = ((x796 as u64) + (x745 as u64));
    let mut x798: u64 = 0;
    let mut x799: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x798, &mut x799, 0x0, x781, 0xb58796829ca90069);
    let mut x800: u64 = 0;
    let mut x801: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x800, &mut x801, x799, x783, 0x1db1d381085ddadd);
    let mut x802: u64 = 0;
    let mut x803: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x802, &mut x803, x801, x785, 0x418661197fac1047);
    let mut x804: u64 = 0;
    let mut x805: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x804, &mut x805, x803, x787, 0x553e5c414ca92619);
    let mut x806: u64 = 0;
    let mut x807: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x806, &mut x807, x805, x789, 0xd6639cca70330870);
    let mut x808: u64 = 0;
    let mut x809: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x808, &mut x809, x807, x791, 0xcb308db3b3c9d20e);
    let mut x810: u64 = 0;
    let mut x811: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x810, &mut x811, x809, x793, 0x3fd4e6ae33c9fc07);
    let mut x812: u64 = 0;
    let mut x813: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x812, &mut x813, x811, x795, 0xaadd9db8dbe9c48b);
    let mut x814: u64 = 0;
    let mut x815: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x814, &mut x815, x813, x797, (0x0 as u64));
    let mut x816: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x816, x815, x798, x781);
    let mut x817: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x817, x815, x800, x783);
    let mut x818: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x818, x815, x802, x785);
    let mut x819: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x819, x815, x804, x787);
    let mut x820: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x820, x815, x806, x789);
    let mut x821: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x821, x815, x808, x791);
    let mut x822: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x822, x815, x810, x793);
    let mut x823: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x823, x815, x812, x795);
    out1[0] = x816;
    out1[1] = x817;
    out1[2] = x818;
    out1[3] = x819;
    out1[4] = x820;
    out1[5] = x821;
    out1[6] = x822;
    out1[7] = x823;
}
/// The function fiat_bp512_scalar_square squares a field element in the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_square(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let x1: u64 = (arg1[1]);
    let x2: u64 = (arg1[2]);
    let x3: u64 = (arg1[3]);
    let x4: u64 = (arg1[4]);
    let x5: u64 = (arg1[5]);
    let x6: u64 = (arg1[6]);
    let x7: u64 = (arg1[7]);
    let x8: u64 = (arg1[0]);
    let mut x9: u64 = 0;
    let mut x10: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x9, &mut x10, x8, (arg1[7]));
    let mut x11: u64 = 0;
    let mut x12: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x11, &mut x12, x8, (arg1[6]));
    let mut x13: u64 = 0;
    let mut x14: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x13, &mut x14, x8, (arg1[5]));
    let mut x15: u64 = 0;
    let mut x16: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x15, &mut x16, x8, (arg1[4]));
    let mut x17: u64 = 0;
    let mut x18: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x17, &mut x18, x8, (arg1[3]));
    let mut x19: u64 = 0;
    let mut x20: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x19, &mut x20, x8, (arg1[2]));
    let mut x21: u64 = 0;
    let mut x22: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x21, &mut x22, x8, (arg1[1]));
    let mut x23: u64 = 0;
    let mut x24: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x23, &mut x24, x8, (arg1[0]));
    let mut x25: u64 = 0;
    let mut x26: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x25, &mut x26, 0x0, x24, x21);
    let mut x27: u64 = 0;
    let mut x28: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x27, &mut x28, x26, x22, x19);
    let mut x29: u64 = 0;
    let mut x30: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x29, &mut x30, x28, x20, x17);
    let mut x31: u64 = 0;
    let mut x32: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x31, &mut x32, x30, x18, x15);
    let mut x33: u64 = 0;
    let mut x34: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x33, &mut x34, x32, x16, x13);
    let mut x35: u64 = 0;
    let mut x36: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x35, &mut x36, x34, x14, x11);
    let mut x37: u64 = 0;
    let mut x38: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x37, &mut x38, x36, x12, x9);
    let x39: u64 = ((x38 as u64) + x10);
    let mut x40: u64 = 0;
    let mut x41: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x40, &mut x41, x23, 0xad49541f0f1b7027);
    let mut x42: u64 = 0;
    let mut x43: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x42, &mut x43, x40, 0xaadd9db8dbe9c48b);
    let mut x44: u64 = 0;
    let mut x45: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x44, &mut x45, x40, 0x3fd4e6ae33c9fc07);
    let mut x46: u64 = 0;
    let mut x47: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x46, &mut x47, x40, 0xcb308db3b3c9d20e);
    let mut x48: u64 = 0;
    let mut x49: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x48, &mut x49, x40, 0xd6639cca70330870);
    let mut x50: u64 = 0;
    let mut x51: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x50, &mut x51, x40, 0x553e5c414ca92619);
    let mut x52: u64 = 0;
    let mut x53: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x52, &mut x53, x40, 0x418661197fac1047);
    let mut x54: u64 = 0;
    let mut x55: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x54, &mut x55, x40, 0x1db1d381085ddadd);
    let mut x56: u64 = 0;
    let mut x57: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x56, &mut x57, x40, 0xb58796829ca90069);
    let mut x58: u64 = 0;
    let mut x59: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x58, &mut x59, 0x0, x57, x54);
    let mut x60: u64 = 0;
    let mut x61: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x60, &mut x61, x59, x55, x52);
    let mut x62: u64 = 0;
    let mut x63: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x62, &mut x63, x61, x53, x50);
    let mut x64: u64 = 0;
    let mut x65: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x64, &mut x65, x63, x51, x48);
    let mut x66: u64 = 0;
    let mut x67: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x66, &mut x67, x65, x49, x46);
    let mut x68: u64 = 0;
    let mut x69: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x68, &mut x69, x67, x47, x44);
    let mut x70: u64 = 0;
    let mut x71: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x70, &mut x71, x69, x45, x42);
    let x72: u64 = ((x71 as u64) + x43);
    let mut x73: u64 = 0;
    let mut x74: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x73, &mut x74, 0x0, x23, x56);
    let mut x75: u64 = 0;
    let mut x76: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x75, &mut x76, x74, x25, x58);
    let mut x77: u64 = 0;
    let mut x78: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x77, &mut x78, x76, x27, x60);
    let mut x79: u64 = 0;
    let mut x80: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x79, &mut x80, x78, x29, x62);
    let mut x81: u64 = 0;
    let mut x82: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x81, &mut x82, x80, x31, x64);
    let mut x83: u64 = 0;
    let mut x84: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x83, &mut x84, x82, x33, x66);
    let mut x85: u64 = 0;
    let mut x86: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x85, &mut x86, x84, x35, x68);
    let mut x87: u64 = 0;
    let mut x88: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x87, &mut x88, x86, x37, x70);
    let mut x89: u64 = 0;
    let mut x90: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x89, &mut x90, x88, x39, x72);
    let mut x91: u64 = 0;
    let mut x92: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x91, &mut x92, x1, (arg1[7]));
    let mut x93: u64 = 0;
    let mut x94: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x93, &mut x94, x1, (arg1[6]));
    let mut x95: u64 = 0;
    let mut x96: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x95, &mut x96, x1, (arg1[5]));
    let mut x97: u64 = 0;
    let mut x98: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x97, &mut x98, x1, (arg1[4]));
    let mut x99: u64 = 0;
    let mut x100: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x99, &mut x100, x1, (arg1[3]));
    let mut x101: u64 = 0;
    let mut x102: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x101, &mut x102, x1, (arg1[2]));
    let mut x103: u64 = 0;
    let mut x104: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x103, &mut x104, x1, (arg1[1]));
    let mut x105: u64 = 0;
    let mut x106: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x105, &mut x106, x1, (arg1[0]));
    let mut x107: u64 = 0;
    let mut x108: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x107, &mut x108, 0x0, x106, x103);
    let mut x109: u64 = 0;
    let mut x110: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x109, &mut x110, x108, x104, x101);
    let mut x111: u64 = 0;
    let mut x112: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x111, &mut x112, x110, x102, x99);
    let mut x113: u64 = 0;
    let mut x114: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x113, &mut x114, x112, x100, x97);
    let mut x115: u64 = 0;
    let mut x116: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x115, &mut x116, x114, x98, x95);
    let mut x117: u64 = 0;
    let mut x118: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x117, &mut x118, x116, x96, x93);
    let mut x119: u64 = 0;
    let mut x120: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x119, &mut x120, x118, x94, x91);
    let x121: u64 = ((x120 as u64) + x92);
    let mut x122: u64 = 0;
    let mut x123: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x122, &mut x123, 0x0, x75, x105);
    let mut x124: u64 = 0;
    let mut x125: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x124, &mut x125, x123, x77, x107);
    let mut x126: u64 = 0;
    let mut x127: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x126, &mut x127, x125, x79, x109);
    let mut x128: u64 = 0;
    let mut x129: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x128, &mut x129, x127, x81, x111);
    let mut x130: u64 = 0;
    let mut x131: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x130, &mut x131, x129, x83, x113);
    let mut x132: u64 = 0;
    let mut x133: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x132, &mut x133, x131, x85, x115);
    let mut x134: u64 = 0;
    let mut x135: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x134, &mut x135, x133, x87, x117);
    let mut x136: u64 = 0;
    let mut x137: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x136, &mut x137, x135, x89, x119);
    let mut x138: u64 = 0;
    let mut x139: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x138, &mut x139, x137, (x90 as u64), x121);
    let mut x140: u64 = 0;
    let mut x141: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x140, &mut x141, x122, 0xad49541f0f1b7027);
    let mut x142: u64 = 0;
    let mut x143: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x142, &mut x143, x140, 0xaadd9db8dbe9c48b);
    let mut x144: u64 = 0;
    let mut x145: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x144, &mut x145, x140, 0x3fd4e6ae33c9fc07);
    let mut x146: u64 = 0;
    let mut x147: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x146, &mut x147, x140, 0xcb308db3b3c9d20e);
    let mut x148: u64 = 0;
    let mut x149: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x148, &mut x149, x140, 0xd6639cca70330870);
    let mut x150: u64 = 0;
    let mut x151: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x150, &mut x151, x140, 0x553e5c414ca92619);
    let mut x152: u64 = 0;
    let mut x153: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x152, &mut x153, x140, 0x418661197fac1047);
    let mut x154: u64 = 0;
    let mut x155: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x154, &mut x155, x140, 0x1db1d381085ddadd);
    let mut x156: u64 = 0;
    let mut x157: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x156, &mut x157, x140, 0xb58796829ca90069);
    let mut x158: u64 = 0;
    let mut x159: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x158, &mut x159, 0x0, x157, x154);
    let mut x160: u64 = 0;
    let mut x161: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x160, &mut x161, x159, x155, x152);
    let mut x162: u64 = 0;
    let mut x163: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x162, &mut x163, x161, x153, x150);
    let mut x164: u64 = 0;
    let mut x165: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x164, &mut x165, x163, x151, x148);
    let mut x166: u64 = 0;
    let mut x167: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x166, &mut x167, x165, x149, x146);
    let mut x168: u64 = 0;
    let mut x169: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x168, &mut x169, x167, x147, x144);
    let mut x170: u64 = 0;
    let mut x171: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x170, &mut x171, x169, x145, x142);
    let x172: u64 = ((x171 as u64) + x143);
    let mut x173: u64 = 0;
    let mut x174: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x173, &mut x174, 0x0, x122, x156);
    let mut x175: u64 = 0;
    let mut x176: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x175, &mut x176, x174, x124, x158);
    let mut x177: u64 = 0;
    let mut x178: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x177, &mut x178, x176, x126, x160);
    let mut x179: u64 = 0;
    let mut x180: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x179, &mut x180, x178, x128, x162);
    let mut x181: u64 = 0;
    let mut x182: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x181, &mut x182, x180, x130, x164);
    let mut x183: u64 = 0;
    let mut x184: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x183, &mut x184, x182, x132, x166);
    let mut x185: u64 = 0;
    let mut x186: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x185, &mut x186, x184, x134, x168);
    let mut x187: u64 = 0;
    let mut x188: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x187, &mut x188, x186, x136, x170);
    let mut x189: u64 = 0;
    let mut x190: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x189, &mut x190, x188, x138, x172);
    let x191: u64 = ((x190 as u64) + (x139 as u64));
    let mut x192: u64 = 0;
    let mut x193: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x192, &mut x193, x2, (arg1[7]));
    let mut x194: u64 = 0;
    let mut x195: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x194, &mut x195, x2, (arg1[6]));
    let mut x196: u64 = 0;
    let mut x197: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x196, &mut x197, x2, (arg1[5]));
    let mut x198: u64 = 0;
    let mut x199: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x198, &mut x199, x2, (arg1[4]));
    let mut x200: u64 = 0;
    let mut x201: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x200, &mut x201, x2, (arg1[3]));
    let mut x202: u64 = 0;
    let mut x203: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x202, &mut x203, x2, (arg1[2]));
    let mut x204: u64 = 0;
    let mut x205: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x204, &mut x205, x2, (arg1[1]));
    let mut x206: u64 = 0;
    let mut x207: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x206, &mut x207, x2, (arg1[0]));
    let mut x208: u64 = 0;
    let mut x209: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x208, &mut x209, 0x0, x207, x204);
    let mut x210: u64 = 0;
    let mut x211: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x210, &mut x211, x209, x205, x202);
    let mut x212: u64 = 0;
    let mut x213: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x212, &mut x213, x211, x203, x200);
    let mut x214: u64 = 0;
    let mut x215: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x214, &mut x215, x213, x201, x198);
    let mut x216: u64 = 0;
    let mut x217: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x216, &mut x217, x215, x199, x196);
    let mut x218: u64 = 0;
    let mut x219: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x218, &mut x219, x217, x197, x194);
    let mut x220: u64 = 0;
    let mut x221: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x220, &mut x221, x219, x195, x192);
    let x222: u64 = ((x221 as u64) + x193);
    let mut x223: u64 = 0;
    let mut x224: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x223, &mut x224, 0x0, x175, x206);
    let mut x225: u64 = 0;
    let mut x226: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x225, &mut x226, x224, x177, x208);
    let mut x227: u64 = 0;
    let mut x228: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x227, &mut x228, x226, x179, x210);
    let mut x229: u64 = 0;
    let mut x230: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x229, &mut x230, x228, x181, x212);
    let mut x231: u64 = 0;
    let mut x232: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x231, &mut x232, x230, x183, x214);
    let mut x233: u64 = 0;
    let mut x234: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x233, &mut x234, x232, x185, x216);
    let mut x235: u64 = 0;
    let mut x236: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x235, &mut x236, x234, x187, x218);
    let mut x237: u64 = 0;
    let mut x238: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x237, &mut x238, x236, x189, x220);
    let mut x239: u64 = 0;
    let mut x240: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x239, &mut x240, x238, x191, x222);
    let mut x241: u64 = 0;
    let mut x242: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x241, &mut x242, x223, 0xad49541f0f1b7027);
    let mut x243: u64 = 0;
    let mut x244: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x243, &mut x244, x241, 0xaadd9db8dbe9c48b);
    let mut x245: u64 = 0;
    let mut x246: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x245, &mut x246, x241, 0x3fd4e6ae33c9fc07);
    let mut x247: u64 = 0;
    let mut x248: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x247, &mut x248, x241, 0xcb308db3b3c9d20e);
    let mut x249: u64 = 0;
    let mut x250: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x249, &mut x250, x241, 0xd6639cca70330870);
    let mut x251: u64 = 0;
    let mut x252: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x251, &mut x252, x241, 0x553e5c414ca92619);
    let mut x253: u64 = 0;
    let mut x254: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x253, &mut x254, x241, 0x418661197fac1047);
    let mut x255: u64 = 0;
    let mut x256: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x255, &mut x256, x241, 0x1db1d381085ddadd);
    let mut x257: u64 = 0;
    let mut x258: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x257, &mut x258, x241, 0xb58796829ca90069);
    let mut x259: u64 = 0;
    let mut x260: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x259, &mut x260, 0x0, x258, x255);
    let mut x261: u64 = 0;
    let mut x262: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x261, &mut x262, x260, x256, x253);
    let mut x263: u64 = 0;
    let mut x264: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x263, &mut x264, x262, x254, x251);
    let mut x265: u64 = 0;
    let mut x266: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x265, &mut x266, x264, x252, x249);
    let mut x267: u64 = 0;
    let mut x268: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x267, &mut x268, x266, x250, x247);
    let mut x269: u64 = 0;
    let mut x270: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x269, &mut x270, x268, x248, x245);
    let mut x271: u64 = 0;
    let mut x272: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x271, &mut x272, x270, x246, x243);
    let x273: u64 = ((x272 as u64) + x244);
    let mut x274: u64 = 0;
    let mut x275: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x274, &mut x275, 0x0, x223, x257);
    let mut x276: u64 = 0;
    let mut x277: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x276, &mut x277, x275, x225, x259);
    let mut x278: u64 = 0;
    let mut x279: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x278, &mut x279, x277, x227, x261);
    let mut x280: u64 = 0;
    let mut x281: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x280, &mut x281, x279, x229, x263);
    let mut x282: u64 = 0;
    let mut x283: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x282, &mut x283, x281, x231, x265);
    let mut x284: u64 = 0;
    let mut x285: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x284, &mut x285, x283, x233, x267);
    let mut x286: u64 = 0;
    let mut x287: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x286, &mut x287, x285, x235, x269);
    let mut x288: u64 = 0;
    let mut x289: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x288, &mut x289, x287, x237, x271);
    let mut x290: u64 = 0;
    let mut x291: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x290, &mut x291, x289, x239, x273);
    let x292: u64 = ((x291 as u64) + (x240 as u64));
    let mut x293: u64 = 0;
    let mut x294: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x293, &mut x294, x3, (arg1[7]));
    let mut x295: u64 = 0;
    let mut x296: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x295, &mut x296, x3, (arg1[6]));
    let mut x297: u64 = 0;
    let mut x298: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x297, &mut x298, x3, (arg1[5]));
    let mut x299: u64 = 0;
    let mut x300: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x299, &mut x300, x3, (arg1[4]));
    let mut x301: u64 = 0;
    let mut x302: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x301, &mut x302, x3, (arg1[3]));
    let mut x303: u64 = 0;
    let mut x304: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x303, &mut x304, x3, (arg1[2]));
    let mut x305: u64 = 0;
    let mut x306: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x305, &mut x306, x3, (arg1[1]));
    let mut x307: u64 = 0;
    let mut x308: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x307, &mut x308, x3, (arg1[0]));
    let mut x309: u64 = 0;
    let mut x310: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x309, &mut x310, 0x0, x308, x305);
    let mut x311: u64 = 0;
    let mut x312: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x311, &mut x312, x310, x306, x303);
    let mut x313: u64 = 0;
    let mut x314: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x313, &mut x314, x312, x304, x301);
    let mut x315: u64 = 0;
    let mut x316: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x315, &mut x316, x314, x302, x299);
    let mut x317: u64 = 0;
    let mut x318: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x317, &mut x318, x316, x300, x297);
    let mut x319: u64 = 0;
    let mut x320: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x319, &mut x320, x318, x298, x295);
    let mut x321: u64 = 0;
    let mut x322: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x321, &mut x322, x320, x296, x293);
    let x323: u64 = ((x322 as u64) + x294);
    let mut x324: u64 = 0;
    let mut x325: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x324, &mut x325, 0x0, x276, x307);
    let mut x326: u64 = 0;
    let mut x327: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x326, &mut x327, x325, x278, x309);
    let mut x328: u64 = 0;
    let mut x329: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x328, &mut x329, x327, x280, x311);
    let mut x330: u64 = 0;
    let mut x331: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x330, &mut x331, x329, x282, x313);
    let mut x332: u64 = 0;
    let mut x333: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x332, &mut x333, x331, x284, x315);
    let mut x334: u64 = 0;
    let mut x335: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x334, &mut x335, x333, x286, x317);
    let mut x336: u64 = 0;
    let mut x337: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x336, &mut x337, x335, x288, x319);
    let mut x338: u64 = 0;
    let mut x339: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x338, &mut x339, x337, x290, x321);
    let mut x340: u64 = 0;
    let mut x341: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x340, &mut x341, x339, x292, x323);
    let mut x342: u64 = 0;
    let mut x343: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x342, &mut x343, x324, 0xad49541f0f1b7027);
    let mut x344: u64 = 0;
    let mut x345: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x344, &mut x345, x342, 0xaadd9db8dbe9c48b);
    let mut x346: u64 = 0;
    let mut x347: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x346, &mut x347, x342, 0x3fd4e6ae33c9fc07);
    let mut x348: u64 = 0;
    let mut x349: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x348, &mut x349, x342, 0xcb308db3b3c9d20e);
    let mut x350: u64 = 0;
    let mut x351: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x350, &mut x351, x342, 0xd6639cca70330870);
    let mut x352: u64 = 0;
    let mut x353: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x352, &mut x353, x342, 0x553e5c414ca92619);
    let mut x354: u64 = 0;
    let mut x355: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x354, &mut x355, x342, 0x418661197fac1047);
    let mut x356: u64 = 0;
    let mut x357: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x356, &mut x357, x342, 0x1db1d381085ddadd);
    let mut x358: u64 = 0;
    let mut x359: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x358, &mut x359, x342, 0xb58796829ca90069);
    let mut x360: u64 = 0;
    let mut x361: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x360, &mut x361, 0x0, x359, x356);
    let mut x362: u64 = 0;
    let mut x363: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x362, &mut x363, x361, x357, x354);
    let mut x364: u64 = 0;
    let mut x365: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x364, &mut x365, x363, x355, x352);
    let mut x366: u64 = 0;
    let mut x367: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x366, &mut x367, x365, x353, x350);
    let mut x368: u64 = 0;
    let mut x369: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x368, &mut x369, x367, x351, x348);
    let mut x370: u64 = 0;
    let mut x371: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x370, &mut x371, x369, x349, x346);
    let mut x372: u64 = 0;
    let mut x373: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x372, &mut x373, x371, x347, x344);
    let x374: u64 = ((x373 as u64) + x345);
    let mut x375: u64 = 0;
    let mut x376: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x375, &mut x376, 0x0, x324, x358);
    let mut x377: u64 = 0;
    let mut x378: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x377, &mut x378, x376, x326, x360);
    let mut x379: u64 = 0;
    let mut x380: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x379, &mut x380, x378, x328, x362);
    let mut x381: u64 = 0;
    let mut x382: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x381, &mut x382, x380, x330, x364);
    let mut x383: u64 = 0;
    let mut x384: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x383, &mut x384, x382, x332, x366);
    let mut x385: u64 = 0;
    let mut x386: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x385, &mut x386, x384, x334, x368);
    let mut x387: u64 = 0;
    let mut x388: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x387, &mut x388, x386, x336, x370);
    let mut x389: u64 = 0;
    let mut x390: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x389, &mut x390, x388, x338, x372);
    let mut x391: u64 = 0;
    let mut x392: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x391, &mut x392, x390, x340, x374);
    let x393: u64 = ((x392 as u64) + (x341 as u64));
    let mut x394: u64 = 0;
    let mut x395: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x394, &mut x395, x4, (arg1[7]));
    let mut x396: u64 = 0;
    let mut x397: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x396, &mut x397, x4, (arg1[6]));
    let mut x398: u64 = 0;
    let mut x399: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x398, &mut x399, x4, (arg1[5]));
    let mut x400: u64 = 0;
    let mut x401: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x400, &mut x401, x4, (arg1[4]));
    let mut x402: u64 = 0;
    let mut x403: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x402, &mut x403, x4, (arg1[3]));
    let mut x404: u64 = 0;
    let mut x405: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x404, &mut x405, x4, (arg1[2]));
    let mut x406: u64 = 0;
    let mut x407: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x406, &mut x407, x4, (arg1[1]));
    let mut x408: u64 = 0;
    let mut x409: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x408, &mut x409, x4, (arg1[0]));
    let mut x410: u64 = 0;
    let mut x411: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x410, &mut x411, 0x0, x409, x406);
    let mut x412: u64 = 0;
    let mut x413: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x412, &mut x413, x411, x407, x404);
    let mut x414: u64 = 0;
    let mut x415: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x414, &mut x415, x413, x405, x402);
    let mut x416: u64 = 0;
    let mut x417: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x416, &mut x417, x415, x403, x400);
    let mut x418: u64 = 0;
    let mut x419: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x418, &mut x419, x417, x401, x398);
    let mut x420: u64 = 0;
    let mut x421: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x420, &mut x421, x419, x399, x396);
    let mut x422: u64 = 0;
    let mut x423: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x422, &mut x423, x421, x397, x394);
    let x424: u64 = ((x423 as u64) + x395);
    let mut x425: u64 = 0;
    let mut x426: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x425, &mut x426, 0x0, x377, x408);
    let mut x427: u64 = 0;
    let mut x428: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x427, &mut x428, x426, x379, x410);
    let mut x429: u64 = 0;
    let mut x430: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x429, &mut x430, x428, x381, x412);
    let mut x431: u64 = 0;
    let mut x432: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x431, &mut x432, x430, x383, x414);
    let mut x433: u64 = 0;
    let mut x434: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x433, &mut x434, x432, x385, x416);
    let mut x435: u64 = 0;
    let mut x436: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x435, &mut x436, x434, x387, x418);
    let mut x437: u64 = 0;
    let mut x438: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x437, &mut x438, x436, x389, x420);
    let mut x439: u64 = 0;
    let mut x440: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x439, &mut x440, x438, x391, x422);
    let mut x441: u64 = 0;
    let mut x442: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x441, &mut x442, x440, x393, x424);
    let mut x443: u64 = 0;
    let mut x444: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x443, &mut x444, x425, 0xad49541f0f1b7027);
    let mut x445: u64 = 0;
    let mut x446: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x445, &mut x446, x443, 0xaadd9db8dbe9c48b);
    let mut x447: u64 = 0;
    let mut x448: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x447, &mut x448, x443, 0x3fd4e6ae33c9fc07);
    let mut x449: u64 = 0;
    let mut x450: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x449, &mut x450, x443, 0xcb308db3b3c9d20e);
    let mut x451: u64 = 0;
    let mut x452: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x451, &mut x452, x443, 0xd6639cca70330870);
    let mut x453: u64 = 0;
    let mut x454: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x453, &mut x454, x443, 0x553e5c414ca92619);
    let mut x455: u64 = 0;
    let mut x456: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x455, &mut x456, x443, 0x418661197fac1047);
    let mut x457: u64 = 0;
    let mut x458: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x457, &mut x458, x443, 0x1db1d381085ddadd);
    let mut x459: u64 = 0;
    let mut x460: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x459, &mut x460, x443, 0xb58796829ca90069);
    let mut x461: u64 = 0;
    let mut x462: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x461, &mut x462, 0x0, x460, x457);
    let mut x463: u64 = 0;
    let mut x464: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x463, &mut x464, x462, x458, x455);
    let mut x465: u64 = 0;
    let mut x466: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x465, &mut x466, x464, x456, x453);
    let mut x467: u64 = 0;
    let mut x468: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x467, &mut x468, x466, x454, x451);
    let mut x469: u64 = 0;
    let mut x470: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x469, &mut x470, x468, x452, x449);
    let mut x471: u64 = 0;
    let mut x472: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x471, &mut x472, x470, x450, x447);
    let mut x473: u64 = 0;
    let mut x474: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x473, &mut x474, x472, x448, x445);
    let x475: u64 = ((x474 as u64) + x446);
    let mut x476: u64 = 0;
    let mut x477: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x476, &mut x477, 0x0, x425, x459);
    let mut x478: u64 = 0;
    let mut x479: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x478, &mut x479, x477, x427, x461);
    let mut x480: u64 = 0;
    let mut x481: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x480, &mut x481, x479, x429, x463);
    let mut x482: u64 = 0;
    let mut x483: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x482, &mut x483, x481, x431, x465);
    let mut x484: u64 = 0;
    let mut x485: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x484, &mut x485, x483, x433, x467);
    let mut x486: u64 = 0;
    let mut x487: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x486, &mut x487, x485, x435, x469);
    let mut x488: u64 = 0;
    let mut x489: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x488, &mut x489, x487, x437, x471);
    let mut x490: u64 = 0;
    let mut x491: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x490, &mut x491, x489, x439, x473);
    let mut x492: u64 = 0;
    let mut x493: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x492, &mut x493, x491, x441, x475);
    let x494: u64 = ((x493 as u64) + (x442 as u64));
    let mut x495: u64 = 0;
    let mut x496: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x495, &mut x496, x5, (arg1[7]));
    let mut x497: u64 = 0;
    let mut x498: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x497, &mut x498, x5, (arg1[6]));
    let mut x499: u64 = 0;
    let mut x500: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x499, &mut x500, x5, (arg1[5]));
    let mut x501: u64 = 0;
    let mut x502: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x501, &mut x502, x5, (arg1[4]));
    let mut x503: u64 = 0;
    let mut x504: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x503, &mut x504, x5, (arg1[3]));
    let mut x505: u64 = 0;
    let mut x506: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x505, &mut x506, x5, (arg1[2]));
    let mut x507: u64 = 0;
    let mut x508: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x507, &mut x508, x5, (arg1[1]));
    let mut x509: u64 = 0;
    let mut x510: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x509, &mut x510, x5, (arg1[0]));
    let mut x511: u64 = 0;
    let mut x512: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x511, &mut x512, 0x0, x510, x507);
    let mut x513: u64 = 0;
    let mut x514: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x513, &mut x514, x512, x508, x505);
    let mut x515: u64 = 0;
    let mut x516: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x515, &mut x516, x514, x506, x503);
    let mut x517: u64 = 0;
    let mut x518: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x517, &mut x518, x516, x504, x501);
    let mut x519: u64 = 0;
    let mut x520: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x519, &mut x520, x518, x502, x499);
    let mut x521: u64 = 0;
    let mut x522: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x521, &mut x522, x520, x500, x497);
    let mut x523: u64 = 0;
    let mut x524: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x523, &mut x524, x522, x498, x495);
    let x525: u64 = ((x524 as u64) + x496);
    let mut x526: u64 = 0;
    let mut x527: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x526, &mut x527, 0x0, x478, x509);
    let mut x528: u64 = 0;
    let mut x529: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x528, &mut x529, x527, x480, x511);
    let mut x530: u64 = 0;
    let mut x531: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x530, &mut x531, x529, x482, x513);
    let mut x532: u64 = 0;
    let mut x533: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x532, &mut x533, x531, x484, x515);
    let mut x534: u64 = 0;
    let mut x535: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x534, &mut x535, x533, x486, x517);
    let mut x536: u64 = 0;
    let mut x537: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x536, &mut x537, x535, x488, x519);
    let mut x538: u64 = 0;
    let mut x539: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x538, &mut x539, x537, x490, x521);
    let mut x540: u64 = 0;
    let mut x541: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x540, &mut x541, x539, x492, x523);
    let mut x542: u64 = 0;
    let mut x543: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x542, &mut x543, x541, x494, x525);
    let mut x544: u64 = 0;
    let mut x545: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x544, &mut x545, x526, 0xad49541f0f1b7027);
    let mut x546: u64 = 0;
    let mut x547: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x546, &mut x547, x544, 0xaadd9db8dbe9c48b);
    let mut x548: u64 = 0;
    let mut x549: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x548, &mut x549, x544, 0x3fd4e6ae33c9fc07);
    let mut x550: u64 = 0;
    let mut x551: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x550, &mut x551, x544, 0xcb308db3b3c9d20e);
    let mut x552: u64 = 0;
    let mut x553: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x552, &mut x553, x544, 0xd6639cca70330870);
    let mut x554: u64 = 0;
    let mut x555: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x554, &mut x555, x544, 0x553e5c414ca92619);
    let mut x556: u64 = 0;
    let mut x557: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x556, &mut x557, x544, 0x418661197fac1047);
    let mut x558: u64 = 0;
    let mut x559: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x558, &mut x559, x544, 0x1db1d381085ddadd);
    let mut x560: u64 = 0;
    let mut x561: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x560, &mut x561, x544, 0xb58796829ca90069);
    let mut x562: u64 = 0;
    let mut x563: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x562, &mut x563, 0x0, x561, x558);
    let mut x564: u64 = 0;
    let mut x565: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x564, &mut x565, x563, x559, x556);
    let mut x566: u64 = 0;
    let mut x567: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x566, &mut x567, x565, x557, x554);
    let mut x568: u64 = 0;
    let mut x569: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x568, &mut x569, x567, x555, x552);
    let mut x570: u64 = 0;
    let mut x571: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x570, &mut x571, x569, x553, x550);
    let mut x572: u64 = 0;
    let mut x573: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x572, &mut x573, x571, x551, x548);
    let mut x574: u64 = 0;
    let mut x575: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x574, &mut x575, x573, x549, x546);
    let x576: u64 = ((x575 as u64) + x547);
    let mut x577: u64 = 0;
    let mut x578: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x577, &mut x578, 0x0, x526, x560);
    let mut x579: u64 = 0;
    let mut x580: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x579, &mut x580, x578, x528, x562);
    let mut x581: u64 = 0;
    let mut x582: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x581, &mut x582, x580, x530, x564);
    let mut x583: u64 = 0;
    let mut x584: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x583, &mut x584, x582, x532, x566);
    let mut x585: u64 = 0;
    let mut x586: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x585, &mut x586, x584, x534, x568);
    let mut x587: u64 = 0;
    let mut x588: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x587, &mut x588, x586, x536, x570);
    let mut x589: u64 = 0;
    let mut x590: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x589, &mut x590, x588, x538, x572);
    let mut x591: u64 = 0;
    let mut x592: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x591, &mut x592, x590, x540, x574);
    let mut x593: u64 = 0;
    let mut x594: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x593, &mut x594, x592, x542, x576);
    let x595: u64 = ((x594 as u64) + (x543 as u64));
    let mut x596: u64 = 0;
    let mut x597: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x596, &mut x597, x6, (arg1[7]));
    let mut x598: u64 = 0;
    let mut x599: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x598, &mut x599, x6, (arg1[6]));
    let mut x600: u64 = 0;
    let mut x601: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x600, &mut x601, x6, (arg1[5]));
    let mut x602: u64 = 0;
    let mut x603: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x602, &mut x603, x6, (arg1[4]));
    let mut x604: u64 = 0;
    let mut x605: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x604, &mut x605, x6, (arg1[3]));
    let mut x606: u64 = 0;
    let mut x607: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x606, &mut x607, x6, (arg1[2]));
    let mut x608: u64 = 0;
    let mut x609: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x608, &mut x609, x6, (arg1[1]));
    let mut x610: u64 = 0;
    let mut x611: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x610, &mut x611, x6, (arg1[0]));
    let mut x612: u64 = 0;
    let mut x613: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x612, &mut x613, 0x0, x611, x608);
    let mut x614: u64 = 0;
    let mut x615: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x614, &mut x615, x613, x609, x606);
    let mut x616: u64 = 0;
    let mut x617: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x616, &mut x617, x615, x607, x604);
    let mut x618: u64 = 0;
    let mut x619: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x618, &mut x619, x617, x605, x602);
    let mut x620: u64 = 0;
    let mut x621: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x620, &mut x621, x619, x603, x600);
    let mut x622: u64 = 0;
    let mut x623: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x622, &mut x623, x621, x601, x598);
    let mut x624: u64 = 0;
    let mut x625: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x624, &mut x625, x623, x599, x596);
    let x626: u64 = ((x625 as u64) + x597);
    let mut x627: u64 = 0;
    let mut x628: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x627, &mut x628, 0x0, x579, x610);
    let mut x629: u64 = 0;
    let mut x630: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x629, &mut x630, x628, x581, x612);
    let mut x631: u64 = 0;
    let mut x632: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x631, &mut x632, x630, x583, x614);
    let mut x633: u64 = 0;
    let mut x634: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x633, &mut x634, x632, x585, x616);
    let mut x635: u64 = 0;
    let mut x636: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x635, &mut x636, x634, x587, x618);
    let mut x637: u64 = 0;
    let mut x638: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x637, &mut x638, x636, x589, x620);
    let mut x639: u64 = 0;
    let mut x640: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x639, &mut x640, x638, x591, x622);
    let mut x641: u64 = 0;
    let mut x642: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x641, &mut x642, x640, x593, x624);
    let mut x643: u64 = 0;
    let mut x644: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x643, &mut x644, x642, x595, x626);
    let mut x645: u64 = 0;
    let mut x646: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x645, &mut x646, x627, 0xad49541f0f1b7027);
    let mut x647: u64 = 0;
    let mut x648: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x647, &mut x648, x645, 0xaadd9db8dbe9c48b);
    let mut x649: u64 = 0;
    let mut x650: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x649, &mut x650, x645, 0x3fd4e6ae33c9fc07);
    let mut x651: u64 = 0;
    let mut x652: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x651, &mut x652, x645, 0xcb308db3b3c9d20e);
    let mut x653: u64 = 0;
    let mut x654: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x653, &mut x654, x645, 0xd6639cca70330870);
    let mut x655: u64 = 0;
    let mut x656: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x655, &mut x656, x645, 0x553e5c414ca92619);
    let mut x657: u64 = 0;
    let mut x658: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x657, &mut x658, x645, 0x418661197fac1047);
    let mut x659: u64 = 0;
    let mut x660: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x659, &mut x660, x645, 0x1db1d381085ddadd);
    let mut x661: u64 = 0;
    let mut x662: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x661, &mut x662, x645, 0xb58796829ca90069);
    let mut x663: u64 = 0;
    let mut x664: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x663, &mut x664, 0x0, x662, x659);
    let mut x665: u64 = 0;
    let mut x666: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x665, &mut x666, x664, x660, x657);
    let mut x667: u64 = 0;
    let mut x668: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x667, &mut x668, x666, x658, x655);
    let mut x669: u64 = 0;
    let mut x670: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x669, &mut x670, x668, x656, x653);
    let mut x671: u64 = 0;
    let mut x672: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x671, &mut x672, x670, x654, x651);
    let mut x673: u64 = 0;
    let mut x674: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x673, &mut x674, x672, x652, x649);
    let mut x675: u64 = 0;
    let mut x676: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x675, &mut x676, x674, x650, x647);
    let x677: u64 = ((x676 as u64) + x648);
    let mut x678: u64 = 0;
    let mut x679: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x678, &mut x679, 0x0, x627, x661);
    let mut x680: u64 = 0;
    let mut x681: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x680, &mut x681, x679, x629, x663);
    let mut x682: u64 = 0;
    let mut x683: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x682, &mut x683, x681, x631, x665);
    let mut x684: u64 = 0;
    let mut x685: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x684, &mut x685, x683, x633, x667);
    let mut x686: u64 = 0;
    let mut x687: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x686, &mut x687, x685, x635, x669);
    let mut x688: u64 = 0;
    let mut x689: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x688, &mut x689, x687, x637, x671);
    let mut x690: u64 = 0;
    let mut x691: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x690, &mut x691, x689, x639, x673);
    let mut x692: u64 = 0;
    let mut x693: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x692, &mut x693, x691, x641, x675);
    let mut x694: u64 = 0;
    let mut x695: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x694, &mut x695, x693, x643, x677);
    let x696: u64 = ((x695 as u64) + (x644 as u64));
    let mut x697: u64 = 0;
    let mut x698: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x697, &mut x698, x7, (arg1[7]));
    let mut x699: u64 = 0;
    let mut x700: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x699, &mut x700, x7, (arg1[6]));
    let mut x701: u64 = 0;
    let mut x702: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x701, &mut x702, x7, (arg1[5]));
    let mut x703: u64 = 0;
    let mut x704: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x703, &mut x704, x7, (arg1[4]));
    let mut x705: u64 = 0;
    let mut x706: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x705, &mut x706, x7, (arg1[3]));
    let mut x707: u64 = 0;
    let mut x708: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x707, &mut x708, x7, (arg1[2]));
    let mut x709: u64 = 0;
    let mut x710: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x709, &mut x710, x7, (arg1[1]));
    let mut x711: u64 = 0;
    let mut x712: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x711, &mut x712, x7, (arg1[0]));
    let mut x713: u64 = 0;
    let mut x714: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x713, &mut x714, 0x0, x712, x709);
    let mut x715: u64 = 0;
    let mut x716: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x715, &mut x716, x714, x710, x707);
    let mut x717: u64 = 0;
    let mut x718: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x717, &mut x718, x716, x708, x705);
    let mut x719: u64 = 0;
    let mut x720: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x719, &mut x720, x718, x706, x703);
    let mut x721: u64 = 0;
    let mut x722: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x721, &mut x722, x720, x704, x701);
    let mut x723: u64 = 0;
    let mut x724: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x723, &mut x724, x722, x702, x699);
    let mut x725: u64 = 0;
    let mut x726: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x725, &mut x726, x724, x700, x697);
    let x727: u64 = ((x726 as u64) + x698);
    let mut x728: u64 = 0;
    let mut x729: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x728, &mut x729, 0x0, x680, x711);
    let mut x730: u64 = 0;
    let mut x731: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x730, &mut x731, x729, x682, x713);
    let mut x732: u64 = 0;
    let mut x733: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x732, &mut x733, x731, x684, x715);
    let mut x734: u64 = 0;
    let mut x735: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x734, &mut x735, x733, x686, x717);
    let mut x736: u64 = 0;
    let mut x737: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x736, &mut x737, x735, x688, x719);
    let mut x738: u64 = 0;
    let mut x739: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x738, &mut x739, x737, x690, x721);
    let mut x740: u64 = 0;
    let mut x741: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x740, &mut x741, x739, x692, x723);
    let mut x742: u64 = 0;
    let mut x743: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x742, &mut x743, x741, x694, x725);
    let mut x744: u64 = 0;
    let mut x745: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x744, &mut x745, x743, x696, x727);
    let mut x746: u64 = 0;
    let mut x747: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x746, &mut x747, x728, 0xad49541f0f1b7027);
    let mut x748: u64 = 0;
    let mut x749: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x748, &mut x749, x746, 0xaadd9db8dbe9c48b);
    let mut x750: u64 = 0;
    let mut x751: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x750, &mut x751, x746, 0x3fd4e6ae33c9fc07);
    let mut x752: u64 = 0;
    let mut x753: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x752, &mut x753, x746, 0xcb308db3b3c9d20e);
    let mut x754: u64 = 0;
    let mut x755: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x754, &mut x755, x746, 0xd6639cca70330870);
    let mut x756: u64 = 0;
    let mut x757: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x756, &mut x757, x746, 0x553e5c414ca92619);
    let mut x758: u64 = 0;
    let mut x759: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x758, &mut x759, x746, 0x418661197fac1047);
    let mut x760: u64 = 0;
    let mut x761: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x760, &mut x761, x746, 0x1db1d381085ddadd);
    let mut x762: u64 = 0;
    let mut x763: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x762, &mut x763, x746, 0xb58796829ca90069);
    let mut x764: u64 = 0;
    let mut x765: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x764, &mut x765, 0x0, x763, x760);
    let mut x766: u64 = 0;
    let mut x767: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x766, &mut x767, x765, x761, x758);
    let mut x768: u64 = 0;
    let mut x769: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x768, &mut x769, x767, x759, x756);
    let mut x770: u64 = 0;
    let mut x771: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x770, &mut x771, x769, x757, x754);
    let mut x772: u64 = 0;
    let mut x773: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x772, &mut x773, x771, x755, x752);
    let mut x774: u64 = 0;
    let mut x775: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x774, &mut x775, x773, x753, x750);
    let mut x776: u64 = 0;
    let mut x777: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x776, &mut x777, x775, x751, x748);
    let x778: u64 = ((x777 as u64) + x749);
    let mut x779: u64 = 0;
    let mut x780: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x779, &mut x780, 0x0, x728, x762);
    let mut x781: u64 = 0;
    let mut x782: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x781, &mut x782, x780, x730, x764);
    let mut x783: u64 = 0;
    let mut x784: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x783, &mut x784, x782, x732, x766);
    let mut x785: u64 = 0;
    let mut x786: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x785, &mut x786, x784, x734, x768);
    let mut x787: u64 = 0;
    let mut x788: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x787, &mut x788, x786, x736, x770);
    let mut x789: u64 = 0;
    let mut x790: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x789, &mut x790, x788, x738, x772);
    let mut x791: u64 = 0;
    let mut x792: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x791, &mut x792, x790, x740, x774);
    let mut x793: u64 = 0;
    let mut x794: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x793, &mut x794, x792, x742, x776);
    let mut x795: u64 = 0;
    let mut x796: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x795, &mut x796, x794, x744, x778);
    let x797: u64 = ((x796 as u64) + (x745 as u64));
    let mut x798: u64 = 0;
    let mut x799: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x798, &mut x799, 0x0, x781, 0xb58796829ca90069);
    let mut x800: u64 = 0;
    let mut x801: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x800, &mut x801, x799, x783, 0x1db1d381085ddadd);
    let mut x802: u64 = 0;
    let mut x803: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x802, &mut x803, x801, x785, 0x418661197fac1047);
    let mut x804: u64 = 0;
    let mut x805: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x804, &mut x805, x803, x787, 0x553e5c414ca92619);
    let mut x806: u64 = 0;
    let mut x807: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x806, &mut x807, x805, x789, 0xd6639cca70330870);
    let mut x808: u64 = 0;
    let mut x809: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x808, &mut x809, x807, x791, 0xcb308db3b3c9d20e);
    let mut x810: u64 = 0;
    let mut x811: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x810, &mut x811, x809, x793, 0x3fd4e6ae33c9fc07);
    let mut x812: u64 = 0;
    let mut x813: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x812, &mut x813, x811, x795, 0xaadd9db8dbe9c48b);
    let mut x814: u64 = 0;
    let mut x815: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x814, &mut x815, x813, x797, (0x0 as u64));
    let mut x816: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x816, x815, x798, x781);
    let mut x817: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x817, x815, x800, x783);
    let mut x818: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x818, x815, x802, x785);
    let mut x819: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x819, x815, x804, x787);
    let mut x820: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x820, x815, x806, x789);
    let mut x821: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x821, x815, x808, x791);
    let mut x822: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x822, x815, x810, x793);
    let mut x823: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x823, x815, x812, x795);
    out1[0] = x816;
    out1[1] = x817;
    out1[2] = x818;
    out1[3] = x819;
    out1[4] = x820;
    out1[5] = x821;
    out1[6] = x822;
    out1[7] = x823;
}
/// The function fiat_bp512_scalar_add adds two field elements in the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_add(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
    arg2: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let arg2 = &arg2.0;
    let mut x1: u64 = 0;
    let mut x2: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
    let mut x3: u64 = 0;
    let mut x4: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
    let mut x5: u64 = 0;
    let mut x6: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
    let mut x7: u64 = 0;
    let mut x8: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
    let mut x9: u64 = 0;
    let mut x10: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
    let mut x11: u64 = 0;
    let mut x12: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
    let mut x13: u64 = 0;
    let mut x14: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
    let mut x15: u64 = 0;
    let mut x16: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x15, &mut x16, x14, (arg1[7]), (arg2[7]));
    let mut x17: u64 = 0;
    let mut x18: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x17, &mut x18, 0x0, x1, 0xb58796829ca90069);
    let mut x19: u64 = 0;
    let mut x20: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x19, &mut x20, x18, x3, 0x1db1d381085ddadd);
    let mut x21: u64 = 0;
    let mut x22: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x21, &mut x22, x20, x5, 0x418661197fac1047);
    let mut x23: u64 = 0;
    let mut x24: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x23, &mut x24, x22, x7, 0x553e5c414ca92619);
    let mut x25: u64 = 0;
    let mut x26: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x25, &mut x26, x24, x9, 0xd6639cca70330870);
    let mut x27: u64 = 0;
    let mut x28: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x27, &mut x28, x26, x11, 0xcb308db3b3c9d20e);
    let mut x29: u64 = 0;
    let mut x30: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x29, &mut x30, x28, x13, 0x3fd4e6ae33c9fc07);
    let mut x31: u64 = 0;
    let mut x32: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x31, &mut x32, x30, x15, 0xaadd9db8dbe9c48b);
    let mut x33: u64 = 0;
    let mut x34: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x33, &mut x34, x32, (x16 as u64), (0x0 as u64));
    let mut x35: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x35, x34, x17, x1);
    let mut x36: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x36, x34, x19, x3);
    let mut x37: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x37, x34, x21, x5);
    let mut x38: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x38, x34, x23, x7);
    let mut x39: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x39, x34, x25, x9);
    let mut x40: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x40, x34, x27, x11);
    let mut x41: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x41, x34, x29, x13);
    let mut x42: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x42, x34, x31, x15);
    out1[0] = x35;
    out1[1] = x36;
    out1[2] = x37;
    out1[3] = x38;
    out1[4] = x39;
    out1[5] = x40;
    out1[6] = x41;
    out1[7] = x42;
}
/// The function fiat_bp512_scalar_sub subtracts two field elements in the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
///   0 ≤ eval arg2 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_sub(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
    arg2: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let arg2 = &arg2.0;
    let mut x1: u64 = 0;
    let mut x2: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
    let mut x3: u64 = 0;
    let mut x4: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
    let mut x5: u64 = 0;
    let mut x6: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
    let mut x7: u64 = 0;
    let mut x8: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
    let mut x9: u64 = 0;
    let mut x10: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
    let mut x11: u64 = 0;
    let mut x12: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
    let mut x13: u64 = 0;
    let mut x14: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
    let mut x15: u64 = 0;
    let mut x16: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x15, &mut x16, x14, (arg1[7]), (arg2[7]));
    let mut x17: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x17, x16, (0x0 as u64), 0xffffffffffffffff);
    let mut x18: u64 = 0;
    let mut x19: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x18, &mut x19, 0x0, x1, (x17 & 0xb58796829ca90069));
    let mut x20: u64 = 0;
    let mut x21: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x20, &mut x21, x19, x3, (x17 & 0x1db1d381085ddadd));
    let mut x22: u64 = 0;
    let mut x23: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x22, &mut x23, x21, x5, (x17 & 0x418661197fac1047));
    let mut x24: u64 = 0;
    let mut x25: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x24, &mut x25, x23, x7, (x17 & 0x553e5c414ca92619));
    let mut x26: u64 = 0;
    let mut x27: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x26, &mut x27, x25, x9, (x17 & 0xd6639cca70330870));
    let mut x28: u64 = 0;
    let mut x29: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x28, &mut x29, x27, x11, (x17 & 0xcb308db3b3c9d20e));
    let mut x30: u64 = 0;
    let mut x31: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x30, &mut x31, x29, x13, (x17 & 0x3fd4e6ae33c9fc07));
    let mut x32: u64 = 0;
    let mut x33: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x32, &mut x33, x31, x15, (x17 & 0xaadd9db8dbe9c48b));
    out1[0] = x18;
    out1[1] = x20;
    out1[2] = x22;
    out1[3] = x24;
    out1[4] = x26;
    out1[5] = x28;
    out1[6] = x30;
    out1[7] = x32;
}
/// The function fiat_bp512_scalar_opp negates a field element in the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_opp(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let mut x1: u64 = 0;
    let mut x2: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x1, &mut x2, 0x0, (0x0 as u64), (arg1[0]));
    let mut x3: u64 = 0;
    let mut x4: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x3, &mut x4, x2, (0x0 as u64), (arg1[1]));
    let mut x5: u64 = 0;
    let mut x6: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x5, &mut x6, x4, (0x0 as u64), (arg1[2]));
    let mut x7: u64 = 0;
    let mut x8: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x7, &mut x8, x6, (0x0 as u64), (arg1[3]));
    let mut x9: u64 = 0;
    let mut x10: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x9, &mut x10, x8, (0x0 as u64), (arg1[4]));
    let mut x11: u64 = 0;
    let mut x12: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x11, &mut x12, x10, (0x0 as u64), (arg1[5]));
    let mut x13: u64 = 0;
    let mut x14: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x13, &mut x14, x12, (0x0 as u64), (arg1[6]));
    let mut x15: u64 = 0;
    let mut x16: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x15, &mut x16, x14, (0x0 as u64), (arg1[7]));
    let mut x17: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x17, x16, (0x0 as u64), 0xffffffffffffffff);
    let mut x18: u64 = 0;
    let mut x19: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x18, &mut x19, 0x0, x1, (x17 & 0xb58796829ca90069));
    let mut x20: u64 = 0;
    let mut x21: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x20, &mut x21, x19, x3, (x17 & 0x1db1d381085ddadd));
    let mut x22: u64 = 0;
    let mut x23: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x22, &mut x23, x21, x5, (x17 & 0x418661197fac1047));
    let mut x24: u64 = 0;
    let mut x25: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x24, &mut x25, x23, x7, (x17 & 0x553e5c414ca92619));
    let mut x26: u64 = 0;
    let mut x27: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x26, &mut x27, x25, x9, (x17 & 0xd6639cca70330870));
    let mut x28: u64 = 0;
    let mut x29: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x28, &mut x29, x27, x11, (x17 & 0xcb308db3b3c9d20e));
    let mut x30: u64 = 0;
    let mut x31: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x30, &mut x31, x29, x13, (x17 & 0x3fd4e6ae33c9fc07));
    let mut x32: u64 = 0;
    let mut x33: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x32, &mut x33, x31, x15, (x17 & 0xaadd9db8dbe9c48b));
    out1[0] = x18;
    out1[1] = x20;
    out1[2] = x22;
    out1[3] = x24;
    out1[4] = x26;
    out1[5] = x28;
    out1[6] = x30;
    out1[7] = x32;
}
/// The function fiat_bp512_scalar_from_montgomery translates a field element out of the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval out1 mod m = (eval arg1 * ((2^64)⁻¹ mod m)^8) mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_from_montgomery(
    out1: &mut fiat_bp512_scalar_non_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let x1: u64 = (arg1[0]);
    let mut x2: u64 = 0;
    let mut x3: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x2, &mut x3, x1, 0xad49541f0f1b7027);
    let mut x4: u64 = 0;
    let mut x5: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x4, &mut x5, x2, 0xaadd9db8dbe9c48b);
    let mut x6: u64 = 0;
    let mut x7: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x6, &mut x7, x2, 0x3fd4e6ae33c9fc07);
    let mut x8: u64 = 0;
    let mut x9: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x8, &mut x9, x2, 0xcb308db3b3c9d20e);
    let mut x10: u64 = 0;
    let mut x11: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x10, &mut x11, x2, 0xd6639cca70330870);
    let mut x12: u64 = 0;
    let mut x13: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x12, &mut x13, x2, 0x553e5c414ca92619);
    let mut x14: u64 = 0;
    let mut x15: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x14, &mut x15, x2, 0x418661197fac1047);
    let mut x16: u64 = 0;
    let mut x17: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x16, &mut x17, x2, 0x1db1d381085ddadd);
    let mut x18: u64 = 0;
    let mut x19: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x18, &mut x19, x2, 0xb58796829ca90069);
    let mut x20: u64 = 0;
    let mut x21: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x20, &mut x21, 0x0, x19, x16);
    let mut x22: u64 = 0;
    let mut x23: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x22, &mut x23, x21, x17, x14);
    let mut x24: u64 = 0;
    let mut x25: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x24, &mut x25, x23, x15, x12);
    let mut x26: u64 = 0;
    let mut x27: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x26, &mut x27, x25, x13, x10);
    let mut x28: u64 = 0;
    let mut x29: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x28, &mut x29, x27, x11, x8);
    let mut x30: u64 = 0;
    let mut x31: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x30, &mut x31, x29, x9, x6);
    let mut x32: u64 = 0;
    let mut x33: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x32, &mut x33, x31, x7, x4);
    let mut x34: u64 = 0;
    let mut x35: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x34, &mut x35, 0x0, x1, x18);
    let mut x36: u64 = 0;
    let mut x37: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x36, &mut x37, x35, (0x0 as u64), x20);
    let mut x38: u64 = 0;
    let mut x39: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x38, &mut x39, x37, (0x0 as u64), x22);
    let mut x40: u64 = 0;
    let mut x41: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x40, &mut x41, x39, (0x0 as u64), x24);
    let mut x42: u64 = 0;
    let mut x43: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x42, &mut x43, x41, (0x0 as u64), x26);
    let mut x44: u64 = 0;
    let mut x45: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x44, &mut x45, x43, (0x0 as u64), x28);
    let mut x46: u64 = 0;
    let mut x47: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x46, &mut x47, x45, (0x0 as u64), x30);
    let mut x48: u64 = 0;
    let mut x49: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x48, &mut x49, x47, (0x0 as u64), x32);
    let mut x50: u64 = 0;
    let mut x51: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x50, &mut x51, 0x0, x36, (arg1[1]));
    let mut x52: u64 = 0;
    let mut x53: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x52, &mut x53, x51, x38, (0x0 as u64));
    let mut x54: u64 = 0;
    let mut x55: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x54, &mut x55, x53, x40, (0x0 as u64));
    let mut x56: u64 = 0;
    let mut x57: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x56, &mut x57, x55, x42, (0x0 as u64));
    let mut x58: u64 = 0;
    let mut x59: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x58, &mut x59, x57, x44, (0x0 as u64));
    let mut x60: u64 = 0;
    let mut x61: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x60, &mut x61, x59, x46, (0x0 as u64));
    let mut x62: u64 = 0;
    let mut x63: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x62, &mut x63, x61, x48, (0x0 as u64));
    let mut x64: u64 = 0;
    let mut x65: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x64, &mut x65, x50, 0xad49541f0f1b7027);
    let mut x66: u64 = 0;
    let mut x67: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x66, &mut x67, x64, 0xaadd9db8dbe9c48b);
    let mut x68: u64 = 0;
    let mut x69: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x68, &mut x69, x64, 0x3fd4e6ae33c9fc07);
    let mut x70: u64 = 0;
    let mut x71: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x70, &mut x71, x64, 0xcb308db3b3c9d20e);
    let mut x72: u64 = 0;
    let mut x73: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x72, &mut x73, x64, 0xd6639cca70330870);
    let mut x74: u64 = 0;
    let mut x75: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x74, &mut x75, x64, 0x553e5c414ca92619);
    let mut x76: u64 = 0;
    let mut x77: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x76, &mut x77, x64, 0x418661197fac1047);
    let mut x78: u64 = 0;
    let mut x79: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x78, &mut x79, x64, 0x1db1d381085ddadd);
    let mut x80: u64 = 0;
    let mut x81: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x80, &mut x81, x64, 0xb58796829ca90069);
    let mut x82: u64 = 0;
    let mut x83: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x82, &mut x83, 0x0, x81, x78);
    let mut x84: u64 = 0;
    let mut x85: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x84, &mut x85, x83, x79, x76);
    let mut x86: u64 = 0;
    let mut x87: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x86, &mut x87, x85, x77, x74);
    let mut x88: u64 = 0;
    let mut x89: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x88, &mut x89, x87, x75, x72);
    let mut x90: u64 = 0;
    let mut x91: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x90, &mut x91, x89, x73, x70);
    let mut x92: u64 = 0;
    let mut x93: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x92, &mut x93, x91, x71, x68);
    let mut x94: u64 = 0;
    let mut x95: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x94, &mut x95, x93, x69, x66);
    let mut x96: u64 = 0;
    let mut x97: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x96, &mut x97, 0x0, x50, x80);
    let mut x98: u64 = 0;
    let mut x99: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x98, &mut x99, x97, x52, x82);
    let mut x100: u64 = 0;
    let mut x101: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x100, &mut x101, x99, x54, x84);
    let mut x102: u64 = 0;
    let mut x103: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x102, &mut x103, x101, x56, x86);
    let mut x104: u64 = 0;
    let mut x105: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x104, &mut x105, x103, x58, x88);
    let mut x106: u64 = 0;
    let mut x107: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x106, &mut x107, x105, x60, x90);
    let mut x108: u64 = 0;
    let mut x109: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x108, &mut x109, x107, x62, x92);
    let mut x110: u64 = 0;
    let mut x111: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x110,
        &mut x111,
        x109,
        ((x63 as u64) + ((x49 as u64) + ((x33 as u64) + x5))),
        x94,
    );
    let mut x112: u64 = 0;
    let mut x113: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x112, &mut x113, 0x0, x98, (arg1[2]));
    let mut x114: u64 = 0;
    let mut x115: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x114, &mut x115, x113, x100, (0x0 as u64));
    let mut x116: u64 = 0;
    let mut x117: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x116, &mut x117, x115, x102, (0x0 as u64));
    let mut x118: u64 = 0;
    let mut x119: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x118, &mut x119, x117, x104, (0x0 as u64));
    let mut x120: u64 = 0;
    let mut x121: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x120, &mut x121, x119, x106, (0x0 as u64));
    let mut x122: u64 = 0;
    let mut x123: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x122, &mut x123, x121, x108, (0x0 as u64));
    let mut x124: u64 = 0;
    let mut x125: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x124, &mut x125, x123, x110, (0x0 as u64));
    let mut x126: u64 = 0;
    let mut x127: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x126, &mut x127, x112, 0xad49541f0f1b7027);
    let mut x128: u64 = 0;
    let mut x129: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x128, &mut x129, x126, 0xaadd9db8dbe9c48b);
    let mut x130: u64 = 0;
    let mut x131: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x130, &mut x131, x126, 0x3fd4e6ae33c9fc07);
    let mut x132: u64 = 0;
    let mut x133: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x132, &mut x133, x126, 0xcb308db3b3c9d20e);
    let mut x134: u64 = 0;
    let mut x135: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x134, &mut x135, x126, 0xd6639cca70330870);
    let mut x136: u64 = 0;
    let mut x137: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x136, &mut x137, x126, 0x553e5c414ca92619);
    let mut x138: u64 = 0;
    let mut x139: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x138, &mut x139, x126, 0x418661197fac1047);
    let mut x140: u64 = 0;
    let mut x141: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x140, &mut x141, x126, 0x1db1d381085ddadd);
    let mut x142: u64 = 0;
    let mut x143: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x142, &mut x143, x126, 0xb58796829ca90069);
    let mut x144: u64 = 0;
    let mut x145: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x144, &mut x145, 0x0, x143, x140);
    let mut x146: u64 = 0;
    let mut x147: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x146, &mut x147, x145, x141, x138);
    let mut x148: u64 = 0;
    let mut x149: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x148, &mut x149, x147, x139, x136);
    let mut x150: u64 = 0;
    let mut x151: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x150, &mut x151, x149, x137, x134);
    let mut x152: u64 = 0;
    let mut x153: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x152, &mut x153, x151, x135, x132);
    let mut x154: u64 = 0;
    let mut x155: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x154, &mut x155, x153, x133, x130);
    let mut x156: u64 = 0;
    let mut x157: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x156, &mut x157, x155, x131, x128);
    let mut x158: u64 = 0;
    let mut x159: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x158, &mut x159, 0x0, x112, x142);
    let mut x160: u64 = 0;
    let mut x161: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x160, &mut x161, x159, x114, x144);
    let mut x162: u64 = 0;
    let mut x163: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x162, &mut x163, x161, x116, x146);
    let mut x164: u64 = 0;
    let mut x165: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x164, &mut x165, x163, x118, x148);
    let mut x166: u64 = 0;
    let mut x167: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x166, &mut x167, x165, x120, x150);
    let mut x168: u64 = 0;
    let mut x169: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x168, &mut x169, x167, x122, x152);
    let mut x170: u64 = 0;
    let mut x171: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x170, &mut x171, x169, x124, x154);
    let mut x172: u64 = 0;
    let mut x173: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x172,
        &mut x173,
        x171,
        ((x125 as u64) + ((x111 as u64) + ((x95 as u64) + x67))),
        x156,
    );
    let mut x174: u64 = 0;
    let mut x175: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x174, &mut x175, 0x0, x160, (arg1[3]));
    let mut x176: u64 = 0;
    let mut x177: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x176, &mut x177, x175, x162, (0x0 as u64));
    let mut x178: u64 = 0;
    let mut x179: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x178, &mut x179, x177, x164, (0x0 as u64));
    let mut x180: u64 = 0;
    let mut x181: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x180, &mut x181, x179, x166, (0x0 as u64));
    let mut x182: u64 = 0;
    let mut x183: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x182, &mut x183, x181, x168, (0x0 as u64));
    let mut x184: u64 = 0;
    let mut x185: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x184, &mut x185, x183, x170, (0x0 as u64));
    let mut x186: u64 = 0;
    let mut x187: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x186, &mut x187, x185, x172, (0x0 as u64));
    let mut x188: u64 = 0;
    let mut x189: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x188, &mut x189, x174, 0xad49541f0f1b7027);
    let mut x190: u64 = 0;
    let mut x191: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x190, &mut x191, x188, 0xaadd9db8dbe9c48b);
    let mut x192: u64 = 0;
    let mut x193: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x192, &mut x193, x188, 0x3fd4e6ae33c9fc07);
    let mut x194: u64 = 0;
    let mut x195: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x194, &mut x195, x188, 0xcb308db3b3c9d20e);
    let mut x196: u64 = 0;
    let mut x197: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x196, &mut x197, x188, 0xd6639cca70330870);
    let mut x198: u64 = 0;
    let mut x199: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x198, &mut x199, x188, 0x553e5c414ca92619);
    let mut x200: u64 = 0;
    let mut x201: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x200, &mut x201, x188, 0x418661197fac1047);
    let mut x202: u64 = 0;
    let mut x203: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x202, &mut x203, x188, 0x1db1d381085ddadd);
    let mut x204: u64 = 0;
    let mut x205: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x204, &mut x205, x188, 0xb58796829ca90069);
    let mut x206: u64 = 0;
    let mut x207: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x206, &mut x207, 0x0, x205, x202);
    let mut x208: u64 = 0;
    let mut x209: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x208, &mut x209, x207, x203, x200);
    let mut x210: u64 = 0;
    let mut x211: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x210, &mut x211, x209, x201, x198);
    let mut x212: u64 = 0;
    let mut x213: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x212, &mut x213, x211, x199, x196);
    let mut x214: u64 = 0;
    let mut x215: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x214, &mut x215, x213, x197, x194);
    let mut x216: u64 = 0;
    let mut x217: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x216, &mut x217, x215, x195, x192);
    let mut x218: u64 = 0;
    let mut x219: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x218, &mut x219, x217, x193, x190);
    let mut x220: u64 = 0;
    let mut x221: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x220, &mut x221, 0x0, x174, x204);
    let mut x222: u64 = 0;
    let mut x223: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x222, &mut x223, x221, x176, x206);
    let mut x224: u64 = 0;
    let mut x225: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x224, &mut x225, x223, x178, x208);
    let mut x226: u64 = 0;
    let mut x227: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x226, &mut x227, x225, x180, x210);
    let mut x228: u64 = 0;
    let mut x229: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x228, &mut x229, x227, x182, x212);
    let mut x230: u64 = 0;
    let mut x231: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x230, &mut x231, x229, x184, x214);
    let mut x232: u64 = 0;
    let mut x233: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x232, &mut x233, x231, x186, x216);
    let mut x234: u64 = 0;
    let mut x235: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x234,
        &mut x235,
        x233,
        ((x187 as u64) + ((x173 as u64) + ((x157 as u64) + x129))),
        x218,
    );
    let mut x236: u64 = 0;
    let mut x237: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x236, &mut x237, 0x0, x222, (arg1[4]));
    let mut x238: u64 = 0;
    let mut x239: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x238, &mut x239, x237, x224, (0x0 as u64));
    let mut x240: u64 = 0;
    let mut x241: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x240, &mut x241, x239, x226, (0x0 as u64));
    let mut x242: u64 = 0;
    let mut x243: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x242, &mut x243, x241, x228, (0x0 as u64));
    let mut x244: u64 = 0;
    let mut x245: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x244, &mut x245, x243, x230, (0x0 as u64));
    let mut x246: u64 = 0;
    let mut x247: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x246, &mut x247, x245, x232, (0x0 as u64));
    let mut x248: u64 = 0;
    let mut x249: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x248, &mut x249, x247, x234, (0x0 as u64));
    let mut x250: u64 = 0;
    let mut x251: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x250, &mut x251, x236, 0xad49541f0f1b7027);
    let mut x252: u64 = 0;
    let mut x253: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x252, &mut x253, x250, 0xaadd9db8dbe9c48b);
    let mut x254: u64 = 0;
    let mut x255: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x254, &mut x255, x250, 0x3fd4e6ae33c9fc07);
    let mut x256: u64 = 0;
    let mut x257: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x256, &mut x257, x250, 0xcb308db3b3c9d20e);
    let mut x258: u64 = 0;
    let mut x259: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x258, &mut x259, x250, 0xd6639cca70330870);
    let mut x260: u64 = 0;
    let mut x261: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x260, &mut x261, x250, 0x553e5c414ca92619);
    let mut x262: u64 = 0;
    let mut x263: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x262, &mut x263, x250, 0x418661197fac1047);
    let mut x264: u64 = 0;
    let mut x265: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x264, &mut x265, x250, 0x1db1d381085ddadd);
    let mut x266: u64 = 0;
    let mut x267: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x266, &mut x267, x250, 0xb58796829ca90069);
    let mut x268: u64 = 0;
    let mut x269: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x268, &mut x269, 0x0, x267, x264);
    let mut x270: u64 = 0;
    let mut x271: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x270, &mut x271, x269, x265, x262);
    let mut x272: u64 = 0;
    let mut x273: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x272, &mut x273, x271, x263, x260);
    let mut x274: u64 = 0;
    let mut x275: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x274, &mut x275, x273, x261, x258);
    let mut x276: u64 = 0;
    let mut x277: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x276, &mut x277, x275, x259, x256);
    let mut x278: u64 = 0;
    let mut x279: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x278, &mut x279, x277, x257, x254);
    let mut x280: u64 = 0;
    let mut x281: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x280, &mut x281, x279, x255, x252);
    let mut x282: u64 = 0;
    let mut x283: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x282, &mut x283, 0x0, x236, x266);
    let mut x284: u64 = 0;
    let mut x285: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x284, &mut x285, x283, x238, x268);
    let mut x286: u64 = 0;
    let mut x287: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x286, &mut x287, x285, x240, x270);
    let mut x288: u64 = 0;
    let mut x289: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x288, &mut x289, x287, x242, x272);
    let mut x290: u64 = 0;
    let mut x291: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x290, &mut x291, x289, x244, x274);
    let mut x292: u64 = 0;
    let mut x293: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x292, &mut x293, x291, x246, x276);
    let mut x294: u64 = 0;
    let mut x295: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x294, &mut x295, x293, x248, x278);
    let mut x296: u64 = 0;
    let mut x297: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x296,
        &mut x297,
        x295,
        ((x249 as u64) + ((x235 as u64) + ((x219 as u64) + x191))),
        x280,
    );
    let mut x298: u64 = 0;
    let mut x299: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x298, &mut x299, 0x0, x284, (arg1[5]));
    let mut x300: u64 = 0;
    let mut x301: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x300, &mut x301, x299, x286, (0x0 as u64));
    let mut x302: u64 = 0;
    let mut x303: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x302, &mut x303, x301, x288, (0x0 as u64));
    let mut x304: u64 = 0;
    let mut x305: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x304, &mut x305, x303, x290, (0x0 as u64));
    let mut x306: u64 = 0;
    let mut x307: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x306, &mut x307, x305, x292, (0x0 as u64));
    let mut x308: u64 = 0;
    let mut x309: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x308, &mut x309, x307, x294, (0x0 as u64));
    let mut x310: u64 = 0;
    let mut x311: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x310, &mut x311, x309, x296, (0x0 as u64));
    let mut x312: u64 = 0;
    let mut x313: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x312, &mut x313, x298, 0xad49541f0f1b7027);
    let mut x314: u64 = 0;
    let mut x315: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x314, &mut x315, x312, 0xaadd9db8dbe9c48b);
    let mut x316: u64 = 0;
    let mut x317: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x316, &mut x317, x312, 0x3fd4e6ae33c9fc07);
    let mut x318: u64 = 0;
    let mut x319: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x318, &mut x319, x312, 0xcb308db3b3c9d20e);
    let mut x320: u64 = 0;
    let mut x321: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x320, &mut x321, x312, 0xd6639cca70330870);
    let mut x322: u64 = 0;
    let mut x323: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x322, &mut x323, x312, 0x553e5c414ca92619);
    let mut x324: u64 = 0;
    let mut x325: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x324, &mut x325, x312, 0x418661197fac1047);
    let mut x326: u64 = 0;
    let mut x327: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x326, &mut x327, x312, 0x1db1d381085ddadd);
    let mut x328: u64 = 0;
    let mut x329: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x328, &mut x329, x312, 0xb58796829ca90069);
    let mut x330: u64 = 0;
    let mut x331: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x330, &mut x331, 0x0, x329, x326);
    let mut x332: u64 = 0;
    let mut x333: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x332, &mut x333, x331, x327, x324);
    let mut x334: u64 = 0;
    let mut x335: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x334, &mut x335, x333, x325, x322);
    let mut x336: u64 = 0;
    let mut x337: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x336, &mut x337, x335, x323, x320);
    let mut x338: u64 = 0;
    let mut x339: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x338, &mut x339, x337, x321, x318);
    let mut x340: u64 = 0;
    let mut x341: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x340, &mut x341, x339, x319, x316);
    let mut x342: u64 = 0;
    let mut x343: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x342, &mut x343, x341, x317, x314);
    let mut x344: u64 = 0;
    let mut x345: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x344, &mut x345, 0x0, x298, x328);
    let mut x346: u64 = 0;
    let mut x347: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x346, &mut x347, x345, x300, x330);
    let mut x348: u64 = 0;
    let mut x349: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x348, &mut x349, x347, x302, x332);
    let mut x350: u64 = 0;
    let mut x351: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x350, &mut x351, x349, x304, x334);
    let mut x352: u64 = 0;
    let mut x353: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x352, &mut x353, x351, x306, x336);
    let mut x354: u64 = 0;
    let mut x355: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x354, &mut x355, x353, x308, x338);
    let mut x356: u64 = 0;
    let mut x357: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x356, &mut x357, x355, x310, x340);
    let mut x358: u64 = 0;
    let mut x359: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x358,
        &mut x359,
        x357,
        ((x311 as u64) + ((x297 as u64) + ((x281 as u64) + x253))),
        x342,
    );
    let mut x360: u64 = 0;
    let mut x361: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x360, &mut x361, 0x0, x346, (arg1[6]));
    let mut x362: u64 = 0;
    let mut x363: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x362, &mut x363, x361, x348, (0x0 as u64));
    let mut x364: u64 = 0;
    let mut x365: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x364, &mut x365, x363, x350, (0x0 as u64));
    let mut x366: u64 = 0;
    let mut x367: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x366, &mut x367, x365, x352, (0x0 as u64));
    let mut x368: u64 = 0;
    let mut x369: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x368, &mut x369, x367, x354, (0x0 as u64));
    let mut x370: u64 = 0;
    let mut x371: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x370, &mut x371, x369, x356, (0x0 as u64));
    let mut x372: u64 = 0;
    let mut x373: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x372, &mut x373, x371, x358, (0x0 as u64));
    let mut x374: u64 = 0;
    let mut x375: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x374, &mut x375, x360, 0xad49541f0f1b7027);
    let mut x376: u64 = 0;
    let mut x377: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x376, &mut x377, x374, 0xaadd9db8dbe9c48b);
    let mut x378: u64 = 0;
    let mut x379: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x378, &mut x379, x374, 0x3fd4e6ae33c9fc07);
    let mut x380: u64 = 0;
    let mut x381: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x380, &mut x381, x374, 0xcb308db3b3c9d20e);
    let mut x382: u64 = 0;
    let mut x383: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x382, &mut x383, x374, 0xd6639cca70330870);
    let mut x384: u64 = 0;
    let mut x385: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x384, &mut x385, x374, 0x553e5c414ca92619);
    let mut x386: u64 = 0;
    let mut x387: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x386, &mut x387, x374, 0x418661197fac1047);
    let mut x388: u64 = 0;
    let mut x389: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x388, &mut x389, x374, 0x1db1d381085ddadd);
    let mut x390: u64 = 0;
    let mut x391: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x390, &mut x391, x374, 0xb58796829ca90069);
    let mut x392: u64 = 0;
    let mut x393: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x392, &mut x393, 0x0, x391, x388);
    let mut x394: u64 = 0;
    let mut x395: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x394, &mut x395, x393, x389, x386);
    let mut x396: u64 = 0;
    let mut x397: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x396, &mut x397, x395, x387, x384);
    let mut x398: u64 = 0;
    let mut x399: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x398, &mut x399, x397, x385, x382);
    let mut x400: u64 = 0;
    let mut x401: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x400, &mut x401, x399, x383, x380);
    let mut x402: u64 = 0;
    let mut x403: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x402, &mut x403, x401, x381, x378);
    let mut x404: u64 = 0;
    let mut x405: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x404, &mut x405, x403, x379, x376);
    let mut x406: u64 = 0;
    let mut x407: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x406, &mut x407, 0x0, x360, x390);
    let mut x408: u64 = 0;
    let mut x409: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x408, &mut x409, x407, x362, x392);
    let mut x410: u64 = 0;
    let mut x411: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x410, &mut x411, x409, x364, x394);
    let mut x412: u64 = 0;
    let mut x413: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x412, &mut x413, x411, x366, x396);
    let mut x414: u64 = 0;
    let mut x415: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x414, &mut x415, x413, x368, x398);
    let mut x416: u64 = 0;
    let mut x417: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x416, &mut x417, x415, x370, x400);
    let mut x418: u64 = 0;
    let mut x419: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x418, &mut x419, x417, x372, x402);
    let mut x420: u64 = 0;
    let mut x421: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x420,
        &mut x421,
        x419,
        ((x373 as u64) + ((x359 as u64) + ((x343 as u64) + x315))),
        x404,
    );
    let mut x422: u64 = 0;
    let mut x423: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x422, &mut x423, 0x0, x408, (arg1[7]));
    let mut x424: u64 = 0;
    let mut x425: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x424, &mut x425, x423, x410, (0x0 as u64));
    let mut x426: u64 = 0;
    let mut x427: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x426, &mut x427, x425, x412, (0x0 as u64));
    let mut x428: u64 = 0;
    let mut x429: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x428, &mut x429, x427, x414, (0x0 as u64));
    let mut x430: u64 = 0;
    let mut x431: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x430, &mut x431, x429, x416, (0x0 as u64));
    let mut x432: u64 = 0;
    let mut x433: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x432, &mut x433, x431, x418, (0x0 as u64));
    let mut x434: u64 = 0;
    let mut x435: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x434, &mut x435, x433, x420, (0x0 as u64));
    let mut x436: u64 = 0;
    let mut x437: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x436, &mut x437, x422, 0xad49541f0f1b7027);
    let mut x438: u64 = 0;
    let mut x439: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x438, &mut x439, x436, 0xaadd9db8dbe9c48b);
    let mut x440: u64 = 0;
    let mut x441: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x440, &mut x441, x436, 0x3fd4e6ae33c9fc07);
    let mut x442: u64 = 0;
    let mut x443: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x442, &mut x443, x436, 0xcb308db3b3c9d20e);
    let mut x444: u64 = 0;
    let mut x445: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x444, &mut x445, x436, 0xd6639cca70330870);
    let mut x446: u64 = 0;
    let mut x447: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x446, &mut x447, x436, 0x553e5c414ca92619);
    let mut x448: u64 = 0;
    let mut x449: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x448, &mut x449, x436, 0x418661197fac1047);
    let mut x450: u64 = 0;
    let mut x451: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x450, &mut x451, x436, 0x1db1d381085ddadd);
    let mut x452: u64 = 0;
    let mut x453: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x452, &mut x453, x436, 0xb58796829ca90069);
    let mut x454: u64 = 0;
    let mut x455: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x454, &mut x455, 0x0, x453, x450);
    let mut x456: u64 = 0;
    let mut x457: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x456, &mut x457, x455, x451, x448);
    let mut x458: u64 = 0;
    let mut x459: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x458, &mut x459, x457, x449, x446);
    let mut x460: u64 = 0;
    let mut x461: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x460, &mut x461, x459, x447, x444);
    let mut x462: u64 = 0;
    let mut x463: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x462, &mut x463, x461, x445, x442);
    let mut x464: u64 = 0;
    let mut x465: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x464, &mut x465, x463, x443, x440);
    let mut x466: u64 = 0;
    let mut x467: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x466, &mut x467, x465, x441, x438);
    let mut x468: u64 = 0;
    let mut x469: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x468, &mut x469, 0x0, x422, x452);
    let mut x470: u64 = 0;
    let mut x471: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x470, &mut x471, x469, x424, x454);
    let mut x472: u64 = 0;
    let mut x473: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x472, &mut x473, x471, x426, x456);
    let mut x474: u64 = 0;
    let mut x475: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x474, &mut x475, x473, x428, x458);
    let mut x476: u64 = 0;
    let mut x477: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x476, &mut x477, x475, x430, x460);
    let mut x478: u64 = 0;
    let mut x479: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x478, &mut x479, x477, x432, x462);
    let mut x480: u64 = 0;
    let mut x481: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x480, &mut x481, x479, x434, x464);
    let mut x482: u64 = 0;
    let mut x483: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x482,
        &mut x483,
        x481,
        ((x435 as u64) + ((x421 as u64) + ((x405 as u64) + x377))),
        x466,
    );
    let x484: u64 = ((x483 as u64) + ((x467 as u64) + x439));
    let mut x485: u64 = 0;
    let mut x486: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x485, &mut x486, 0x0, x470, 0xb58796829ca90069);
    let mut x487: u64 = 0;
    let mut x488: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x487, &mut x488, x486, x472, 0x1db1d381085ddadd);
    let mut x489: u64 = 0;
    let mut x490: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x489, &mut x490, x488, x474, 0x418661197fac1047);
    let mut x491: u64 = 0;
    let mut x492: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x491, &mut x492, x490, x476, 0x553e5c414ca92619);
    let mut x493: u64 = 0;
    let mut x494: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x493, &mut x494, x492, x478, 0xd6639cca70330870);
    let mut x495: u64 = 0;
    let mut x496: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x495, &mut x496, x494, x480, 0xcb308db3b3c9d20e);
    let mut x497: u64 = 0;
    let mut x498: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x497, &mut x498, x496, x482, 0x3fd4e6ae33c9fc07);
    let mut x499: u64 = 0;
    let mut x500: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x499, &mut x500, x498, x484, 0xaadd9db8dbe9c48b);
    let mut x501: u64 = 0;
    let mut x502: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x501, &mut x502, x500, (0x0 as u64), (0x0 as u64));
    let mut x503: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x503, x502, x485, x470);
    let mut x504: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x504, x502, x487, x472);
    let mut x505: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x505, x502, x489, x474);
    let mut x506: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x506, x502, x491, x476);
    let mut x507: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x507, x502, x493, x478);
    let mut x508: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x508, x502, x495, x480);
    let mut x509: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x509, x502, x497, x482);
    let mut x510: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x510, x502, x499, x484);
    out1[0] = x503;
    out1[1] = x504;
    out1[2] = x505;
    out1[3] = x506;
    out1[4] = x507;
    out1[5] = x508;
    out1[6] = x509;
    out1[7] = x510;
}
/// The function fiat_bp512_scalar_to_montgomery translates a field element into the Montgomery domain.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   eval (from_montgomery out1) mod m = eval arg1 mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_to_montgomery(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
    arg1: &fiat_bp512_scalar_non_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    let arg1 = &arg1.0;
    let x1: u64 = (arg1[1]);
    let x2: u64 = (arg1[2]);
    let x3: u64 = (arg1[3]);
    let x4: u64 = (arg1[4]);
    let x5: u64 = (arg1[5]);
    let x6: u64 = (arg1[6]);
    let x7: u64 = (arg1[7]);
    let x8: u64 = (arg1[0]);
    let mut x9: u64 = 0;
    let mut x10: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x9, &mut x10, x8, 0xa794586a718407b0);
    let mut x11: u64 = 0;
    let mut x12: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x11, &mut x12, x8, 0x95df1b4c194b2e56);
    let mut x13: u64 = 0;
    let mut x14: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x13, &mut x14, x8, 0x723c37a22f16bbdf);
    let mut x15: u64 = 0;
    let mut x16: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x15, &mut x16, x8, 0xd7f9cc263b790de3);
    let mut x17: u64 = 0;
    let mut x18: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x17, &mut x18, x8, 0xa6f230c72f0207e8);
    let mut x19: u64 = 0;
    let mut x20: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x19, &mut x20, x8, 0x3ec64bd033b7627f);
    let mut x21: u64 = 0;
    let mut x22: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x21, &mut x22, x8, 0x886b75895283ddd);
    let mut x23: u64 = 0;
    let mut x24: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x23, &mut x24, x8, 0xd2a3681ecda81671);
    let mut x25: u64 = 0;
    let mut x26: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x25, &mut x26, 0x0, x24, x21);
    let mut x27: u64 = 0;
    let mut x28: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x27, &mut x28, x26, x22, x19);
    let mut x29: u64 = 0;
    let mut x30: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x29, &mut x30, x28, x20, x17);
    let mut x31: u64 = 0;
    let mut x32: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x31, &mut x32, x30, x18, x15);
    let mut x33: u64 = 0;
    let mut x34: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x33, &mut x34, x32, x16, x13);
    let mut x35: u64 = 0;
    let mut x36: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x35, &mut x36, x34, x14, x11);
    let mut x37: u64 = 0;
    let mut x38: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x37, &mut x38, x36, x12, x9);
    let mut x39: u64 = 0;
    let mut x40: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x39, &mut x40, x23, 0xad49541f0f1b7027);
    let mut x41: u64 = 0;
    let mut x42: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x41, &mut x42, x39, 0xaadd9db8dbe9c48b);
    let mut x43: u64 = 0;
    let mut x44: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x43, &mut x44, x39, 0x3fd4e6ae33c9fc07);
    let mut x45: u64 = 0;
    let mut x46: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x45, &mut x46, x39, 0xcb308db3b3c9d20e);
    let mut x47: u64 = 0;
    let mut x48: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x47, &mut x48, x39, 0xd6639cca70330870);
    let mut x49: u64 = 0;
    let mut x50: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x49, &mut x50, x39, 0x553e5c414ca92619);
    let mut x51: u64 = 0;
    let mut x52: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x51, &mut x52, x39, 0x418661197fac1047);
    let mut x53: u64 = 0;
    let mut x54: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x53, &mut x54, x39, 0x1db1d381085ddadd);
    let mut x55: u64 = 0;
    let mut x56: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x55, &mut x56, x39, 0xb58796829ca90069);
    let mut x57: u64 = 0;
    let mut x58: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x57, &mut x58, 0x0, x56, x53);
    let mut x59: u64 = 0;
    let mut x60: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x59, &mut x60, x58, x54, x51);
    let mut x61: u64 = 0;
    let mut x62: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x61, &mut x62, x60, x52, x49);
    let mut x63: u64 = 0;
    let mut x64: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x63, &mut x64, x62, x50, x47);
    let mut x65: u64 = 0;
    let mut x66: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x65, &mut x66, x64, x48, x45);
    let mut x67: u64 = 0;
    let mut x68: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x67, &mut x68, x66, x46, x43);
    let mut x69: u64 = 0;
    let mut x70: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x69, &mut x70, x68, x44, x41);
    let mut x71: u64 = 0;
    let mut x72: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x71, &mut x72, 0x0, x23, x55);
    let mut x73: u64 = 0;
    let mut x74: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x73, &mut x74, x72, x25, x57);
    let mut x75: u64 = 0;
    let mut x76: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x75, &mut x76, x74, x27, x59);
    let mut x77: u64 = 0;
    let mut x78: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x77, &mut x78, x76, x29, x61);
    let mut x79: u64 = 0;
    let mut x80: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x79, &mut x80, x78, x31, x63);
    let mut x81: u64 = 0;
    let mut x82: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x81, &mut x82, x80, x33, x65);
    let mut x83: u64 = 0;
    let mut x84: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x83, &mut x84, x82, x35, x67);
    let mut x85: u64 = 0;
    let mut x86: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x85, &mut x86, x84, x37, x69);
    let mut x87: u64 = 0;
    let mut x88: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x87,
        &mut x88,
        x86,
        ((x38 as u64) + x10),
        ((x70 as u64) + x42),
    );
    let mut x89: u64 = 0;
    let mut x90: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x89, &mut x90, x1, 0xa794586a718407b0);
    let mut x91: u64 = 0;
    let mut x92: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x91, &mut x92, x1, 0x95df1b4c194b2e56);
    let mut x93: u64 = 0;
    let mut x94: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x93, &mut x94, x1, 0x723c37a22f16bbdf);
    let mut x95: u64 = 0;
    let mut x96: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x95, &mut x96, x1, 0xd7f9cc263b790de3);
    let mut x97: u64 = 0;
    let mut x98: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x97, &mut x98, x1, 0xa6f230c72f0207e8);
    let mut x99: u64 = 0;
    let mut x100: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x99, &mut x100, x1, 0x3ec64bd033b7627f);
    let mut x101: u64 = 0;
    let mut x102: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x101, &mut x102, x1, 0x886b75895283ddd);
    let mut x103: u64 = 0;
    let mut x104: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x103, &mut x104, x1, 0xd2a3681ecda81671);
    let mut x105: u64 = 0;
    let mut x106: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x105, &mut x106, 0x0, x104, x101);
    let mut x107: u64 = 0;
    let mut x108: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x107, &mut x108, x106, x102, x99);
    let mut x109: u64 = 0;
    let mut x110: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x109, &mut x110, x108, x100, x97);
    let mut x111: u64 = 0;
    let mut x112: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x111, &mut x112, x110, x98, x95);
    let mut x113: u64 = 0;
    let mut x114: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x113, &mut x114, x112, x96, x93);
    let mut x115: u64 = 0;
    let mut x116: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x115, &mut x116, x114, x94, x91);
    let mut x117: u64 = 0;
    let mut x118: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x117, &mut x118, x116, x92, x89);
    let mut x119: u64 = 0;
    let mut x120: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x119, &mut x120, 0x0, x73, x103);
    let mut x121: u64 = 0;
    let mut x122: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x121, &mut x122, x120, x75, x105);
    let mut x123: u64 = 0;
    let mut x124: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x123, &mut x124, x122, x77, x107);
    let mut x125: u64 = 0;
    let mut x126: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x125, &mut x126, x124, x79, x109);
    let mut x127: u64 = 0;
    let mut x128: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x127, &mut x128, x126, x81, x111);
    let mut x129: u64 = 0;
    let mut x130: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x129, &mut x130, x128, x83, x113);
    let mut x131: u64 = 0;
    let mut x132: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x131, &mut x132, x130, x85, x115);
    let mut x133: u64 = 0;
    let mut x134: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x133, &mut x134, x132, x87, x117);
    let mut x135: u64 = 0;
    let mut x136: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x135, &mut x136, x119, 0xad49541f0f1b7027);
    let mut x137: u64 = 0;
    let mut x138: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x137, &mut x138, x135, 0xaadd9db8dbe9c48b);
    let mut x139: u64 = 0;
    let mut x140: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x139, &mut x140, x135, 0x3fd4e6ae33c9fc07);
    let mut x141: u64 = 0;
    let mut x142: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x141, &mut x142, x135, 0xcb308db3b3c9d20e);
    let mut x143: u64 = 0;
    let mut x144: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x143, &mut x144, x135, 0xd6639cca70330870);
    let mut x145: u64 = 0;
    let mut x146: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x145, &mut x146, x135, 0x553e5c414ca92619);
    let mut x147: u64 = 0;
    let mut x148: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x147, &mut x148, x135, 0x418661197fac1047);
    let mut x149: u64 = 0;
    let mut x150: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x149, &mut x150, x135, 0x1db1d381085ddadd);
    let mut x151: u64 = 0;
    let mut x152: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x151, &mut x152, x135, 0xb58796829ca90069);
    let mut x153: u64 = 0;
    let mut x154: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x153, &mut x154, 0x0, x152, x149);
    let mut x155: u64 = 0;
    let mut x156: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x155, &mut x156, x154, x150, x147);
    let mut x157: u64 = 0;
    let mut x158: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x157, &mut x158, x156, x148, x145);
    let mut x159: u64 = 0;
    let mut x160: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x159, &mut x160, x158, x146, x143);
    let mut x161: u64 = 0;
    let mut x162: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x161, &mut x162, x160, x144, x141);
    let mut x163: u64 = 0;
    let mut x164: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x163, &mut x164, x162, x142, x139);
    let mut x165: u64 = 0;
    let mut x166: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x165, &mut x166, x164, x140, x137);
    let mut x167: u64 = 0;
    let mut x168: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x167, &mut x168, 0x0, x119, x151);
    let mut x169: u64 = 0;
    let mut x170: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x169, &mut x170, x168, x121, x153);
    let mut x171: u64 = 0;
    let mut x172: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x171, &mut x172, x170, x123, x155);
    let mut x173: u64 = 0;
    let mut x174: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x173, &mut x174, x172, x125, x157);
    let mut x175: u64 = 0;
    let mut x176: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x175, &mut x176, x174, x127, x159);
    let mut x177: u64 = 0;
    let mut x178: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x177, &mut x178, x176, x129, x161);
    let mut x179: u64 = 0;
    let mut x180: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x179, &mut x180, x178, x131, x163);
    let mut x181: u64 = 0;
    let mut x182: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x181, &mut x182, x180, x133, x165);
    let mut x183: u64 = 0;
    let mut x184: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x183,
        &mut x184,
        x182,
        (((x134 as u64) + (x88 as u64)) + ((x118 as u64) + x90)),
        ((x166 as u64) + x138),
    );
    let mut x185: u64 = 0;
    let mut x186: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x185, &mut x186, x2, 0xa794586a718407b0);
    let mut x187: u64 = 0;
    let mut x188: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x187, &mut x188, x2, 0x95df1b4c194b2e56);
    let mut x189: u64 = 0;
    let mut x190: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x189, &mut x190, x2, 0x723c37a22f16bbdf);
    let mut x191: u64 = 0;
    let mut x192: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x191, &mut x192, x2, 0xd7f9cc263b790de3);
    let mut x193: u64 = 0;
    let mut x194: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x193, &mut x194, x2, 0xa6f230c72f0207e8);
    let mut x195: u64 = 0;
    let mut x196: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x195, &mut x196, x2, 0x3ec64bd033b7627f);
    let mut x197: u64 = 0;
    let mut x198: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x197, &mut x198, x2, 0x886b75895283ddd);
    let mut x199: u64 = 0;
    let mut x200: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x199, &mut x200, x2, 0xd2a3681ecda81671);
    let mut x201: u64 = 0;
    let mut x202: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x201, &mut x202, 0x0, x200, x197);
    let mut x203: u64 = 0;
    let mut x204: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x203, &mut x204, x202, x198, x195);
    let mut x205: u64 = 0;
    let mut x206: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x205, &mut x206, x204, x196, x193);
    let mut x207: u64 = 0;
    let mut x208: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x207, &mut x208, x206, x194, x191);
    let mut x209: u64 = 0;
    let mut x210: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x209, &mut x210, x208, x192, x189);
    let mut x211: u64 = 0;
    let mut x212: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x211, &mut x212, x210, x190, x187);
    let mut x213: u64 = 0;
    let mut x214: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x213, &mut x214, x212, x188, x185);
    let mut x215: u64 = 0;
    let mut x216: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x215, &mut x216, 0x0, x169, x199);
    let mut x217: u64 = 0;
    let mut x218: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x217, &mut x218, x216, x171, x201);
    let mut x219: u64 = 0;
    let mut x220: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x219, &mut x220, x218, x173, x203);
    let mut x221: u64 = 0;
    let mut x222: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x221, &mut x222, x220, x175, x205);
    let mut x223: u64 = 0;
    let mut x224: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x223, &mut x224, x222, x177, x207);
    let mut x225: u64 = 0;
    let mut x226: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x225, &mut x226, x224, x179, x209);
    let mut x227: u64 = 0;
    let mut x228: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x227, &mut x228, x226, x181, x211);
    let mut x229: u64 = 0;
    let mut x230: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x229, &mut x230, x228, x183, x213);
    let mut x231: u64 = 0;
    let mut x232: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x231, &mut x232, x215, 0xad49541f0f1b7027);
    let mut x233: u64 = 0;
    let mut x234: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x233, &mut x234, x231, 0xaadd9db8dbe9c48b);
    let mut x235: u64 = 0;
    let mut x236: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x235, &mut x236, x231, 0x3fd4e6ae33c9fc07);
    let mut x237: u64 = 0;
    let mut x238: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x237, &mut x238, x231, 0xcb308db3b3c9d20e);
    let mut x239: u64 = 0;
    let mut x240: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x239, &mut x240, x231, 0xd6639cca70330870);
    let mut x241: u64 = 0;
    let mut x242: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x241, &mut x242, x231, 0x553e5c414ca92619);
    let mut x243: u64 = 0;
    let mut x244: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x243, &mut x244, x231, 0x418661197fac1047);
    let mut x245: u64 = 0;
    let mut x246: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x245, &mut x246, x231, 0x1db1d381085ddadd);
    let mut x247: u64 = 0;
    let mut x248: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x247, &mut x248, x231, 0xb58796829ca90069);
    let mut x249: u64 = 0;
    let mut x250: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x249, &mut x250, 0x0, x248, x245);
    let mut x251: u64 = 0;
    let mut x252: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x251, &mut x252, x250, x246, x243);
    let mut x253: u64 = 0;
    let mut x254: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x253, &mut x254, x252, x244, x241);
    let mut x255: u64 = 0;
    let mut x256: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x255, &mut x256, x254, x242, x239);
    let mut x257: u64 = 0;
    let mut x258: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x257, &mut x258, x256, x240, x237);
    let mut x259: u64 = 0;
    let mut x260: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x259, &mut x260, x258, x238, x235);
    let mut x261: u64 = 0;
    let mut x262: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x261, &mut x262, x260, x236, x233);
    let mut x263: u64 = 0;
    let mut x264: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x263, &mut x264, 0x0, x215, x247);
    let mut x265: u64 = 0;
    let mut x266: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x265, &mut x266, x264, x217, x249);
    let mut x267: u64 = 0;
    let mut x268: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x267, &mut x268, x266, x219, x251);
    let mut x269: u64 = 0;
    let mut x270: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x269, &mut x270, x268, x221, x253);
    let mut x271: u64 = 0;
    let mut x272: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x271, &mut x272, x270, x223, x255);
    let mut x273: u64 = 0;
    let mut x274: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x273, &mut x274, x272, x225, x257);
    let mut x275: u64 = 0;
    let mut x276: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x275, &mut x276, x274, x227, x259);
    let mut x277: u64 = 0;
    let mut x278: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x277, &mut x278, x276, x229, x261);
    let mut x279: u64 = 0;
    let mut x280: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x279,
        &mut x280,
        x278,
        (((x230 as u64) + (x184 as u64)) + ((x214 as u64) + x186)),
        ((x262 as u64) + x234),
    );
    let mut x281: u64 = 0;
    let mut x282: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x281, &mut x282, x3, 0xa794586a718407b0);
    let mut x283: u64 = 0;
    let mut x284: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x283, &mut x284, x3, 0x95df1b4c194b2e56);
    let mut x285: u64 = 0;
    let mut x286: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x285, &mut x286, x3, 0x723c37a22f16bbdf);
    let mut x287: u64 = 0;
    let mut x288: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x287, &mut x288, x3, 0xd7f9cc263b790de3);
    let mut x289: u64 = 0;
    let mut x290: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x289, &mut x290, x3, 0xa6f230c72f0207e8);
    let mut x291: u64 = 0;
    let mut x292: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x291, &mut x292, x3, 0x3ec64bd033b7627f);
    let mut x293: u64 = 0;
    let mut x294: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x293, &mut x294, x3, 0x886b75895283ddd);
    let mut x295: u64 = 0;
    let mut x296: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x295, &mut x296, x3, 0xd2a3681ecda81671);
    let mut x297: u64 = 0;
    let mut x298: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x297, &mut x298, 0x0, x296, x293);
    let mut x299: u64 = 0;
    let mut x300: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x299, &mut x300, x298, x294, x291);
    let mut x301: u64 = 0;
    let mut x302: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x301, &mut x302, x300, x292, x289);
    let mut x303: u64 = 0;
    let mut x304: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x303, &mut x304, x302, x290, x287);
    let mut x305: u64 = 0;
    let mut x306: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x305, &mut x306, x304, x288, x285);
    let mut x307: u64 = 0;
    let mut x308: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x307, &mut x308, x306, x286, x283);
    let mut x309: u64 = 0;
    let mut x310: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x309, &mut x310, x308, x284, x281);
    let mut x311: u64 = 0;
    let mut x312: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x311, &mut x312, 0x0, x265, x295);
    let mut x313: u64 = 0;
    let mut x314: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x313, &mut x314, x312, x267, x297);
    let mut x315: u64 = 0;
    let mut x316: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x315, &mut x316, x314, x269, x299);
    let mut x317: u64 = 0;
    let mut x318: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x317, &mut x318, x316, x271, x301);
    let mut x319: u64 = 0;
    let mut x320: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x319, &mut x320, x318, x273, x303);
    let mut x321: u64 = 0;
    let mut x322: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x321, &mut x322, x320, x275, x305);
    let mut x323: u64 = 0;
    let mut x324: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x323, &mut x324, x322, x277, x307);
    let mut x325: u64 = 0;
    let mut x326: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x325, &mut x326, x324, x279, x309);
    let mut x327: u64 = 0;
    let mut x328: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x327, &mut x328, x311, 0xad49541f0f1b7027);
    let mut x329: u64 = 0;
    let mut x330: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x329, &mut x330, x327, 0xaadd9db8dbe9c48b);
    let mut x331: u64 = 0;
    let mut x332: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x331, &mut x332, x327, 0x3fd4e6ae33c9fc07);
    let mut x333: u64 = 0;
    let mut x334: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x333, &mut x334, x327, 0xcb308db3b3c9d20e);
    let mut x335: u64 = 0;
    let mut x336: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x335, &mut x336, x327, 0xd6639cca70330870);
    let mut x337: u64 = 0;
    let mut x338: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x337, &mut x338, x327, 0x553e5c414ca92619);
    let mut x339: u64 = 0;
    let mut x340: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x339, &mut x340, x327, 0x418661197fac1047);
    let mut x341: u64 = 0;
    let mut x342: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x341, &mut x342, x327, 0x1db1d381085ddadd);
    let mut x343: u64 = 0;
    let mut x344: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x343, &mut x344, x327, 0xb58796829ca90069);
    let mut x345: u64 = 0;
    let mut x346: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x345, &mut x346, 0x0, x344, x341);
    let mut x347: u64 = 0;
    let mut x348: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x347, &mut x348, x346, x342, x339);
    let mut x349: u64 = 0;
    let mut x350: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x349, &mut x350, x348, x340, x337);
    let mut x351: u64 = 0;
    let mut x352: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x351, &mut x352, x350, x338, x335);
    let mut x353: u64 = 0;
    let mut x354: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x353, &mut x354, x352, x336, x333);
    let mut x355: u64 = 0;
    let mut x356: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x355, &mut x356, x354, x334, x331);
    let mut x357: u64 = 0;
    let mut x358: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x357, &mut x358, x356, x332, x329);
    let mut x359: u64 = 0;
    let mut x360: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x359, &mut x360, 0x0, x311, x343);
    let mut x361: u64 = 0;
    let mut x362: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x361, &mut x362, x360, x313, x345);
    let mut x363: u64 = 0;
    let mut x364: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x363, &mut x364, x362, x315, x347);
    let mut x365: u64 = 0;
    let mut x366: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x365, &mut x366, x364, x317, x349);
    let mut x367: u64 = 0;
    let mut x368: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x367, &mut x368, x366, x319, x351);
    let mut x369: u64 = 0;
    let mut x370: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x369, &mut x370, x368, x321, x353);
    let mut x371: u64 = 0;
    let mut x372: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x371, &mut x372, x370, x323, x355);
    let mut x373: u64 = 0;
    let mut x374: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x373, &mut x374, x372, x325, x357);
    let mut x375: u64 = 0;
    let mut x376: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x375,
        &mut x376,
        x374,
        (((x326 as u64) + (x280 as u64)) + ((x310 as u64) + x282)),
        ((x358 as u64) + x330),
    );
    let mut x377: u64 = 0;
    let mut x378: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x377, &mut x378, x4, 0xa794586a718407b0);
    let mut x379: u64 = 0;
    let mut x380: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x379, &mut x380, x4, 0x95df1b4c194b2e56);
    let mut x381: u64 = 0;
    let mut x382: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x381, &mut x382, x4, 0x723c37a22f16bbdf);
    let mut x383: u64 = 0;
    let mut x384: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x383, &mut x384, x4, 0xd7f9cc263b790de3);
    let mut x385: u64 = 0;
    let mut x386: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x385, &mut x386, x4, 0xa6f230c72f0207e8);
    let mut x387: u64 = 0;
    let mut x388: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x387, &mut x388, x4, 0x3ec64bd033b7627f);
    let mut x389: u64 = 0;
    let mut x390: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x389, &mut x390, x4, 0x886b75895283ddd);
    let mut x391: u64 = 0;
    let mut x392: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x391, &mut x392, x4, 0xd2a3681ecda81671);
    let mut x393: u64 = 0;
    let mut x394: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x393, &mut x394, 0x0, x392, x389);
    let mut x395: u64 = 0;
    let mut x396: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x395, &mut x396, x394, x390, x387);
    let mut x397: u64 = 0;
    let mut x398: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x397, &mut x398, x396, x388, x385);
    let mut x399: u64 = 0;
    let mut x400: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x399, &mut x400, x398, x386, x383);
    let mut x401: u64 = 0;
    let mut x402: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x401, &mut x402, x400, x384, x381);
    let mut x403: u64 = 0;
    let mut x404: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x403, &mut x404, x402, x382, x379);
    let mut x405: u64 = 0;
    let mut x406: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x405, &mut x406, x404, x380, x377);
    let mut x407: u64 = 0;
    let mut x408: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x407, &mut x408, 0x0, x361, x391);
    let mut x409: u64 = 0;
    let mut x410: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x409, &mut x410, x408, x363, x393);
    let mut x411: u64 = 0;
    let mut x412: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x411, &mut x412, x410, x365, x395);
    let mut x413: u64 = 0;
    let mut x414: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x413, &mut x414, x412, x367, x397);
    let mut x415: u64 = 0;
    let mut x416: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x415, &mut x416, x414, x369, x399);
    let mut x417: u64 = 0;
    let mut x418: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x417, &mut x418, x416, x371, x401);
    let mut x419: u64 = 0;
    let mut x420: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x419, &mut x420, x418, x373, x403);
    let mut x421: u64 = 0;
    let mut x422: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x421, &mut x422, x420, x375, x405);
    let mut x423: u64 = 0;
    let mut x424: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x423, &mut x424, x407, 0xad49541f0f1b7027);
    let mut x425: u64 = 0;
    let mut x426: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x425, &mut x426, x423, 0xaadd9db8dbe9c48b);
    let mut x427: u64 = 0;
    let mut x428: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x427, &mut x428, x423, 0x3fd4e6ae33c9fc07);
    let mut x429: u64 = 0;
    let mut x430: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x429, &mut x430, x423, 0xcb308db3b3c9d20e);
    let mut x431: u64 = 0;
    let mut x432: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x431, &mut x432, x423, 0xd6639cca70330870);
    let mut x433: u64 = 0;
    let mut x434: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x433, &mut x434, x423, 0x553e5c414ca92619);
    let mut x435: u64 = 0;
    let mut x436: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x435, &mut x436, x423, 0x418661197fac1047);
    let mut x437: u64 = 0;
    let mut x438: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x437, &mut x438, x423, 0x1db1d381085ddadd);
    let mut x439: u64 = 0;
    let mut x440: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x439, &mut x440, x423, 0xb58796829ca90069);
    let mut x441: u64 = 0;
    let mut x442: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x441, &mut x442, 0x0, x440, x437);
    let mut x443: u64 = 0;
    let mut x444: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x443, &mut x444, x442, x438, x435);
    let mut x445: u64 = 0;
    let mut x446: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x445, &mut x446, x444, x436, x433);
    let mut x447: u64 = 0;
    let mut x448: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x447, &mut x448, x446, x434, x431);
    let mut x449: u64 = 0;
    let mut x450: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x449, &mut x450, x448, x432, x429);
    let mut x451: u64 = 0;
    let mut x452: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x451, &mut x452, x450, x430, x427);
    let mut x453: u64 = 0;
    let mut x454: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x453, &mut x454, x452, x428, x425);
    let mut x455: u64 = 0;
    let mut x456: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x455, &mut x456, 0x0, x407, x439);
    let mut x457: u64 = 0;
    let mut x458: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x457, &mut x458, x456, x409, x441);
    let mut x459: u64 = 0;
    let mut x460: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x459, &mut x460, x458, x411, x443);
    let mut x461: u64 = 0;
    let mut x462: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x461, &mut x462, x460, x413, x445);
    let mut x463: u64 = 0;
    let mut x464: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x463, &mut x464, x462, x415, x447);
    let mut x465: u64 = 0;
    let mut x466: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x465, &mut x466, x464, x417, x449);
    let mut x467: u64 = 0;
    let mut x468: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x467, &mut x468, x466, x419, x451);
    let mut x469: u64 = 0;
    let mut x470: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x469, &mut x470, x468, x421, x453);
    let mut x471: u64 = 0;
    let mut x472: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x471,
        &mut x472,
        x470,
        (((x422 as u64) + (x376 as u64)) + ((x406 as u64) + x378)),
        ((x454 as u64) + x426),
    );
    let mut x473: u64 = 0;
    let mut x474: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x473, &mut x474, x5, 0xa794586a718407b0);
    let mut x475: u64 = 0;
    let mut x476: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x475, &mut x476, x5, 0x95df1b4c194b2e56);
    let mut x477: u64 = 0;
    let mut x478: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x477, &mut x478, x5, 0x723c37a22f16bbdf);
    let mut x479: u64 = 0;
    let mut x480: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x479, &mut x480, x5, 0xd7f9cc263b790de3);
    let mut x481: u64 = 0;
    let mut x482: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x481, &mut x482, x5, 0xa6f230c72f0207e8);
    let mut x483: u64 = 0;
    let mut x484: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x483, &mut x484, x5, 0x3ec64bd033b7627f);
    let mut x485: u64 = 0;
    let mut x486: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x485, &mut x486, x5, 0x886b75895283ddd);
    let mut x487: u64 = 0;
    let mut x488: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x487, &mut x488, x5, 0xd2a3681ecda81671);
    let mut x489: u64 = 0;
    let mut x490: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x489, &mut x490, 0x0, x488, x485);
    let mut x491: u64 = 0;
    let mut x492: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x491, &mut x492, x490, x486, x483);
    let mut x493: u64 = 0;
    let mut x494: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x493, &mut x494, x492, x484, x481);
    let mut x495: u64 = 0;
    let mut x496: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x495, &mut x496, x494, x482, x479);
    let mut x497: u64 = 0;
    let mut x498: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x497, &mut x498, x496, x480, x477);
    let mut x499: u64 = 0;
    let mut x500: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x499, &mut x500, x498, x478, x475);
    let mut x501: u64 = 0;
    let mut x502: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x501, &mut x502, x500, x476, x473);
    let mut x503: u64 = 0;
    let mut x504: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x503, &mut x504, 0x0, x457, x487);
    let mut x505: u64 = 0;
    let mut x506: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x505, &mut x506, x504, x459, x489);
    let mut x507: u64 = 0;
    let mut x508: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x507, &mut x508, x506, x461, x491);
    let mut x509: u64 = 0;
    let mut x510: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x509, &mut x510, x508, x463, x493);
    let mut x511: u64 = 0;
    let mut x512: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x511, &mut x512, x510, x465, x495);
    let mut x513: u64 = 0;
    let mut x514: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x513, &mut x514, x512, x467, x497);
    let mut x515: u64 = 0;
    let mut x516: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x515, &mut x516, x514, x469, x499);
    let mut x517: u64 = 0;
    let mut x518: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x517, &mut x518, x516, x471, x501);
    let mut x519: u64 = 0;
    let mut x520: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x519, &mut x520, x503, 0xad49541f0f1b7027);
    let mut x521: u64 = 0;
    let mut x522: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x521, &mut x522, x519, 0xaadd9db8dbe9c48b);
    let mut x523: u64 = 0;
    let mut x524: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x523, &mut x524, x519, 0x3fd4e6ae33c9fc07);
    let mut x525: u64 = 0;
    let mut x526: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x525, &mut x526, x519, 0xcb308db3b3c9d20e);
    let mut x527: u64 = 0;
    let mut x528: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x527, &mut x528, x519, 0xd6639cca70330870);
    let mut x529: u64 = 0;
    let mut x530: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x529, &mut x530, x519, 0x553e5c414ca92619);
    let mut x531: u64 = 0;
    let mut x532: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x531, &mut x532, x519, 0x418661197fac1047);
    let mut x533: u64 = 0;
    let mut x534: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x533, &mut x534, x519, 0x1db1d381085ddadd);
    let mut x535: u64 = 0;
    let mut x536: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x535, &mut x536, x519, 0xb58796829ca90069);
    let mut x537: u64 = 0;
    let mut x538: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x537, &mut x538, 0x0, x536, x533);
    let mut x539: u64 = 0;
    let mut x540: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x539, &mut x540, x538, x534, x531);
    let mut x541: u64 = 0;
    let mut x542: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x541, &mut x542, x540, x532, x529);
    let mut x543: u64 = 0;
    let mut x544: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x543, &mut x544, x542, x530, x527);
    let mut x545: u64 = 0;
    let mut x546: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x545, &mut x546, x544, x528, x525);
    let mut x547: u64 = 0;
    let mut x548: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x547, &mut x548, x546, x526, x523);
    let mut x549: u64 = 0;
    let mut x550: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x549, &mut x550, x548, x524, x521);
    let mut x551: u64 = 0;
    let mut x552: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x551, &mut x552, 0x0, x503, x535);
    let mut x553: u64 = 0;
    let mut x554: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x553, &mut x554, x552, x505, x537);
    let mut x555: u64 = 0;
    let mut x556: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x555, &mut x556, x554, x507, x539);
    let mut x557: u64 = 0;
    let mut x558: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x557, &mut x558, x556, x509, x541);
    let mut x559: u64 = 0;
    let mut x560: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x559, &mut x560, x558, x511, x543);
    let mut x561: u64 = 0;
    let mut x562: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x561, &mut x562, x560, x513, x545);
    let mut x563: u64 = 0;
    let mut x564: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x563, &mut x564, x562, x515, x547);
    let mut x565: u64 = 0;
    let mut x566: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x565, &mut x566, x564, x517, x549);
    let mut x567: u64 = 0;
    let mut x568: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x567,
        &mut x568,
        x566,
        (((x518 as u64) + (x472 as u64)) + ((x502 as u64) + x474)),
        ((x550 as u64) + x522),
    );
    let mut x569: u64 = 0;
    let mut x570: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x569, &mut x570, x6, 0xa794586a718407b0);
    let mut x571: u64 = 0;
    let mut x572: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x571, &mut x572, x6, 0x95df1b4c194b2e56);
    let mut x573: u64 = 0;
    let mut x574: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x573, &mut x574, x6, 0x723c37a22f16bbdf);
    let mut x575: u64 = 0;
    let mut x576: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x575, &mut x576, x6, 0xd7f9cc263b790de3);
    let mut x577: u64 = 0;
    let mut x578: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x577, &mut x578, x6, 0xa6f230c72f0207e8);
    let mut x579: u64 = 0;
    let mut x580: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x579, &mut x580, x6, 0x3ec64bd033b7627f);
    let mut x581: u64 = 0;
    let mut x582: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x581, &mut x582, x6, 0x886b75895283ddd);
    let mut x583: u64 = 0;
    let mut x584: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x583, &mut x584, x6, 0xd2a3681ecda81671);
    let mut x585: u64 = 0;
    let mut x586: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x585, &mut x586, 0x0, x584, x581);
    let mut x587: u64 = 0;
    let mut x588: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x587, &mut x588, x586, x582, x579);
    let mut x589: u64 = 0;
    let mut x590: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x589, &mut x590, x588, x580, x577);
    let mut x591: u64 = 0;
    let mut x592: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x591, &mut x592, x590, x578, x575);
    let mut x593: u64 = 0;
    let mut x594: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x593, &mut x594, x592, x576, x573);
    let mut x595: u64 = 0;
    let mut x596: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x595, &mut x596, x594, x574, x571);
    let mut x597: u64 = 0;
    let mut x598: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x597, &mut x598, x596, x572, x569);
    let mut x599: u64 = 0;
    let mut x600: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x599, &mut x600, 0x0, x553, x583);
    let mut x601: u64 = 0;
    let mut x602: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x601, &mut x602, x600, x555, x585);
    let mut x603: u64 = 0;
    let mut x604: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x603, &mut x604, x602, x557, x587);
    let mut x605: u64 = 0;
    let mut x606: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x605, &mut x606, x604, x559, x589);
    let mut x607: u64 = 0;
    let mut x608: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x607, &mut x608, x606, x561, x591);
    let mut x609: u64 = 0;
    let mut x610: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x609, &mut x610, x608, x563, x593);
    let mut x611: u64 = 0;
    let mut x612: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x611, &mut x612, x610, x565, x595);
    let mut x613: u64 = 0;
    let mut x614: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x613, &mut x614, x612, x567, x597);
    let mut x615: u64 = 0;
    let mut x616: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x615, &mut x616, x599, 0xad49541f0f1b7027);
    let mut x617: u64 = 0;
    let mut x618: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x617, &mut x618, x615, 0xaadd9db8dbe9c48b);
    let mut x619: u64 = 0;
    let mut x620: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x619, &mut x620, x615, 0x3fd4e6ae33c9fc07);
    let mut x621: u64 = 0;
    let mut x622: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x621, &mut x622, x615, 0xcb308db3b3c9d20e);
    let mut x623: u64 = 0;
    let mut x624: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x623, &mut x624, x615, 0xd6639cca70330870);
    let mut x625: u64 = 0;
    let mut x626: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x625, &mut x626, x615, 0x553e5c414ca92619);
    let mut x627: u64 = 0;
    let mut x628: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x627, &mut x628, x615, 0x418661197fac1047);
    let mut x629: u64 = 0;
    let mut x630: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x629, &mut x630, x615, 0x1db1d381085ddadd);
    let mut x631: u64 = 0;
    let mut x632: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x631, &mut x632, x615, 0xb58796829ca90069);
    let mut x633: u64 = 0;
    let mut x634: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x633, &mut x634, 0x0, x632, x629);
    let mut x635: u64 = 0;
    let mut x636: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x635, &mut x636, x634, x630, x627);
    let mut x637: u64 = 0;
    let mut x638: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x637, &mut x638, x636, x628, x625);
    let mut x639: u64 = 0;
    let mut x640: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x639, &mut x640, x638, x626, x623);
    let mut x641: u64 = 0;
    let mut x642: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x641, &mut x642, x640, x624, x621);
    let mut x643: u64 = 0;
    let mut x644: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x643, &mut x644, x642, x622, x619);
    let mut x645: u64 = 0;
    let mut x646: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x645, &mut x646, x644, x620, x617);
    let mut x647: u64 = 0;
    let mut x648: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x647, &mut x648, 0x0, x599, x631);
    let mut x649: u64 = 0;
    let mut x650: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x649, &mut x650, x648, x601, x633);
    let mut x651: u64 = 0;
    let mut x652: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x651, &mut x652, x650, x603, x635);
    let mut x653: u64 = 0;
    let mut x654: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x653, &mut x654, x652, x605, x637);
    let mut x655: u64 = 0;
    let mut x656: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x655, &mut x656, x654, x607, x639);
    let mut x657: u64 = 0;
    let mut x658: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x657, &mut x658, x656, x609, x641);
    let mut x659: u64 = 0;
    let mut x660: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x659, &mut x660, x658, x611, x643);
    let mut x661: u64 = 0;
    let mut x662: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x661, &mut x662, x660, x613, x645);
    let mut x663: u64 = 0;
    let mut x664: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x663,
        &mut x664,
        x662,
        (((x614 as u64) + (x568 as u64)) + ((x598 as u64) + x570)),
        ((x646 as u64) + x618),
    );
    let mut x665: u64 = 0;
    let mut x666: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x665, &mut x666, x7, 0xa794586a718407b0);
    let mut x667: u64 = 0;
    let mut x668: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x667, &mut x668, x7, 0x95df1b4c194b2e56);
    let mut x669: u64 = 0;
    let mut x670: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x669, &mut x670, x7, 0x723c37a22f16bbdf);
    let mut x671: u64 = 0;
    let mut x672: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x671, &mut x672, x7, 0xd7f9cc263b790de3);
    let mut x673: u64 = 0;
    let mut x674: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x673, &mut x674, x7, 0xa6f230c72f0207e8);
    let mut x675: u64 = 0;
    let mut x676: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x675, &mut x676, x7, 0x3ec64bd033b7627f);
    let mut x677: u64 = 0;
    let mut x678: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x677, &mut x678, x7, 0x886b75895283ddd);
    let mut x679: u64 = 0;
    let mut x680: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x679, &mut x680, x7, 0xd2a3681ecda81671);
    let mut x681: u64 = 0;
    let mut x682: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x681, &mut x682, 0x0, x680, x677);
    let mut x683: u64 = 0;
    let mut x684: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x683, &mut x684, x682, x678, x675);
    let mut x685: u64 = 0;
    let mut x686: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x685, &mut x686, x684, x676, x673);
    let mut x687: u64 = 0;
    let mut x688: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x687, &mut x688, x686, x674, x671);
    let mut x689: u64 = 0;
    let mut x690: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x689, &mut x690, x688, x672, x669);
    let mut x691: u64 = 0;
    let mut x692: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x691, &mut x692, x690, x670, x667);
    let mut x693: u64 = 0;
    let mut x694: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x693, &mut x694, x692, x668, x665);
    let mut x695: u64 = 0;
    let mut x696: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x695, &mut x696, 0x0, x649, x679);
    let mut x697: u64 = 0;
    let mut x698: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x697, &mut x698, x696, x651, x681);
    let mut x699: u64 = 0;
    let mut x700: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x699, &mut x700, x698, x653, x683);
    let mut x701: u64 = 0;
    let mut x702: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x701, &mut x702, x700, x655, x685);
    let mut x703: u64 = 0;
    let mut x704: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x703, &mut x704, x702, x657, x687);
    let mut x705: u64 = 0;
    let mut x706: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x705, &mut x706, x704, x659, x689);
    let mut x707: u64 = 0;
    let mut x708: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x707, &mut x708, x706, x661, x691);
    let mut x709: u64 = 0;
    let mut x710: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x709, &mut x710, x708, x663, x693);
    let mut x711: u64 = 0;
    let mut x712: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x711, &mut x712, x695, 0xad49541f0f1b7027);
    let mut x713: u64 = 0;
    let mut x714: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x713, &mut x714, x711, 0xaadd9db8dbe9c48b);
    let mut x715: u64 = 0;
    let mut x716: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x715, &mut x716, x711, 0x3fd4e6ae33c9fc07);
    let mut x717: u64 = 0;
    let mut x718: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x717, &mut x718, x711, 0xcb308db3b3c9d20e);
    let mut x719: u64 = 0;
    let mut x720: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x719, &mut x720, x711, 0xd6639cca70330870);
    let mut x721: u64 = 0;
    let mut x722: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x721, &mut x722, x711, 0x553e5c414ca92619);
    let mut x723: u64 = 0;
    let mut x724: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x723, &mut x724, x711, 0x418661197fac1047);
    let mut x725: u64 = 0;
    let mut x726: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x725, &mut x726, x711, 0x1db1d381085ddadd);
    let mut x727: u64 = 0;
    let mut x728: u64 = 0;
    fiat_bp512_scalar_mulx_u64(&mut x727, &mut x728, x711, 0xb58796829ca90069);
    let mut x729: u64 = 0;
    let mut x730: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x729, &mut x730, 0x0, x728, x725);
    let mut x731: u64 = 0;
    let mut x732: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x731, &mut x732, x730, x726, x723);
    let mut x733: u64 = 0;
    let mut x734: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x733, &mut x734, x732, x724, x721);
    let mut x735: u64 = 0;
    let mut x736: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x735, &mut x736, x734, x722, x719);
    let mut x737: u64 = 0;
    let mut x738: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x737, &mut x738, x736, x720, x717);
    let mut x739: u64 = 0;
    let mut x740: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x739, &mut x740, x738, x718, x715);
    let mut x741: u64 = 0;
    let mut x742: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x741, &mut x742, x740, x716, x713);
    let mut x743: u64 = 0;
    let mut x744: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x743, &mut x744, 0x0, x695, x727);
    let mut x745: u64 = 0;
    let mut x746: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x745, &mut x746, x744, x697, x729);
    let mut x747: u64 = 0;
    let mut x748: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x747, &mut x748, x746, x699, x731);
    let mut x749: u64 = 0;
    let mut x750: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x749, &mut x750, x748, x701, x733);
    let mut x751: u64 = 0;
    let mut x752: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x751, &mut x752, x750, x703, x735);
    let mut x753: u64 = 0;
    let mut x754: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x753, &mut x754, x752, x705, x737);
    let mut x755: u64 = 0;
    let mut x756: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x755, &mut x756, x754, x707, x739);
    let mut x757: u64 = 0;
    let mut x758: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x757, &mut x758, x756, x709, x741);
    let mut x759: u64 = 0;
    let mut x760: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x759,
        &mut x760,
        x758,
        (((x710 as u64) + (x664 as u64)) + ((x694 as u64) + x666)),
        ((x742 as u64) + x714),
    );
    let mut x761: u64 = 0;
    let mut x762: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x761, &mut x762, 0x0, x745, 0xb58796829ca90069);
    let mut x763: u64 = 0;
    let mut x764: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x763, &mut x764, x762, x747, 0x1db1d381085ddadd);
    let mut x765: u64 = 0;
    let mut x766: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x765, &mut x766, x764, x749, 0x418661197fac1047);
    let mut x767: u64 = 0;
    let mut x768: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x767, &mut x768, x766, x751, 0x553e5c414ca92619);
    let mut x769: u64 = 0;
    let mut x770: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x769, &mut x770, x768, x753, 0xd6639cca70330870);
    let mut x771: u64 = 0;
    let mut x772: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x771, &mut x772, x770, x755, 0xcb308db3b3c9d20e);
    let mut x773: u64 = 0;
    let mut x774: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x773, &mut x774, x772, x757, 0x3fd4e6ae33c9fc07);
    let mut x775: u64 = 0;
    let mut x776: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x775, &mut x776, x774, x759, 0xaadd9db8dbe9c48b);
    let mut x777: u64 = 0;
    let mut x778: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x777, &mut x778, x776, (x760 as u64), (0x0 as u64));
    let mut x779: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x779, x778, x761, x745);
    let mut x780: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x780, x778, x763, x747);
    let mut x781: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x781, x778, x765, x749);
    let mut x782: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x782, x778, x767, x751);
    let mut x783: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x783, x778, x769, x753);
    let mut x784: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x784, x778, x771, x755);
    let mut x785: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x785, x778, x773, x757);
    let mut x786: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x786, x778, x775, x759);
    out1[0] = x779;
    out1[1] = x780;
    out1[2] = x781;
    out1[3] = x782;
    out1[4] = x783;
    out1[5] = x784;
    out1[6] = x785;
    out1[7] = x786;
}
/// The function fiat_bp512_scalar_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
#[inline]
pub const fn fiat_bp512_scalar_nonzero(out1: &mut u64, arg1: &[u64; 8]) {
    let x1: u64 = ((arg1[0])
        | ((arg1[1])
            | ((arg1[2]) | ((arg1[3]) | ((arg1[4]) | ((arg1[5]) | ((arg1[6]) | (arg1[7]))))))));
    *out1 = x1;
}
/// The function fiat_bp512_scalar_selectznz is a multi-limb conditional select.
///
/// Postconditions:
///   out1 = (if arg1 = 0 then arg2 else arg3)
///
/// Input Bounds:
///   arg1: [0x0 ~> 0x1]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub const fn fiat_bp512_scalar_selectznz(
    out1: &mut [u64; 8],
    arg1: fiat_bp512_scalar_u1,
    arg2: &[u64; 8],
    arg3: &[u64; 8],
) {
    let mut x1: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x1, arg1, (arg2[0]), (arg3[0]));
    let mut x2: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x2, arg1, (arg2[1]), (arg3[1]));
    let mut x3: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x3, arg1, (arg2[2]), (arg3[2]));
    let mut x4: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x4, arg1, (arg2[3]), (arg3[3]));
    let mut x5: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x5, arg1, (arg2[4]), (arg3[4]));
    let mut x6: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x6, arg1, (arg2[5]), (arg3[5]));
    let mut x7: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x7, arg1, (arg2[6]), (arg3[6]));
    let mut x8: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x8, arg1, (arg2[7]), (arg3[7]));
    out1[0] = x1;
    out1[1] = x2;
    out1[2] = x3;
    out1[3] = x4;
    out1[4] = x5;
    out1[5] = x6;
    out1[6] = x7;
    out1[7] = x8;
}
/// The function fiat_bp512_scalar_to_bytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
///
/// Preconditions:
///   0 ≤ eval arg1 < m
/// Postconditions:
///   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..63]
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
#[inline]
pub const fn fiat_bp512_scalar_to_bytes(out1: &mut [u8; 64], arg1: &[u64; 8]) {
    let x1: u64 = (arg1[7]);
    let x2: u64 = (arg1[6]);
    let x3: u64 = (arg1[5]);
    let x4: u64 = (arg1[4]);
    let x5: u64 = (arg1[3]);
    let x6: u64 = (arg1[2]);
    let x7: u64 = (arg1[1]);
    let x8: u64 = (arg1[0]);
    let x9: u8 = ((x8 & (0xff as u64)) as u8);
    let x10: u64 = (x8 >> 8);
    let x11: u8 = ((x10 & (0xff as u64)) as u8);
    let x12: u64 = (x10 >> 8);
    let x13: u8 = ((x12 & (0xff as u64)) as u8);
    let x14: u64 = (x12 >> 8);
    let x15: u8 = ((x14 & (0xff as u64)) as u8);
    let x16: u64 = (x14 >> 8);
    let x17: u8 = ((x16 & (0xff as u64)) as u8);
    let x18: u64 = (x16 >> 8);
    let x19: u8 = ((x18 & (0xff as u64)) as u8);
    let x20: u64 = (x18 >> 8);
    let x21: u8 = ((x20 & (0xff as u64)) as u8);
    let x22: u8 = ((x20 >> 8) as u8);
    let x23: u8 = ((x7 & (0xff as u64)) as u8);
    let x24: u64 = (x7 >> 8);
    let x25: u8 = ((x24 & (0xff as u64)) as u8);
    let x26: u64 = (x24 >> 8);
    let x27: u8 = ((x26 & (0xff as u64)) as u8);
    let x28: u64 = (x26 >> 8);
    let x29: u8 = ((x28 & (0xff as u64)) as u8);
    let x30: u64 = (x28 >> 8);
    let x31: u8 = ((x30 & (0xff as u64)) as u8);
    let x32: u64 = (x30 >> 8);
    let x33: u8 = ((x32 & (0xff as u64)) as u8);
    let x34: u64 = (x32 >> 8);
    let x35: u8 = ((x34 & (0xff as u64)) as u8);
    let x36: u8 = ((x34 >> 8) as u8);
    let x37: u8 = ((x6 & (0xff as u64)) as u8);
    let x38: u64 = (x6 >> 8);
    let x39: u8 = ((x38 & (0xff as u64)) as u8);
    let x40: u64 = (x38 >> 8);
    let x41: u8 = ((x40 & (0xff as u64)) as u8);
    let x42: u64 = (x40 >> 8);
    let x43: u8 = ((x42 & (0xff as u64)) as u8);
    let x44: u64 = (x42 >> 8);
    let x45: u8 = ((x44 & (0xff as u64)) as u8);
    let x46: u64 = (x44 >> 8);
    let x47: u8 = ((x46 & (0xff as u64)) as u8);
    let x48: u64 = (x46 >> 8);
    let x49: u8 = ((x48 & (0xff as u64)) as u8);
    let x50: u8 = ((x48 >> 8) as u8);
    let x51: u8 = ((x5 & (0xff as u64)) as u8);
    let x52: u64 = (x5 >> 8);
    let x53: u8 = ((x52 & (0xff as u64)) as u8);
    let x54: u64 = (x52 >> 8);
    let x55: u8 = ((x54 & (0xff as u64)) as u8);
    let x56: u64 = (x54 >> 8);
    let x57: u8 = ((x56 & (0xff as u64)) as u8);
    let x58: u64 = (x56 >> 8);
    let x59: u8 = ((x58 & (0xff as u64)) as u8);
    let x60: u64 = (x58 >> 8);
    let x61: u8 = ((x60 & (0xff as u64)) as u8);
    let x62: u64 = (x60 >> 8);
    let x63: u8 = ((x62 & (0xff as u64)) as u8);
    let x64: u8 = ((x62 >> 8) as u8);
    let x65: u8 = ((x4 & (0xff as u64)) as u8);
    let x66: u64 = (x4 >> 8);
    let x67: u8 = ((x66 & (0xff as u64)) as u8);
    let x68: u64 = (x66 >> 8);
    let x69: u8 = ((x68 & (0xff as u64)) as u8);
    let x70: u64 = (x68 >> 8);
    let x71: u8 = ((x70 & (0xff as u64)) as u8);
    let x72: u64 = (x70 >> 8);
    let x73: u8 = ((x72 & (0xff as u64)) as u8);
    let x74: u64 = (x72 >> 8);
    let x75: u8 = ((x74 & (0xff as u64)) as u8);
    let x76: u64 = (x74 >> 8);
    let x77: u8 = ((x76 & (0xff as u64)) as u8);
    let x78: u8 = ((x76 >> 8) as u8);
    let x79: u8 = ((x3 & (0xff as u64)) as u8);
    let x80: u64 = (x3 >> 8);
    let x81: u8 = ((x80 & (0xff as u64)) as u8);
    let x82: u64 = (x80 >> 8);
    let x83: u8 = ((x82 & (0xff as u64)) as u8);
    let x84: u64 = (x82 >> 8);
    let x85: u8 = ((x84 & (0xff as u64)) as u8);
    let x86: u64 = (x84 >> 8);
    let x87: u8 = ((x86 & (0xff as u64)) as u8);
    let x88: u64 = (x86 >> 8);
    let x89: u8 = ((x88 & (0xff as u64)) as u8);
    let x90: u64 = (x88 >> 8);
    let x91: u8 = ((x90 & (0xff as u64)) as u8);
    let x92: u8 = ((x90 >> 8) as u8);
    let x93: u8 = ((x2 & (0xff as u64)) as u8);
    let x94: u64 = (x2 >> 8);
    let x95: u8 = ((x94 & (0xff as u64)) as u8);
    let x96: u64 = (x94 >> 8);
    let x97: u8 = ((x96 & (0xff as u64)) as u8);
    let x98: u64 = (x96 >> 8);
    let x99: u8 = ((x98 & (0xff as u64)) as u8);
    let x100: u64 = (x98 >> 8);
    let x101: u8 = ((x100 & (0xff as u64)) as u8);
    let x102: u64 = (x100 >> 8);
    let x103: u8 = ((x102 & (0xff as u64)) as u8);
    let x104: u64 = (x102 >> 8);
    let x105: u8 = ((x104 & (0xff as u64)) as u8);
    let x106: u8 = ((x104 >> 8) as u8);
    let x107: u8 = ((x1 & (0xff as u64)) as u8);
    let x108: u64 = (x1 >> 8);
    let x109: u8 = ((x108 & (0xff as u64)) as u8);
    let x110: u64 = (x108 >> 8);
    let x111: u8 = ((x110 & (0xff as u64)) as u8);
    let x112: u64 = (x110 >> 8);
    let x113: u8 = ((x112 & (0xff as u64)) as u8);
    let x114: u64 = (x112 >> 8);
    let x115: u8 = ((x114 & (0xff as u64)) as u8);
    let x116: u64 = (x114 >> 8);
    let x117: u8 = ((x116 & (0xff as u64)) as u8);
    let x118: u64 = (x116 >> 8);
    let x119: u8 = ((x118 & (0xff as u64)) as u8);
    let x120: u8 = ((x118 >> 8) as u8);
    out1[0] = x9;
    out1[1] = x11;
    out1[2] = x13;
    out1[3] = x15;
    out1[4] = x17;
    out1[5] = x19;
    out1[6] = x21;
    out1[7] = x22;
    out1[8] = x23;
    out1[9] = x25;
    out1[10] = x27;
    out1[11] = x29;
    out1[12] = x31;
    out1[13] = x33;
    out1[14] = x35;
    out1[15] = x36;
    out1[16] = x37;
    out1[17] = x39;
    out1[18] = x41;
    out1[19] = x43;
    out1[20] = x45;
    out1[21] = x47;
    out1[22] = x49;
    out1[23] = x50;
    out1[24] = x51;
    out1[25] = x53;
    out1[26] = x55;
    out1[27] = x57;
    out1[28] = x59;
    out1[29] = x61;
    out1[30] = x63;
    out1[31] = x64;
    out1[32] = x65;
    out1[33] = x67;
    out1[34] = x69;
    out1[35] = x71;
    out1[36] = x73;
    out1[37] = x75;
    out1[38] = x77;
    out1[39] = x78;
    out1[40] = x79;
    out1[41] = x81;
    out1[42] = x83;
    out1[43] = x85;
    out1[44] = x87;
    out1[45] = x89;
    out1[46] = x91;
    out1[47] = x92;
    out1[48] = x93;
    out1[49] = x95;
    out1[50] = x97;
    out1[51] = x99;
    out1[52] = x101;
    out1[53] = x103;
    out1[54] = x105;
    out1[55] = x106;
    out1[56] = x107;
    out1[57] = x109;
    out1[58] = x111;
    out1[59] = x113;
    out1[60] = x115;
    out1[61] = x117;
    out1[62] = x119;
    out1[63] = x120;
}
/// The function fiat_bp512_scalar_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
///
/// Preconditions:
///   0 ≤ bytes_eval arg1 < m
/// Postconditions:
///   eval out1 mod m = bytes_eval arg1 mod m
///   0 ≤ eval out1 < m
///
/// Input Bounds:
///   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub const fn fiat_bp512_scalar_from_bytes(out1: &mut [u64; 8], arg1: &[u8; 64]) {
    let x1: u64 = (((arg1[63]) as u64) << 56);
    let x2: u64 = (((arg1[62]) as u64) << 48);
    let x3: u64 = (((arg1[61]) as u64) << 40);
    let x4: u64 = (((arg1[60]) as u64) << 32);
    let x5: u64 = (((arg1[59]) as u64) << 24);
    let x6: u64 = (((arg1[58]) as u64) << 16);
    let x7: u64 = (((arg1[57]) as u64) << 8);
    let x8: u8 = (arg1[56]);
    let x9: u64 = (((arg1[55]) as u64) << 56);
    let x10: u64 = (((arg1[54]) as u64) << 48);
    let x11: u64 = (((arg1[53]) as u64) << 40);
    let x12: u64 = (((arg1[52]) as u64) << 32);
    let x13: u64 = (((arg1[51]) as u64) << 24);
    let x14: u64 = (((arg1[50]) as u64) << 16);
    let x15: u64 = (((arg1[49]) as u64) << 8);
    let x16: u8 = (arg1[48]);
    let x17: u64 = (((arg1[47]) as u64) << 56);
    let x18: u64 = (((arg1[46]) as u64) << 48);
    let x19: u64 = (((arg1[45]) as u64) << 40);
    let x20: u64 = (((arg1[44]) as u64) << 32);
    let x21: u64 = (((arg1[43]) as u64) << 24);
    let x22: u64 = (((arg1[42]) as u64) << 16);
    let x23: u64 = (((arg1[41]) as u64) << 8);
    let x24: u8 = (arg1[40]);
    let x25: u64 = (((arg1[39]) as u64) << 56);
    let x26: u64 = (((arg1[38]) as u64) << 48);
    let x27: u64 = (((arg1[37]) as u64) << 40);
    let x28: u64 = (((arg1[36]) as u64) << 32);
    let x29: u64 = (((arg1[35]) as u64) << 24);
    let x30: u64 = (((arg1[34]) as u64) << 16);
    let x31: u64 = (((arg1[33]) as u64) << 8);
    let x32: u8 = (arg1[32]);
    let x33: u64 = (((arg1[31]) as u64) << 56);
    let x34: u64 = (((arg1[30]) as u64) << 48);
    let x35: u64 = (((arg1[29]) as u64) << 40);
    let x36: u64 = (((arg1[28]) as u64) << 32);
    let x37: u64 = (((arg1[27]) as u64) << 24);
    let x38: u64 = (((arg1[26]) as u64) << 16);
    let x39: u64 = (((arg1[25]) as u64) << 8);
    let x40: u8 = (arg1[24]);
    let x41: u64 = (((arg1[23]) as u64) << 56);
    let x42: u64 = (((arg1[22]) as u64) << 48);
    let x43: u64 = (((arg1[21]) as u64) << 40);
    let x44: u64 = (((arg1[20]) as u64) << 32);
    let x45: u64 = (((arg1[19]) as u64) << 24);
    let x46: u64 = (((arg1[18]) as u64) << 16);
    let x47: u64 = (((arg1[17]) as u64) << 8);
    let x48: u8 = (arg1[16]);
    let x49: u64 = (((arg1[15]) as u64) << 56);
    let x50: u64 = (((arg1[14]) as u64) << 48);
    let x51: u64 = (((arg1[13]) as u64) << 40);
    let x52: u64 = (((arg1[12]) as u64) << 32);
    let x53: u64 = (((arg1[11]) as u64) << 24);
    let x54: u64 = (((arg1[10]) as u64) << 16);
    let x55: u64 = (((arg1[9]) as u64) << 8);
    let x56: u8 = (arg1[8]);
    let x57: u64 = (((arg1[7]) as u64) << 56);
    let x58: u64 = (((arg1[6]) as u64) << 48);
    let x59: u64 = (((arg1[5]) as u64) << 40);
    let x60: u64 = (((arg1[4]) as u64) << 32);
    let x61: u64 = (((arg1[3]) as u64) << 24);
    let x62: u64 = (((arg1[2]) as u64) << 16);
    let x63: u64 = (((arg1[1]) as u64) << 8);
    let x64: u8 = (arg1[0]);
    let x65: u64 = (x63 + (x64 as u64));
    let x66: u64 = (x62 + x65);
    let x67: u64 = (x61 + x66);
    let x68: u64 = (x60 + x67);
    let x69: u64 = (x59 + x68);
    let x70: u64 = (x58 + x69);
    let x71: u64 = (x57 + x70);
    let x72: u64 = (x55 + (x56 as u64));
    let x73: u64 = (x54 + x72);
    let x74: u64 = (x53 + x73);
    let x75: u64 = (x52 + x74);
    let x76: u64 = (x51 + x75);
    let x77: u64 = (x50 + x76);
    let x78: u64 = (x49 + x77);
    let x79: u64 = (x47 + (x48 as u64));
    let x80: u64 = (x46 + x79);
    let x81: u64 = (x45 + x80);
    let x82: u64 = (x44 + x81);
    let x83: u64 = (x43 + x82);
    let x84: u64 = (x42 + x83);
    let x85: u64 = (x41 + x84);
    let x86: u64 = (x39 + (x40 as u64));
    let x87: u64 = (x38 + x86);
    let x88: u64 = (x37 + x87);
    let x89: u64 = (x36 + x88);
    let x90: u64 = (x35 + x89);
    let x91: u64 = (x34 + x90);
    let x92: u64 = (x33 + x91);
    let x93: u64 = (x31 + (x32 as u64));
    let x94: u64 = (x30 + x93);
    let x95: u64 = (x29 + x94);
    let x96: u64 = (x28 + x95);
    let x97: u64 = (x27 + x96);
    let x98: u64 = (x26 + x97);
    let x99: u64 = (x25 + x98);
    let x100: u64 = (x23 + (x24 as u64));
    let x101: u64 = (x22 + x100);
    let x102: u64 = (x21 + x101);
    let x103: u64 = (x20 + x102);
    let x104: u64 = (x19 + x103);
    let x105: u64 = (x18 + x104);
    let x106: u64 = (x17 + x105);
    let x107: u64 = (x15 + (x16 as u64));
    let x108: u64 = (x14 + x107);
    let x109: u64 = (x13 + x108);
    let x110: u64 = (x12 + x109);
    let x111: u64 = (x11 + x110);
    let x112: u64 = (x10 + x111);
    let x113: u64 = (x9 + x112);
    let x114: u64 = (x7 + (x8 as u64));
    let x115: u64 = (x6 + x114);
    let x116: u64 = (x5 + x115);
    let x117: u64 = (x4 + x116);
    let x118: u64 = (x3 + x117);
    let x119: u64 = (x2 + x118);
    let x120: u64 = (x1 + x119);
    out1[0] = x71;
    out1[1] = x78;
    out1[2] = x85;
    out1[3] = x92;
    out1[4] = x99;
    out1[5] = x106;
    out1[6] = x113;
    out1[7] = x120;
}
/// The function fiat_bp512_scalar_set_one returns the field element one in the Montgomery domain.
///
/// Postconditions:
///   eval (from_montgomery out1) mod m = 1 mod m
///   0 ≤ eval out1 < m
///
#[inline]
pub const fn fiat_bp512_scalar_set_one(
    out1: &mut fiat_bp512_scalar_montgomery_domain_field_element,
) {
    let out1 = &mut out1.0;
    out1[0] = 0x4a78697d6356ff97;
    out1[1] = 0xe24e2c7ef7a22522;
    out1[2] = 0xbe799ee68053efb8;
    out1[3] = 0xaac1a3beb356d9e6;
    out1[4] = 0x299c63358fccf78f;
    out1[5] = 0x34cf724c4c362df1;
    out1[6] = 0xc02b1951cc3603f8;
    out1[7] = 0x5522624724163b74;
}
/// The function fiat_bp512_scalar_msat returns the saturated representation of the prime modulus.
///
/// Postconditions:
///   twos_complement_eval out1 = m
///   0 ≤ eval out1 < m
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub const fn fiat_bp512_scalar_msat(out1: &mut [u64; 9]) {
    out1[0] = 0xb58796829ca90069;
    out1[1] = 0x1db1d381085ddadd;
    out1[2] = 0x418661197fac1047;
    out1[3] = 0x553e5c414ca92619;
    out1[4] = 0xd6639cca70330870;
    out1[5] = 0xcb308db3b3c9d20e;
    out1[6] = 0x3fd4e6ae33c9fc07;
    out1[7] = 0xaadd9db8dbe9c48b;
    out1[8] = (0x0 as u64);
}
/// The function fiat_bp512_scalar_divstep computes a divstep.
///
/// Preconditions:
///   0 ≤ eval arg4 < m
///   0 ≤ eval arg5 < m
/// Postconditions:
///   out1 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then 1 - arg1 else 1 + arg1)
///   twos_complement_eval out2 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then twos_complement_eval arg3 else twos_complement_eval arg2)
///   twos_complement_eval out3 = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then ⌊(twos_complement_eval arg3 - twos_complement_eval arg2) / 2⌋ else ⌊(twos_complement_eval arg3 + (twos_complement_eval arg3 mod 2) * twos_complement_eval arg2) / 2⌋)
///   eval (from_montgomery out4) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (2 * eval (from_montgomery arg5)) mod m else (2 * eval (from_montgomery arg4)) mod m)
///   eval (from_montgomery out5) mod m = (if 0 < arg1 ∧ (twos_complement_eval arg3) is odd then (eval (from_montgomery arg4) - eval (from_montgomery arg4)) mod m else (eval (from_montgomery arg5) + (twos_complement_eval arg3 mod 2) * eval (from_montgomery arg4)) mod m)
///   0 ≤ eval out5 < m
///   0 ≤ eval out5 < m
///   0 ≤ eval out2 < m
///   0 ≤ eval out3 < m
///
/// Input Bounds:
///   arg1: [0x0 ~> 0xffffffffffffffff]
///   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   arg5: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
/// Output Bounds:
///   out1: [0x0 ~> 0xffffffffffffffff]
///   out2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out4: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
///   out5: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub const fn fiat_bp512_scalar_divstep(
    out1: &mut u64,
    out2: &mut [u64; 9],
    out3: &mut [u64; 9],
    out4: &mut [u64; 8],
    out5: &mut [u64; 8],
    arg1: u64,
    arg2: &[u64; 9],
    arg3: &[u64; 9],
    arg4: &[u64; 8],
    arg5: &[u64; 8],
) {
    let mut x1: u64 = 0;
    let mut x2: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x1, &mut x2, 0x0, (!arg1), (0x1 as u64));
    let x3: fiat_bp512_scalar_u1 = (((x1 >> 63) as fiat_bp512_scalar_u1)
        & (((arg3[0]) & (0x1 as u64)) as fiat_bp512_scalar_u1));
    let mut x4: u64 = 0;
    let mut x5: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x4, &mut x5, 0x0, (!arg1), (0x1 as u64));
    let mut x6: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x6, x3, arg1, x4);
    let mut x7: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x7, x3, (arg2[0]), (arg3[0]));
    let mut x8: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x8, x3, (arg2[1]), (arg3[1]));
    let mut x9: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x9, x3, (arg2[2]), (arg3[2]));
    let mut x10: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x10, x3, (arg2[3]), (arg3[3]));
    let mut x11: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x11, x3, (arg2[4]), (arg3[4]));
    let mut x12: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x12, x3, (arg2[5]), (arg3[5]));
    let mut x13: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x13, x3, (arg2[6]), (arg3[6]));
    let mut x14: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x14, x3, (arg2[7]), (arg3[7]));
    let mut x15: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x15, x3, (arg2[8]), (arg3[8]));
    let mut x16: u64 = 0;
    let mut x17: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x16, &mut x17, 0x0, (0x1 as u64), (!(arg2[0])));
    let mut x18: u64 = 0;
    let mut x19: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x18, &mut x19, x17, (0x0 as u64), (!(arg2[1])));
    let mut x20: u64 = 0;
    let mut x21: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x20, &mut x21, x19, (0x0 as u64), (!(arg2[2])));
    let mut x22: u64 = 0;
    let mut x23: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x22, &mut x23, x21, (0x0 as u64), (!(arg2[3])));
    let mut x24: u64 = 0;
    let mut x25: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x24, &mut x25, x23, (0x0 as u64), (!(arg2[4])));
    let mut x26: u64 = 0;
    let mut x27: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x26, &mut x27, x25, (0x0 as u64), (!(arg2[5])));
    let mut x28: u64 = 0;
    let mut x29: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x28, &mut x29, x27, (0x0 as u64), (!(arg2[6])));
    let mut x30: u64 = 0;
    let mut x31: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x30, &mut x31, x29, (0x0 as u64), (!(arg2[7])));
    let mut x32: u64 = 0;
    let mut x33: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x32, &mut x33, x31, (0x0 as u64), (!(arg2[8])));
    let mut x34: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x34, x3, (arg3[0]), x16);
    let mut x35: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x35, x3, (arg3[1]), x18);
    let mut x36: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x36, x3, (arg3[2]), x20);
    let mut x37: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x37, x3, (arg3[3]), x22);
    let mut x38: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x38, x3, (arg3[4]), x24);
    let mut x39: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x39, x3, (arg3[5]), x26);
    let mut x40: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x40, x3, (arg3[6]), x28);
    let mut x41: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x41, x3, (arg3[7]), x30);
    let mut x42: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x42, x3, (arg3[8]), x32);
    let mut x43: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x43, x3, (arg4[0]), (arg5[0]));
    let mut x44: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x44, x3, (arg4[1]), (arg5[1]));
    let mut x45: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x45, x3, (arg4[2]), (arg5[2]));
    let mut x46: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x46, x3, (arg4[3]), (arg5[3]));
    let mut x47: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x47, x3, (arg4[4]), (arg5[4]));
    let mut x48: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x48, x3, (arg4[5]), (arg5[5]));
    let mut x49: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x49, x3, (arg4[6]), (arg5[6]));
    let mut x50: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x50, x3, (arg4[7]), (arg5[7]));
    let mut x51: u64 = 0;
    let mut x52: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x51, &mut x52, 0x0, x43, x43);
    let mut x53: u64 = 0;
    let mut x54: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x53, &mut x54, x52, x44, x44);
    let mut x55: u64 = 0;
    let mut x56: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x55, &mut x56, x54, x45, x45);
    let mut x57: u64 = 0;
    let mut x58: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x57, &mut x58, x56, x46, x46);
    let mut x59: u64 = 0;
    let mut x60: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x59, &mut x60, x58, x47, x47);
    let mut x61: u64 = 0;
    let mut x62: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x61, &mut x62, x60, x48, x48);
    let mut x63: u64 = 0;
    let mut x64: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x63, &mut x64, x62, x49, x49);
    let mut x65: u64 = 0;
    let mut x66: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x65, &mut x66, x64, x50, x50);
    let mut x67: u64 = 0;
    let mut x68: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x67, &mut x68, 0x0, x51, 0xb58796829ca90069);
    let mut x69: u64 = 0;
    let mut x70: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x69, &mut x70, x68, x53, 0x1db1d381085ddadd);
    let mut x71: u64 = 0;
    let mut x72: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x71, &mut x72, x70, x55, 0x418661197fac1047);
    let mut x73: u64 = 0;
    let mut x74: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x73, &mut x74, x72, x57, 0x553e5c414ca92619);
    let mut x75: u64 = 0;
    let mut x76: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x75, &mut x76, x74, x59, 0xd6639cca70330870);
    let mut x77: u64 = 0;
    let mut x78: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x77, &mut x78, x76, x61, 0xcb308db3b3c9d20e);
    let mut x79: u64 = 0;
    let mut x80: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x79, &mut x80, x78, x63, 0x3fd4e6ae33c9fc07);
    let mut x81: u64 = 0;
    let mut x82: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x81, &mut x82, x80, x65, 0xaadd9db8dbe9c48b);
    let mut x83: u64 = 0;
    let mut x84: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x83, &mut x84, x82, (x66 as u64), (0x0 as u64));
    let x85: u64 = (arg4[7]);
    let x86: u64 = (arg4[6]);
    let x87: u64 = (arg4[5]);
    let x88: u64 = (arg4[4]);
    let x89: u64 = (arg4[3]);
    let x90: u64 = (arg4[2]);
    let x91: u64 = (arg4[1]);
    let x92: u64 = (arg4[0]);
    let mut x93: u64 = 0;
    let mut x94: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x93, &mut x94, 0x0, (0x0 as u64), x92);
    let mut x95: u64 = 0;
    let mut x96: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x95, &mut x96, x94, (0x0 as u64), x91);
    let mut x97: u64 = 0;
    let mut x98: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x97, &mut x98, x96, (0x0 as u64), x90);
    let mut x99: u64 = 0;
    let mut x100: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x99, &mut x100, x98, (0x0 as u64), x89);
    let mut x101: u64 = 0;
    let mut x102: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x101, &mut x102, x100, (0x0 as u64), x88);
    let mut x103: u64 = 0;
    let mut x104: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x103, &mut x104, x102, (0x0 as u64), x87);
    let mut x105: u64 = 0;
    let mut x106: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x105, &mut x106, x104, (0x0 as u64), x86);
    let mut x107: u64 = 0;
    let mut x108: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x107, &mut x108, x106, (0x0 as u64), x85);
    let mut x109: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x109, x108, (0x0 as u64), 0xffffffffffffffff);
    let mut x110: u64 = 0;
    let mut x111: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x110, &mut x111, 0x0, x93, (x109 & 0xb58796829ca90069));
    let mut x112: u64 = 0;
    let mut x113: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x112, &mut x113, x111, x95, (x109 & 0x1db1d381085ddadd));
    let mut x114: u64 = 0;
    let mut x115: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x114, &mut x115, x113, x97, (x109 & 0x418661197fac1047));
    let mut x116: u64 = 0;
    let mut x117: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x116, &mut x117, x115, x99, (x109 & 0x553e5c414ca92619));
    let mut x118: u64 = 0;
    let mut x119: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x118,
        &mut x119,
        x117,
        x101,
        (x109 & 0xd6639cca70330870),
    );
    let mut x120: u64 = 0;
    let mut x121: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x120,
        &mut x121,
        x119,
        x103,
        (x109 & 0xcb308db3b3c9d20e),
    );
    let mut x122: u64 = 0;
    let mut x123: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x122,
        &mut x123,
        x121,
        x105,
        (x109 & 0x3fd4e6ae33c9fc07),
    );
    let mut x124: u64 = 0;
    let mut x125: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(
        &mut x124,
        &mut x125,
        x123,
        x107,
        (x109 & 0xaadd9db8dbe9c48b),
    );
    let mut x126: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x126, x3, (arg5[0]), x110);
    let mut x127: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x127, x3, (arg5[1]), x112);
    let mut x128: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x128, x3, (arg5[2]), x114);
    let mut x129: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x129, x3, (arg5[3]), x116);
    let mut x130: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x130, x3, (arg5[4]), x118);
    let mut x131: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x131, x3, (arg5[5]), x120);
    let mut x132: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x132, x3, (arg5[6]), x122);
    let mut x133: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x133, x3, (arg5[7]), x124);
    let x134: fiat_bp512_scalar_u1 = ((x34 & (0x1 as u64)) as fiat_bp512_scalar_u1);
    let mut x135: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x135, x134, (0x0 as u64), x7);
    let mut x136: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x136, x134, (0x0 as u64), x8);
    let mut x137: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x137, x134, (0x0 as u64), x9);
    let mut x138: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x138, x134, (0x0 as u64), x10);
    let mut x139: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x139, x134, (0x0 as u64), x11);
    let mut x140: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x140, x134, (0x0 as u64), x12);
    let mut x141: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x141, x134, (0x0 as u64), x13);
    let mut x142: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x142, x134, (0x0 as u64), x14);
    let mut x143: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x143, x134, (0x0 as u64), x15);
    let mut x144: u64 = 0;
    let mut x145: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x144, &mut x145, 0x0, x34, x135);
    let mut x146: u64 = 0;
    let mut x147: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x146, &mut x147, x145, x35, x136);
    let mut x148: u64 = 0;
    let mut x149: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x148, &mut x149, x147, x36, x137);
    let mut x150: u64 = 0;
    let mut x151: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x150, &mut x151, x149, x37, x138);
    let mut x152: u64 = 0;
    let mut x153: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x152, &mut x153, x151, x38, x139);
    let mut x154: u64 = 0;
    let mut x155: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x154, &mut x155, x153, x39, x140);
    let mut x156: u64 = 0;
    let mut x157: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x156, &mut x157, x155, x40, x141);
    let mut x158: u64 = 0;
    let mut x159: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x158, &mut x159, x157, x41, x142);
    let mut x160: u64 = 0;
    let mut x161: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x160, &mut x161, x159, x42, x143);
    let mut x162: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x162, x134, (0x0 as u64), x43);
    let mut x163: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x163, x134, (0x0 as u64), x44);
    let mut x164: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x164, x134, (0x0 as u64), x45);
    let mut x165: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x165, x134, (0x0 as u64), x46);
    let mut x166: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x166, x134, (0x0 as u64), x47);
    let mut x167: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x167, x134, (0x0 as u64), x48);
    let mut x168: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x168, x134, (0x0 as u64), x49);
    let mut x169: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x169, x134, (0x0 as u64), x50);
    let mut x170: u64 = 0;
    let mut x171: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x170, &mut x171, 0x0, x126, x162);
    let mut x172: u64 = 0;
    let mut x173: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x172, &mut x173, x171, x127, x163);
    let mut x174: u64 = 0;
    let mut x175: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x174, &mut x175, x173, x128, x164);
    let mut x176: u64 = 0;
    let mut x177: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x176, &mut x177, x175, x129, x165);
    let mut x178: u64 = 0;
    let mut x179: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x178, &mut x179, x177, x130, x166);
    let mut x180: u64 = 0;
    let mut x181: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x180, &mut x181, x179, x131, x167);
    let mut x182: u64 = 0;
    let mut x183: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x182, &mut x183, x181, x132, x168);
    let mut x184: u64 = 0;
    let mut x185: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x184, &mut x185, x183, x133, x169);
    let mut x186: u64 = 0;
    let mut x187: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x186, &mut x187, 0x0, x170, 0xb58796829ca90069);
    let mut x188: u64 = 0;
    let mut x189: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x188, &mut x189, x187, x172, 0x1db1d381085ddadd);
    let mut x190: u64 = 0;
    let mut x191: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x190, &mut x191, x189, x174, 0x418661197fac1047);
    let mut x192: u64 = 0;
    let mut x193: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x192, &mut x193, x191, x176, 0x553e5c414ca92619);
    let mut x194: u64 = 0;
    let mut x195: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x194, &mut x195, x193, x178, 0xd6639cca70330870);
    let mut x196: u64 = 0;
    let mut x197: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x196, &mut x197, x195, x180, 0xcb308db3b3c9d20e);
    let mut x198: u64 = 0;
    let mut x199: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x198, &mut x199, x197, x182, 0x3fd4e6ae33c9fc07);
    let mut x200: u64 = 0;
    let mut x201: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x200, &mut x201, x199, x184, 0xaadd9db8dbe9c48b);
    let mut x202: u64 = 0;
    let mut x203: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_subborrowx_u64(&mut x202, &mut x203, x201, (x185 as u64), (0x0 as u64));
    let mut x204: u64 = 0;
    let mut x205: fiat_bp512_scalar_u1 = 0;
    fiat_bp512_scalar_addcarryx_u64(&mut x204, &mut x205, 0x0, x6, (0x1 as u64));
    let x206: u64 = ((x144 >> 1) | ((x146 << 63) & 0xffffffffffffffff));
    let x207: u64 = ((x146 >> 1) | ((x148 << 63) & 0xffffffffffffffff));
    let x208: u64 = ((x148 >> 1) | ((x150 << 63) & 0xffffffffffffffff));
    let x209: u64 = ((x150 >> 1) | ((x152 << 63) & 0xffffffffffffffff));
    let x210: u64 = ((x152 >> 1) | ((x154 << 63) & 0xffffffffffffffff));
    let x211: u64 = ((x154 >> 1) | ((x156 << 63) & 0xffffffffffffffff));
    let x212: u64 = ((x156 >> 1) | ((x158 << 63) & 0xffffffffffffffff));
    let x213: u64 = ((x158 >> 1) | ((x160 << 63) & 0xffffffffffffffff));
    let x214: u64 = ((x160 & 0x8000000000000000) | (x160 >> 1));
    let mut x215: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x215, x84, x67, x51);
    let mut x216: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x216, x84, x69, x53);
    let mut x217: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x217, x84, x71, x55);
    let mut x218: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x218, x84, x73, x57);
    let mut x219: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x219, x84, x75, x59);
    let mut x220: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x220, x84, x77, x61);
    let mut x221: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x221, x84, x79, x63);
    let mut x222: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x222, x84, x81, x65);
    let mut x223: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x223, x203, x186, x170);
    let mut x224: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x224, x203, x188, x172);
    let mut x225: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x225, x203, x190, x174);
    let mut x226: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x226, x203, x192, x176);
    let mut x227: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x227, x203, x194, x178);
    let mut x228: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x228, x203, x196, x180);
    let mut x229: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x229, x203, x198, x182);
    let mut x230: u64 = 0;
    fiat_bp512_scalar_cmovznz_u64(&mut x230, x203, x200, x184);
    *out1 = x204;
    out2[0] = x7;
    out2[1] = x8;
    out2[2] = x9;
    out2[3] = x10;
    out2[4] = x11;
    out2[5] = x12;
    out2[6] = x13;
    out2[7] = x14;
    out2[8] = x15;
    out3[0] = x206;
    out3[1] = x207;
    out3[2] = x208;
    out3[3] = x209;
    out3[4] = x210;
    out3[5] = x211;
    out3[6] = x212;
    out3[7] = x213;
    out3[8] = x214;
    out4[0] = x215;
    out4[1] = x216;
    out4[2] = x217;
    out4[3] = x218;
    out4[4] = x219;
    out4[5] = x220;
    out4[6] = x221;
    out4[7] = x222;
    out5[0] = x223;
    out5[1] = x224;
    out5[2] = x225;
    out5[3] = x226;
    out5[4] = x227;
    out5[5] = x228;
    out5[6] = x229;
    out5[7] = x230;
}
/// The function fiat_bp512_scalar_divstep_precomp returns the precomputed value for Bernstein-Yang-inversion (in montgomery form).
///
/// Postconditions:
///   eval (from_montgomery out1) = ⌊(m - 1) / 2⌋^(if ⌊log2 m⌋ + 1 < 46 then ⌊(49 * (⌊log2 m⌋ + 1) + 80) / 17⌋ else ⌊(49 * (⌊log2 m⌋ + 1) + 57) / 17⌋)
///   0 ≤ eval out1 < m
///
/// Output Bounds:
///   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
#[inline]
pub const fn fiat_bp512_scalar_divstep_precomp(out1: &mut [u64; 8]) {
    out1[0] = 0x4277e35f2c366d57;
    out1[1] = 0x82388037b0e8321e;
    out1[2] = 0x730f5cd689f5b0c3;
    out1[3] = 0xa4e60b8ad8c2ab0c;
    out1[4] = 0x528b92e61615df0e;
    out1[5] = 0x182049df255b13d9;
    out1[6] = 0x46934422b8efb40e;
    out1[7] = 0x1a016275847fd30b;
}
